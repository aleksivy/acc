Функция ПолучитьОборотПоСчетам( пСчетДт, псзСчетаКт)
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	лЗапрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон) );
	лЗапрос.УстановитьПараметр("СчетДт", пСчетДт);
	лЗапрос.УстановитьПараметр("СчетаКт", псзСчетаКт);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(Рег.СуммаОборот) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, , СчетДт В ИЕРАРХИИ (&СчетДт), , СчетКт В ИЕРАРХИИ (&СчетаКт), , Организация = &Организация) КАК Рег
	|";
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Возврат ?(лВыборка.Следующий(), лВыборка.Сумма, 0);
КонецФункции

Функция НайтиСоздатьБухСправку( пСоздаватьБухСправку )
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("Дата", ДатаКон);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка
	|ИЗ
	|	Документ.БухгалтерскаяСправка КАК Док
	|ГДЕ
	|	Док.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(Док.Дата, ДЕНЬ) <= &Дата
	|	И КОНЕЦПЕРИОДА(Док.Дата, ДЕНЬ) >= &Дата
	|	И Док.Комментарий ПОДОБНО ""Автозаполнение : Декларация о прибыли : Приложение РИ""
	|";
	лВыборка = лЗапрос.Выполнить().Выбрать();
	Если лВыборка.Следующий() Тогда
		лБухСправка = лВыборка.Ссылка;
	Иначе
		Если пСоздаватьБухСправку Тогда
			лБухСправка = Документы.БухгалтерскаяСправка.СоздатьДокумент();
			лБухСправка.Организация = Организация;
			лБухСправка.Дата = ДатаКон - 10;
			лБухСправка.Комментарий = "Автозаполнение : Декларация о прибыли : Приложение РИ";
			лБухСправка.Записать(РежимЗаписиДокумента.Запись);
			лБухСправка = лБухСправка.Ссылка;
		Иначе
			лБухСправка = Документы.БухгалтерскаяСправка.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	Возврат лБухСправка;
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если Не ЗначениеЗаполнено(Организация) Тогда Сообщить("Не указан реквизит : 'Организация'"); Возврат; КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаНач) Тогда Сообщить("Не указан реквизит : 'ДатаНач'"); Возврат; КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаКон) Тогда Сообщить("Не указан реквизит : 'ДатаКон'"); Возврат; КонецЕсли;
	Если Не ЗначениеЗаполнено(БухСправка) Тогда БухСправка = НайтиСоздатьБухСправку( Истина ); КонецЕсли;
	Если Не ЗначениеЗаполнено(БухСправка) Тогда Сообщить("Не указан реквизит : 'БухСправка'"); Возврат; КонецЕсли;
	
	лСтатья211 = Справочники.СтатьиНалоговыхДеклараций.НП15_РИ_Резерв_47_Приход;
	лСтатья221 = Справочники.СтатьиНалоговыхДеклараций.НП15_РИ_Резерв_47_Расход;
	
	лСтатья212 = Справочники.СтатьиНалоговыхДеклараций.НП15_РИ_Резерв_38_Приход;
	лСтатья223 = Справочники.СтатьиНалоговыхДеклараций.НП15_РИ_Резерв_38_Корректировка;
	
	лсзСчетаДт = Новый СписокЗначений;
	лсзСчетаДт.Добавить( ПланыСчетов.Хозрасчетный.АдминистративныеРасходы ); 						// 92
	лсзСчетаДт.Добавить( ПланыСчетов.Хозрасчетный.РасходыНаСбыт ); 									// 93
	лсзСчетаДт.Добавить( ПланыСчетов.Хозрасчетный.ДругиеЗатратыОперационнойДеятельностиГруппа );	// 94
	
	лсзСчетаКт = Новый СписокЗначений;
	лсзСчетаКт.Добавить( ПланыСчетов.Хозрасчетный.ТоварыПотериТоваров ); 					// 2871
	лсзСчетаКт.Добавить( ПланыСчетов.Хозрасчетный.ОбеспечениеГарантийныхОбязательств ); 	// 473
	лсзСчетаКт.Добавить( ПланыСчетов.Хозрасчетный.ОбеспечениеПрочихЗатратИПлатежей ); 		// 474
	лсзСчетаКт.Добавить( ПланыСчетов.Хозрасчетный.ОбеспечениеИнвестиционнаяДеятельность ); 	// 475
	лСумма211 = ПолучитьОборотПоСчетам( лсзСчетаДт, лсзСчетаКт);
	
	лСчетДт = ПланыСчетов.Хозрасчетный.ДругиеЗатратыОперационнойДеятельностиГруппа;			// 94
	лсзСчетаКт = Новый СписокЗначений;
	лсзСчетаКт.Добавить( ПланыСчетов.Хозрасчетный.ПоЗадолженностиЗаРасчетыСБюджетом ); 		// 382
	лСумма212 = ПолучитьОборотПоСчетам( лСчетДт, лсзСчетаКт);
	
	лДокОбъект = БухСправка.ПолучитьОбъект();
	лДокОбъект.Проводки.Очистить();
	Если Не лСумма211 = 0 Тогда
		лНоваяСтрока = лДокОбъект.Проводки.Добавить();
		лНоваяСтрока.СчетДт = ПланыСчетов.Хозрасчетный.РазницыПоНалогуНаПрибыльРучныеКорректировки;
		лНоваяСтрока.СубконтоДт1 = ?(лСумма211 > 0, лСтатья211, лСтатья221);
		лНоваяСтрока.СчетКт = ПланыСчетов.Хозрасчетный.ВспомогательныйЗабалансовый;
		лНоваяСтрока.Сумма = лСумма211;
	КонецЕсли;
	Если Не лСумма212 = 0 Тогда
		лНоваяСтрока = лДокОбъект.Проводки.Добавить();
		лНоваяСтрока.СчетДт = ПланыСчетов.Хозрасчетный.РазницыПоНалогуНаПрибыльРучныеКорректировки;
		лНоваяСтрока.СубконтоДт1 = ?(лСумма212 > 0, лСтатья212, лСтатья223);
		лНоваяСтрока.СчетКт = ПланыСчетов.Хозрасчетный.ВспомогательныйЗабалансовый;
		лНоваяСтрока.Сумма = лСумма212;
	КонецЕсли;
	лДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(Организация) Тогда Организация = глЗначениеПеременной("ОсновнаяОрганизация"); КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаНач) Тогда ДатаНач = НачалоГода( ТекущаяДата() ); КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаКон) Тогда ДатаКон = КонецКвартала( ДобавитьМесяц(ТекущаяДата(), -1) ); КонецЕсли;
	Если Не ЗначениеЗаполнено(БухСправка) Тогда БухСправка = НайтиСоздатьБухСправку( Ложь ); КонецЕсли;
КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
	БухСправка = НайтиСоздатьБухСправку( Ложь );
КонецПроцедуры
