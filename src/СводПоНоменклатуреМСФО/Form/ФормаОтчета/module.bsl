Перем мсзСписокЗатратЭкспедирования;
Перем мсзСписокСчетовТМЦ;
Перем мсзСписокСчетовРезервов;
Перем мсзСписокСчетов39;

// УстановитьОтбор
//
Процедура УстановитьОтбор(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра)
	ЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	Если ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ЗначениеПараметра;	
		Попытка
			лЭтоГруппа = ЗначениеПараметра.ЭтоГруппа;
			Если лЭтоГруппа Тогда
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
			Иначе
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			КонецЕсли;
		Исключение
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		КонецПопытки;
	Иначе
		ЭлементОтбора.Использование = Ложь;
	КонецЕсли;
КонецПроцедуры

// УстановитьПараметр
//
Процедура УстановитьПараметр(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра)
	ПараметрДанныхТекущий = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	ПараметрДанныхТекущий.Значение = ЗначениеПараметра;
	ПараметрДанныхТекущий.Использование = ЗначениеЗаполнено(ЗначениеПараметра);
КонецПроцедуры

Процедура УстановитьПараметрыОтборы()
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек[ЭлементыФормы.СписокВариантов.Значение].Настройки);
	УстановитьПараметр(КомпоновщикНастроек, "Дата", КонецДня(Дата)+1 );
	УстановитьПараметр(КомпоновщикНастроек, "СписокЗатратЭкспедирования", мсзСписокЗатратЭкспедирования );
	УстановитьПараметр(КомпоновщикНастроек, "СписокСчетовТМЦ", мсзСписокСчетовТМЦ );
	УстановитьПараметр(КомпоновщикНастроек, "СписокСчетовРезервов", мсзСписокСчетовРезервов );
	УстановитьПараметр(КомпоновщикНастроек, "СписокСчетов39", мсзСписокСчетов39 );
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(Дата) Тогда Дата = КонецМесяца( НачалоМесяца(ТекущаяДата())-1 ); КонецЕсли;
	
	лсзВарианты = Новый СписокЗначений;
	Для каждого лВариант Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл лсзВарианты.Добавить( лВариант.Имя, лВариант.Представление ); КонецЦикла;
	ЭлементыФормы.СписокВариантов.СписокВыбора = лсзВарианты;
	ЭлементыФормы.СписокВариантов.Значение = лсзВарианты.Получить(0).Значение;
	
	мсзСписокЗатратЭкспедирования = Новый СписокЗначений;
	мсзСписокЗатратЭкспедирования.Добавить( Справочники.СтатьиЗатрат.НайтиПоНаименованию("експедиторські послуги (експортні)") );
	мсзСписокЗатратЭкспедирования.Добавить( Справочники.СтатьиЗатрат.НайтиПоНаименованию("навантаження") );
	
	мсзСписокСчетовТМЦ = Новый СписокЗначений;
	мсзСписокСчетовТМЦ.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("26") );
	мсзСписокСчетовТМЦ.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("281") );
	мсзСписокСчетовТМЦ.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("2872") );
	мсзСписокСчетовТМЦ.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("2873") );
	мсзСписокСчетовТМЦ.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("2875") );
	
	мсзСписокСчетовРезервов = Новый СписокЗначений;
	мсзСписокСчетовРезервов.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("284") );
	мсзСписокСчетовРезервов.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("2871") );
	мсзСписокСчетовРезервов.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("2874") );
	
	мсзСписокСчетов39 = Новый СписокЗначений;
	мсзСписокСчетов39.Добавить( ПланыСчетов.МСФО.НайтиПоКоду("391") );
	
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура СписокВариантовПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры
