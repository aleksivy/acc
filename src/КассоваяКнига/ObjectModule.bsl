#Если Клиент Тогда

Перем НП Экспорт;
Перем ВидЛистаКассовойКниги Экспорт;
Перем мВалютаРегламентированногоУчета Экспорт;

Функция ОрдерПоРегистратору(Регистратор)
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор",Регистратор);
    	
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	             |	ПриходныйКассовыйОрдер.ДокументОснование,
				 |	ПриходныйКассовыйОрдер.Ссылка
	             |ИЗ
	             |	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |ГДЕ
				 |  ПриходныйКассовыйОрдер.ДокументОснование = &Регистратор
				 |";
				 
	Результат=Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Документы.ПриходныйКассовыйОрдер.ПустаяСсылка();
	КонецЕсли;	

	
КонецФункции	

Процедура СформироватьЖурналРегистрацииПриходных(ДокументРезультат)
	
	//Вывод шапки
	Макет = ПолучитьМакет("ЖурналРегистрации");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		Если ПоОбособленномуПодразделению И ЗначениеЗаполнено(ОбособленноеПодразделениеОрганизации) Тогда
			ОбластьМакета.Параметры.НаименованиеОрганизации = ОбособленноеПодразделениеОрганизации.НаименованиеПолное;
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Валюта",Валюта);
	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация);
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	Если НЕ УчетнаяПолитикаНеЗадана Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитика.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда
		УсловиеПоОбособленномуПодразделению = " И (ПриходныйКассовыйОрдер.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК День,
				 |	ПриходныйКассовыйОрдер.Ссылка КАК Ордер,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ ПриходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПорядок,
				 |	ПриходныйКассовыйОрдер.НомерОрдера КАК НомерОрдера,
				 |	ПриходныйКассовыйОрдер.ВалютаДокумента КАК Валюта,
    			 |	ПриходныйКассовыйОрдер.СуммаДокумента КАК Приход,
				 |	ПриходныйКассовыйОрдер.НазначениеДенежныхСредств КАК Назначение,
				 |	ПриходныйКассовыйОрдер.НазначениеДенежныхСредств.Наименование КАК НаименованиеНазначения,
				 |	ПриходныйКассовыйОрдер.Комментарий КАК Комментарий
				 |ИЗ
				 |		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |	ГДЕ
				 |		(ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(ПриходныйКассовыйОрдер.Организация = &Организация) И
				 |		(ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(ПриходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	День,
				 |  НомерОрдераПорядок";
				 
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выбрать();
	
	ТаблицаНазначения = РезультатЗапроса.Выгрузить();
	ТаблицаНазначения.Свернуть("Назначение, НаименованиеНазначения", "Приход");
	ТаблицаНазначения.Колонки.Добавить("НомерКолонки");
	
	//Эти два назначения должны присутствовать в шапке обязательно, в не зависимости от наличия движения по этим назначениям
	МассивОбязательныхНазначений = Новый Массив;
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда);
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.Командировка);
	
	Для каждого Назначение Из МассивОбязательныхНазначений Цикл
		СтрокаНазначения = ТаблицаНазначения.Найти(Назначение, "Назначение");
		Если СтрокаНазначения = Неопределено Тогда
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Назначение;
			СтрокаНазначения.Приход = 0;
		КонецЕсли;
		СтрокаНазначения.НомерКолонки 			= ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 3, 4);
		СтрокаНазначения.НаименованиеНазначения = ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда,
			"На заробітну плату, премії, стипендії", "На відрядження та інші цілі"); 
	КонецЦикла; 
	
	//Проставим номера для оставшихся назначений
	НомерКолонки = 5;
	СтрокиНазначенияКВыводу = ТаблицаНазначения.НайтиСтроки(Новый Структура("НомерКолонки", Неопределено));
	КоличествоСтрок = СтрокиНазначенияКВыводу.Количество();
	Если КоличествоСтрок = 0 Тогда
		//Также если нет движения по другим назначениям, кроме обязательных - необходимо добавить колонку без наименования (колонка 5)
		СтрокаНазначения = ТаблицаНазначения.Добавить();
		СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка();
		СтрокаНазначения.Приход = 0;
		СтрокаНазначения.НаименованиеНазначения = "";
		СтрокаНазначения.НомерКолонки = НомерКолонки;
	Иначе
		Для каждого СтрокаНазначения Из СтрокиНазначенияКВыводу Цикл
			//Пустая должна быть последней колонкой из назначений
			Если СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка() Тогда
				СтрокаНазначения.НомерКолонки = КоличествоСтрок + 4;
				СтрокаНазначения.НаименованиеНазначения = "";
			Иначе
				СтрокаНазначения.НомерКолонки = НомерКолонки;
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли; 		
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаНазначения.Сортировать("НомерКолонки");
	
	КоличествоНазначенийКВыводу = ТаблицаНазначения.Количество();
	ЦентральнаяКолонка = Окр(КоличествоНазначенийКВыводу / 2) + 2;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|ДатаНомер");
	ОбластьМакета.Параметры.ВидДокумента = "Прибутковий документ";
	ДокументРезультат.Вывести(ОбластьМакета);
	
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
		ОбластьМакета.Параметры.Назначение   = Назначение.НаименованиеНазначения; 
		ОбластьМакета.Параметры.НомерКолонки = Назначение.НомерКолонки;
		Если Назначение.НомерКолонки = ЦентральнаяКолонка Тогда
			ОбластьМакета.Параметры.ТекстШапки = "Надійшло грошей";
		КонецЕсли;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Комментарий");
	ОбластьМакета.Параметры.НомерКолонки = КоличествоНазначенийКВыводу + 3;
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|ДатаНомер");
		ОбластьМакета.Параметры.Дата = Результат.День;
		ОбластьМакета.Параметры.Номер = Результат.НомерОрдера;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Назначение");
		Для Каждого СтрокаНазначения из ТаблицаНазначения Цикл
			ОбластьМакета.Параметры.СуммаДокумента = ?(Результат.Назначение = СтрокаНазначения.Назначение, Результат.Приход, 0);
			ОбластьМакета.Параметры.Ордер = Результат.Ордер;
			ДокументРезультат.Присоединить(ОбластьМакета);
		КонецЦикла;	
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Комментарий");
		ОбластьМакета.Параметры.Комментарий = Результат.Комментарий;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	//Вывод всего
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|ДатаНомер");
	ДокументРезультат.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Назначение");
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета.Параметры.СуммаВсего = Назначение.Приход;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Комментарий");
	
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры	

Процедура СформироватьЖурналРегистрацииРасходных(ДокументРезультат)
	
	//Вывод шапки
	Макет = ПолучитьМакет("ЖурналРегистрации");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		Если ПоОбособленномуПодразделению И ЗначениеЗаполнено(ОбособленноеПодразделениеОрганизации) Тогда
			ОбластьМакета.Параметры.НаименованиеОрганизации = ОбособленноеПодразделениеОрганизации.НаименованиеПолное;
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Валюта",Валюта);
	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитикаБУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация, "Бух");
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	Если НЕ УчетнаяПолитикаНеЗадана Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитикаБУ.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		УсловиеПоОбособленномуПодразделению = " И (РасходныйКассовыйОрдер.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК День,
				 |	РасходныйКассовыйОрдер.Ссылка КАК Ордер,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ РасходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПорядок,
				 |	РасходныйКассовыйОрдер.НомерОрдера КАК НомерОрдера,
				 |	РасходныйКассовыйОрдер.ВалютаДокумента КАК Валюта,
    			 |	РасходныйКассовыйОрдер.СуммаДокумента КАК Расход,
				 |	РасходныйКассовыйОрдер.НазначениеДенежныхСредств КАК Назначение,
				 |	РасходныйКассовыйОрдер.НазначениеДенежныхСредств.Наименование КАК НаименованиеНазначения,
				 |	РасходныйКассовыйОрдер.Комментарий КАК Комментарий
				 |ИЗ
				 |		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
				 |	ГДЕ
				 |		(РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(РасходныйКассовыйОрдер.Организация = &Организация) И
				 |		(РасходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(РасходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению +
				 "УПОРЯДОЧИТЬ ПО
				 |	День,
				 |	НомерОрдераПорядок";
				 
				 
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выбрать();
	
	ТаблицаНазначения = РезультатЗапроса.Выгрузить();
	ТаблицаНазначения.Свернуть("Назначение, НаименованиеНазначения", "Расход");
	ТаблицаНазначения.Колонки.Добавить("НомерКолонки");
	
	//Эти два назначения должны присутствовать в шапке обязательно, в не зависимости от наличия движения по этим назначениям
	МассивОбязательныхНазначений = Новый Массив;
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда);
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.Командировка);
	
	Для каждого Назначение Из МассивОбязательныхНазначений Цикл
		СтрокаНазначения = ТаблицаНазначения.Найти(Назначение, "Назначение");
		Если СтрокаНазначения = Неопределено Тогда
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Назначение;
			СтрокаНазначения.Расход = 0;
		КонецЕсли;
		СтрокаНазначения.НомерКолонки 			= ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 3, 4);
		СтрокаНазначения.НаименованиеНазначения = ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда,
			"На заробітну плату, премії, стипендії", "На відрядження та інші цілі"); 
	КонецЦикла; 
	
	//Проставим номера для оставшихся назначений
	НомерКолонки = 5;
	СтрокиНазначенияКВыводу = ТаблицаНазначения.НайтиСтроки(Новый Структура("НомерКолонки", Неопределено));
	КоличествоСтрок = СтрокиНазначенияКВыводу.Количество();
	Если КоличествоСтрок = 0 Тогда
		//Также если нет движения по другим назначениям, кроме обязательных - необходимо добавить колонку без наименования (колонка 5)
		СтрокаНазначения = ТаблицаНазначения.Добавить();
		СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка();
		СтрокаНазначения.Расход = 0;
		СтрокаНазначения.НаименованиеНазначения = "";
		СтрокаНазначения.НомерКолонки = НомерКолонки;
	Иначе
		Для каждого СтрокаНазначения Из СтрокиНазначенияКВыводу Цикл
			//Пустая должна быть последней колонкой из назначений
			Если СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка() Тогда
				СтрокаНазначения.НомерКолонки = КоличествоСтрок + 4;
				СтрокаНазначения.НаименованиеНазначения = "";
			Иначе
				СтрокаНазначения.НомерКолонки = НомерКолонки;
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли; 		
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаНазначения.Сортировать("НомерКолонки");
	
	КоличествоНазначенийКВыводу = ТаблицаНазначения.Количество();
	ЦентральнаяКолонка = Окр(КоличествоНазначенийКВыводу / 2) + 2;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|ДатаНомер");
	ОбластьМакета.Параметры.ВидДокумента = "Видатковий документ";
	ДокументРезультат.Вывести(ОбластьМакета);
	
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
		ОбластьМакета.Параметры.Назначение   = Назначение.НаименованиеНазначения;
		ОбластьМакета.Параметры.НомерКолонки = Назначение.НомерКолонки;
		Если Назначение.НомерКолонки = ЦентральнаяКолонка Тогда
			ОбластьМакета.Параметры.ТекстШапки = "Витрачено грошей";
		КонецЕсли;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Комментарий");
	ОбластьМакета.Параметры.НомерКолонки = КоличествоНазначенийКВыводу + 3;
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|ДатаНомер");
		ОбластьМакета.Параметры.Дата = Результат.День;
		ОбластьМакета.Параметры.Номер = Результат.НомерОрдера;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Назначение");
		Для Каждого СтрокаНазначения из ТаблицаНазначения Цикл
			ОбластьМакета.Параметры.СуммаДокумента = ?(Результат.Назначение = СтрокаНазначения.Назначение, Результат.Расход, 0);
			ОбластьМакета.Параметры.Ордер = Результат.Ордер;
			ДокументРезультат.Присоединить(ОбластьМакета);
		КонецЦикла;	
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Комментарий");
		ОбластьМакета.Параметры.Комментарий = Результат.Комментарий;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	//Вывод всего
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|ДатаНомер");
	ДокументРезультат.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Назначение");
	Для Каждого Назначение из ТаблицаНазначения Цикл
		ОбластьМакета.Параметры.СуммаВсего = Назначение.Расход;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Комментарий");

	ДокументРезультат.Присоединить(ОбластьМакета);
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	
КонецПроцедуры

Процедура СформироватьЖурналРегистрацииРасходныхИПриходных(ДокументРезультат)
	
	//Вывод шапки
	Макет = ПолучитьМакет("ЖурналРегистрации3а");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		Если ПоОбособленномуПодразделению И ЗначениеЗаполнено(ОбособленноеПодразделениеОрганизации) Тогда
			ОбластьМакета.Параметры.НаименованиеОрганизации = ОбособленноеПодразделениеОрганизации.НаименованиеПолное;
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Валюта",Валюта);
	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитикаБУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация, "Бух");
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	Если УчетнаяПолитикаБУ.Количество() > 0 Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитикаБУ.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		УсловиеПоОбособленномуПодразделению = " И (ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньРасход,
				 |	РасходныйКассовыйОрдер.Ссылка 					 КАК ОрдерРасход,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ РасходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераРасходПорядок,
				 |	РасходныйКассовыйОрдер.НомерОрдера 				 КАК НомерОрдераРасход,
    			 |	РасходныйКассовыйОрдер.СуммаДокумента 			 КАК СуммаРасход,
				 |	РасходныйКассовыйОрдер.Комментарий 				 КАК КомментарийРасход
				 |ИЗ
				 |		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
				 |	ГДЕ
				 |		(РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(РасходныйКассовыйОрдер.Организация = &Организация) И
				 |		(РасходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(РасходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	ДеньРасход,
				 |	НомерОрдераРасходПорядок";
				 
				 
	РезультатРасход =Запрос.Выполнить().Выбрать();
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньПриход,
				 |	ПриходныйКассовыйОрдер.Ссылка 					 КАК ОрдерПриход,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ ПриходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПриходПорядок,
				 |	ПриходныйКассовыйОрдер.НомерОрдера 				 КАК НомерОрдераПриход,
    			 |	ПриходныйКассовыйОрдер.СуммаДокумента 			 КАК СуммаПриход,
				 |	ПриходныйКассовыйОрдер.Комментарий 				 КАК КомментарийПриход
				 |ИЗ
				 |		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |	ГДЕ
				 |		(ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(ПриходныйКассовыйОрдер.Организация = &Организация) И
				 |		(ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(ПриходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	ДеньПриход,
				 |  НомерОрдераПриходПорядок";	
				 
	РезультатПриход =Запрос.Выполнить().Выбрать();	
	
	Пока 1=1 Цикл
		
		ЕстьЗапись = Ложь;
		
		Если РезультатПриход.Следующий() Тогда
			
			ЕстьЗапись = Истина;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.ДатаПриход  		= РезультатПриход.ДеньПриход;
			ОбластьМакета.Параметры.НомерПриход 		= РезультатПриход.НомерОрдераПриход;
			ОбластьМакета.Параметры.ОрдерПриход			= РезультатПриход.ОрдерПриход;
			ОбластьМакета.Параметры.СуммаПриход 		= РезультатПриход.СуммаПриход;
			ОбластьМакета.Параметры.КомментарийПриход 	= РезультатПриход.КомментарийПриход;
			
		КонецЕсли;	
		
		Если РезультатРасход.Следующий() Тогда
			
			Если Не ЕстьЗапись Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");	
			КонецЕсли;
			
			ЕстьЗапись = Истина;
			
			ОбластьМакета.Параметры.ДатаРасход  		= РезультатРасход.ДеньРасход;
			ОбластьМакета.Параметры.НомерРасход 		= РезультатРасход.НомерОрдераРасход;
			ОбластьМакета.Параметры.ОрдерРасход 		= РезультатРасход.ОрдерРасход;
			ОбластьМакета.Параметры.СуммаРасход 	 	= РезультатРасход.СуммаРасход;
			ОбластьМакета.Параметры.КомментарийРасход 	= РезультатРасход.КомментарийРасход;
			
		КонецЕсли;	
		
		Если ЕстьЗапись Тогда
			ДокументРезультат.Вывести(ОбластьМакета);
		Иначе
			Прервать;	
		КонецЕсли; 
	
	КонецЦикла; 
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры

Процедура СформироватьКнигаПринятыхВыданных(ДокументРезультат)
	
	//Запрос по остаткам и оборотам кассы
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	
	Если Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОстаткиИОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;	
	
	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация);
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	Если НЕ УчетнаяПолитикаНеЗадана Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = УчетнаяПолитика.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям;
	КонецЕсли;
	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		ТекстСубконто = "&ВидСубконто";
		Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		
		УсловиеПоСубконто = "И Субконто1 = &ОбособленноеПодразделениеОрганизации";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	Иначе
		ТекстСубконто = "";
		УсловиеПоСубконто = "";
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 | ХозрасчетныйОстаткиИОбороты.Период КАК Период,
				 | ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстаток КАК ВалютнаяСуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, ДЕНЬ, Движения, Счет = &Счет," + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОстаткиИОбороты
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				  | Период";
				 
	Результат=Запрос.Выполнить().Выбрать();
	
	//Вывод шапки
	Макет       = ПолучитьМакет("КнигаПринятыхВыданных");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Дата = Результат.Период;
		Если НЕ ВалютнаяКасса Тогда
			ОбластьМакета.Параметры.ОстатокНачало = Результат.СуммаНачальныйОстаток;
			ОбластьМакета.Параметры.Расход = Результат.СуммаОборотКт;
			ОбластьМакета.Параметры.Приход = Результат.СуммаОборотДт;
			ОбластьМакета.Параметры.ОстатокКонец = Результат.СуммаКонечныйОстаток;
		Иначе
			Если (Результат.ВалютнаяСуммаОборотКт=0)И(Результат.ВалютнаяСуммаОборотДт=0) Тогда
				//валютную кассу могут еще трогать и переоценки
				Продолжить;
			КонецЕсли;	
			ОбластьМакета.Параметры.ОстатокНачало = Результат.ВалютнаяСуммаНачальныйОстаток;
			ОбластьМакета.Параметры.Расход = Результат.ВалютнаяСуммаОборотКт;
			ОбластьМакета.Параметры.Приход = Результат.ВалютнаяСуммаОборотДт;
			ОбластьМакета.Параметры.ОстатокКонец = Результат.ВалютнаяСуммаКонечныйОстаток;
		КонецЕсли;	
		ДокументРезультат.Вывести(ОбластьМакета);
	КонецЦикла;
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		
КонецПроцедуры	
 
Функция СформироватьСтруктуруНомеровЛистов(УчетДенежныхСредствПоОбособленнымПодразделениям)
	
	ЗапросНачальныйНомер = Новый Запрос;
	ЗапросНачальныйНомер.УстановитьПараметр("Дата", НачалоДня(ДатаНач)-1);
	
	Если ОбособленноеПодразделениеОрганизации.Пустая() Тогда
		ЗапросНачальныйНомер.УстановитьПараметр("СтруктурнаяЕдиница", Организация);
	Иначе
		ЗапросНачальныйНомер.УстановитьПараметр("СтруктурнаяЕдиница", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	ЗапросНачальныйНомер.УстановитьПараметр("Валюта", Валюта);
	
	ЗапросНачальныйНомер.Текст="ВЫБРАТЬ
	                           |	ПоследниеНомераЛистовКассовойКнигиСрезПоследних.НомерЛистаМесяца,
	                           |	ПоследниеНомераЛистовКассовойКнигиСрезПоследних.НомерЛистаГода,
	                           |	ПоследниеНомераЛистовКассовойКнигиСрезПоследних.Период
	                           |ИЗ
	                           |	РегистрСведений.ПоследниеНомераЛистовКассовойКниги.СрезПоследних(
	                           |			&Дата,
	                           |			СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	                           |				И Валюта = &Валюта) КАК ПоследниеНомераЛистовКассовойКнигиСрезПоследних";
				 
	ВыборкаНачальныйНомер = ЗапросНачальныйНомер.Выполнить().Выбрать();
	
	НомерЛистаГод   = НомерПервогоЛистаГода(НачалоГода(ДатаНач));
	НомерЛистаМесяц = 1;
	ТекГод   = Неопределено;
	ТекМесяц = Неопределено;

	Если ВыборкаНачальныйНомер.Следующий() Тогда
		НомерЛистаМесяц  = ВыборкаНачальныйНомер.НомерЛистаМесяца + 1;
		НомерЛистаГод    = ВыборкаНачальныйНомер.НомерЛистаГода + 1;
		ТекМесяц  = Месяц(ВыборкаНачальныйНомер.Период);
		ТекГод    = Год(ВыборкаНачальныйНомер.Период);
	КонецЕсли;
	
	Запрос = Новый Запрос;		
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	
	Если Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;
	
	Если НЕ УчетДенежныхСредствПоОбособленнымПодразделениям Тогда
		ТекстСубконто = "";
	Иначе
		ТекстСубконто = "&Субконто";
		Если ПустаяСтрока(ТекстФильтр) Тогда
			ТекстФильтр = "ГДЕ
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		Иначе
			ТекстФильтр = ТекстФильтр + " И
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		КонецЕсли; 
		Запрос.УстановитьПараметр("Субконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	
	Запрос.Текст="ВЫБРАТЬ
				 | ХозрасчетныйОбороты.Период КАК Период
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, День, Счет = &Счет,"+ТекстСубконто+", Организация = &Организация) КАК ХозрасчетныйОбороты
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				 | Период";
				 
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураВозврата        = Новый Структура();
	СоответствиеНомеровМесяц = Новый Соответствие();
	СоответствиеНомеровГод   = Новый Соответствие();
	СоответствиеСдвигНомеровМесяц = Новый Соответствие();
	СоответствиеСдвигНомеровГод   = Новый Соответствие();
	
	Первый = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Первый Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Организация", Организация);
			НастройкиПечатиКассовойКниги = РегистрыСведений.НастройкиПечатиКассовойКниги.СрезПоследних(Выборка.Период, Отбор);
			Если НастройкиПечатиКассовойКниги.Количество() > 0 Тогда 
				НесколькоЛистовВДень =  НастройкиПечатиКассовойКниги[0].НесколькоЛистовВДень;
			КонецЕсли;
			Первый = Ложь;
		КонецЕсли;
	
		Если Месяц(Выборка.Период) <> ТекМесяц Тогда
			ТекМесяц = Месяц(Выборка.Период);
			НомерЛистаМесяц = 1;	
		КонецЕсли;
		
		Если Год(Выборка.Период) <> ТекГод Тогда
			ТекГод = Год(Выборка.Период);
			НомерЛистаГод = НомерПервогоЛистаГода(НачалоГода(Выборка.Период));
			НомерЛистаМесяц = НомерЛистаГод;
		КонецЕсли;
		
		СоответствиеНомеровМесяц.Вставить(Выборка.Период, НомерЛистаМесяц);
		СоответствиеНомеровГод.Вставить(Выборка.Период, НомерЛистаГод);
		СоответствиеСдвигНомеровМесяц.Вставить(Выборка.Период, 0);
		СоответствиеСдвигНомеровГод.Вставить(Выборка.Период, 0);
		
		НомерЛистаМесяц = НомерЛистаМесяц + 1;
		НомерЛистаГод   = НомерЛистаГод + 1;	
		
	КонецЦикла;
	
	СтруктураВозврата.Вставить("СоответствиеНомеровМесяц", СоответствиеНомеровМесяц);
	СтруктураВозврата.Вставить("СоответствиеНомеровГод",   СоответствиеНомеровГод);
	СтруктураВозврата.Вставить("СоответствиеСдвигНомеровМесяц", СоответствиеСдвигНомеровМесяц);
	СтруктураВозврата.Вставить("СоответствиеСдвигНомеровГод",   СоответствиеСдвигНомеровГод);
	
	Возврат СтруктураВозврата;
		
КонецФункции	

Процедура СформироватьКассоваяКнига(ДокументРезультат, СтруктураНомеров)
	
	БУ = ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте;
	ЕстьАналитикаПоОбособленнымПодразделениям = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица, "ВидСубконто") = Неопределено, Ложь, Истина);

	УчетнаяПолитикаНеЗадана = Ложь;
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ДатаКон, УчетнаяПолитикаНеЗадана, Организация);
	УчетДенежныхСредствПоОбособленнымПодразделениям = Ложь;
	Если НЕ УчетнаяПолитикаНеЗадана Тогда	
		УчетДенежныхСредствПоОбособленнымПодразделениям = ЕстьАналитикаПоОбособленнымПодразделениям И УчетнаяПолитика.ВестиУчетДенежныхСредствПоОбособленнымПодразделениям;
	КонецЕсли;
	
	Если НеЗаполненныНомера(УчетДенежныхСредствПоОбособленнымПодразделениям) Тогда
		Текст = НСтр("ru='За указанный период нет сформированных номеров листов кассовой книги.Рекомендуется сформировать кассовую книгу с начала года, иначе сформированные номера будут не корректны. Установить начало периода началом года?';uk='За зазначений період немає сформованих номерів аркушів касової книги.Рекомендується сформувати касову книгу з початку року, інакше сформовані номери будуть не коректні. Установити початок періоду початком року?'");
		Ответ = Вопрос(Текст, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ДатаНач = НачалоГода(ДатаНач);
		КонецЕсли;
	КонецЕсли;
	
	//Запрос по остаткам и оборотам кассы
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация",Организация);
	Если Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОстаткиИОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;	
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		ТекстСубконто = "&ВидСубконто";
		Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		
		УсловиеПоСубконто = "И Субконто1 = &ОбособленноеПодразделениеОрганизации";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	Иначе
		ТекстСубконто = "";
		УсловиеПоСубконто = "";
	КонецЕсли;
	
	Если ВалютнаяКасса Тогда
		УсловиеПоСубконто = УсловиеПоСубконто + " И Валюта = &Валюта";
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
	             | ХозрасчетныйОбороты.Регистратор КАК Регистратор,
				 | ХозрасчетныйОстаткиИОбороты.Период КАК Период,
				 | ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйРазвернутыйОстатокКт КАК ВалютнаяСуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйРазвернутыйОстатокКт КАК ВалютнаяСуммаКонечныйОстаток,
                 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт,
				 | ХозрасчетныйОбороты.КорСчет КАК КорСчет,
				 | ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаКорОборотДт,
				 | ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаКорОборотКт,
				 | ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаКорОборотДт,
				 | ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаКорОборотКт
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, День, Движения, Счет = &Счет, " + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОстаткиИОбороты
				 | ЛЕВОЕ СОЕДИНЕНИЕ
				 | РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет = &Счет, " + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОбороты
				 | ПО ХозрасчетныйОстаткиИОбороты.Период = НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,День)
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				 | Период,
				 | ХозрасчетныйОбороты.Регистратор.МоментВремени
				|ИТОГИ
	            |	МАКСИМУМ(Период),
				|	МАКСИМУМ(СуммаНачальныйОстаток),
	            |	МАКСИМУМ(СуммаКонечныйОстаток),
	            |	МАКСИМУМ(СуммаОборотДт),
	            |	МАКСИМУМ(СуммаОборотКт),
				|	СУММА(СуммаКорОборотДт),
	            |	СУММА(СуммаКорОборотКт),
				|	МАКСИМУМ(ВалютнаяСуммаНачальныйОстаток),
	            |	МАКСИМУМ(ВалютнаяСуммаКонечныйОстаток),
	            |	МАКСИМУМ(ВалютнаяСуммаОборотДт),
	            |	МАКСИМУМ(ВалютнаяСуммаОборотКт),
				|	СУММА(ВалютнаяСуммаКорОборотДт),
	            |	СУММА(ВалютнаяСуммаКорОборотКт)
	            |ПО
	            |	Регистратор";

	РезультатПоРегистратору = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗапросПКОпоАТТ = Новый Запрос();
	ЗапросПКОпоАТТ.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
	ЗапросПКОпоАТТ.УстановитьПараметр("ДатаКон",КонецДня(ДатаКон));
	ЗапросПКОпоАТТ.УстановитьПараметр("Организация",Организация);
	ЗапросПКОпоАТТ.УстановитьПараметр("ПриемРозничнойВыручки", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	Если УчетДенежныхСредствПоОбособленнымПодразделениям Тогда 
		УсловиеПоПодразделению = "И ПриходныйКассовыйОрдер.ПоОбособленномуПодразделению = &ПоОбособленномуПодразделению
								 |И ПриходныйКассовыйОрдер.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации";
								 
		ЗапросПКОпоАТТ.УстановитьПараметр("ПоОбособленномуПодразделению", ПоОбособленномуПодразделению);
		ЗапросПКОпоАТТ.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	Иначе
		УсловиеПоПодразделению = "";
	КонецЕсли;
	Если НЕ Валюта = мВалютаРегламентированногоУчета Тогда 
		УсловиеПоВалюте = "И ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта";
								 
		ЗапросПКОпоАТТ.УстановитьПараметр("Валюта", Валюта);
	Иначе
		УсловиеПоВалюте = "";
	КонецЕсли;
	
	ЗапросПКОпоАТТ.Текст = "ВЫБРАТЬ
	                       |	ПриходныйКассовыйОрдер.Ссылка КАК Ссылка,
	                       |	ПриходныйКассовыйОрдер.ПринятоОт,
	                       |	ПриходныйКассовыйОрдер.НомерОрдера,
						   |	ПриходныйКассовыйОрдер.Контрагент КАК Склад,
						   |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК Дата,
						   |	ПриходныйКассовыйОрдер.СуммаПродаж - ПриходныйКассовыйОрдер.СуммаБезналичнойОплаты КАК СуммаПродаж,
						   |	ПриходныйКассовыйОрдер.СуммаВозврата КАК СуммаВозвратов,
						   |	ЛОЖЬ КАК ПКОУчтен
	                       |ИЗ
	                       |	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	                       |ГДЕ
	                       |	ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                       |	И ПриходныйКассовыйОрдер.Проведен = Истина
	                       |	И ПриходныйКассовыйОрдер.ВидОперации = &ПриемРозничнойВыручки
	                       |	И ПриходныйКассовыйОрдер.ВыручкаСНТТ = ЛОЖЬ
						   |	И ПриходныйКассовыйОрдер.Организация = &Организация
						   |" + УсловиеПоПодразделению + "
						   |" + УсловиеПоВалюте;
						   
	ТаблицаПКОпоАТТ = ЗапросПКОпоАТТ.Выполнить().Выгрузить();
							   
	СтруктураНомеров = СформироватьСтруктуруНомеровЛистов(УчетДенежныхСредствПоОбособленнымПодразделениям);
	СоответствиеНомеровМесяц = СтруктураНомеров.СоответствиеНомеровМесяц; 
	СоответствиеНомеровГод   = СтруктураНомеров.СоответствиеНомеровГод;
	СоответствиеСдвигНомеровМесяц = СтруктураНомеров.СоответствиеСдвигНомеровМесяц;
	СоответствиеСдвигНомеровГод   = СтруктураНомеров.СоответствиеСдвигНомеровГод;
	СдвигНомеровМесяц = 0;
	СдвигНомеровГод = 0;
	НачальныйНомерЛистаМесяц = НачальныйНомерЛиста;
	
	ТекДата = Дата(1, 1, 1);
	ТекРегистратор = "";
	ОстатокЗаДень  = 0;ВалютныйОстатокЗаДень  = 0;
	ПриходЗаДень   = 0;ВалютныйПриходЗаДень   = 0;
	РасходЗаДень   = 0;ВалютныйРасходЗаДень   = 0;
	КоличествоПКОЗаДень = 0;
	КоличествоРКОЗаДень = 0;
	ТаблицаСтрокДляВывода = Новый ТаблицаЗначений;
	ТаблицаСтрокДляВывода.Колонки.Добавить("НомерОрдера");
	ТаблицаСтрокДляВывода.Колонки.Добавить("НомерОрдераДляСортировки");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ДокументОрдер");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Контрагент");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Ордер");
	ТаблицаСтрокДляВывода.Колонки.Добавить("КоррСчет");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Приход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ПриходВалюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Валюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Расход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("РасходВалюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("РасходПриход");
	
	Макет       = ПолучитьМакет("КассоваяКнига");
	
	Если ВыводитьТитульныйЛист Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("Титул");
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНач);
		ОбластьМакета.Параметры.Год				 		= Год(ДатаНач);
		ОбластьМакета.Параметры.КодЕДРПОУ 				= УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		Если ПоОбособленномуПодразделению И ЗначениеЗаполнено(ОбособленноеПодразделениеОрганизации) Тогда
			ОбластьМакета.Параметры.НаименованиеОрганизации = ОбособленноеПодразделениеОрганизации.НаименованиеПолное;
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;

	Пока РезультатПоРегистратору.Следующий() Цикл
		Если РезультатПоРегистратору.Период <> ТекДата Тогда
			Если (ОстатокЗаДень<>0)или(ПриходЗаДень<>0)или(РасходЗаДень<>0) Тогда
				
				ТаблицаСтрокДляВывода.Сортировать("РасходПриход Возр, НомерОрдераДляСортировки Возр");
				
				ОбластьКонецСтраницы = Макет.ПолучитьОбласть("ШаблонКонецСтраницы");
				НомерСтроки = 1;
				КоличествоСтрок = ТаблицаСтрокДляВывода.Количество();
				
				ПриходЗаДеньВОтчет = 0;
				РасходЗаДеньВОтчет = 0;
				ВалютныйПриходЗаДеньВОтчет = 0;
				ВалютныйРасходЗаДеньВОтчет = 0;

				Для каждого Строка Из ТаблицаСтрокДляВывода Цикл
				    ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					ОбластьМакета.Параметры.Заполнить(Строка);
					ОбластьКонецСтраницы.Параметры.Заполнить(Строка);
					
					Если НесколькоЛистовВДень Тогда
						Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) ИЛИ ((НомерСтроки = КоличествоСтрок) и НЕ ДокументРезультат.ПроверитьВывод(ОбластьКонецСтраницы))Тогда
							
							// Выведем разрыв страницы
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							СдвигНомеровМесяц  = СдвигНомеровМесяц + 1;
							СдвигНомеровГод  = СдвигНомеровГод + 1;
							
							ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
							ЧислоДокумента                          = Формат(ТекДата,"ДФ='дд';Л=uk_UA");
							ДатаДокумента                           = Формат(ТекДата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
							ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
							ОбластьШапка.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
							ОбластьШапка.Параметры.НомерЛиста 		= СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СдвигНомеровГод;
							
							ДокументРезультат.Вывести(ОбластьШапка);
						КонецЕсли;
						СоответствиеСдвигНомеровМесяц.Вставить(НачалоДня(ТекДата), СдвигНомеровМесяц);
						СоответствиеСдвигНомеровГод.Вставить(НачалоДня(ТекДата), СдвигНомеровГод);
						НомерСтроки = НомерСтроки + 1;
					КонецЕсли;
					
					ПриходЗаДеньВОтчет = ПриходЗаДеньВОтчет + ?(Строка.Приход = "-", 0, Строка.Приход);
					РасходЗаДеньВОтчет = РасходЗаДеньВОтчет + ?(Строка.Расход = "-", 0, Строка.Расход);
					ВалютныйПриходЗаДеньВОтчет = ВалютныйПриходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.ПриходВалюта), Строка.ПриходВалюта, 0);
					ВалютныйРасходЗаДеньВОтчет = ВалютныйРасходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.РасходВалюта), Строка.РасходВалюта, 0);
					
					ДокументРезультат.Вывести(ОбластьМакета);
				КонецЦикла;
				ТаблицаСтрокДляВывода.Очистить();
				
				ОбластьМакета = Макет.ПолучитьОбласть("ОстатокКонец");
				ОбластьМакета.Параметры.ОстатокКонец = ОстатокЗаДень;
				ОбластьМакета.Параметры.Приход = ?(ПриходЗаДеньВОтчет = 0, "-", ПриходЗаДеньВОтчет);
				ОбластьМакета.Параметры.Расход = ?(РасходЗаДеньВОтчет = 0, "-", РасходЗаДеньВОтчет);
				
				
				Если ПоОбособленномуПодразделению И ЗначениеЗаполнено(ОбособленноеПодразделениеОрганизации) Тогда
					Руководители = ОбщегоНазначения.ОтветственныеЛицаОбособленногоПодразделения(ОбособленноеПодразделениеОрганизации, ТекДата);
				Иначе
					Руководители = ОбщегоНазначения.ОтветственныеЛица(Организация, ТекДата);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтерФИО) Тогда
					ОбластьМакета.Параметры.Бухгалтер = ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(Руководители.ГлавныйБухгалтерФИО.Фамилия, Руководители.ГлавныйБухгалтерФИО.Имя, Руководители.ГлавныйБухгалтерФИО.Отчество, Истина); // Кратко
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Руководители.КассирФИО) Тогда
					ОбластьМакета.Параметры.Кассир    = ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(Руководители.КассирФИО.Фамилия, Руководители.КассирФИО.Имя, Руководители.КассирФИО.Отчество, Истина); // Кратко
				КонецЕсли;
				
				ФорматнаяСтрока = "Л = uk_UA";    
				КоличествоПКОЗаДень = ?(КоличествоПКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоПКОЗаДень, ФорматнаяСтрока));
				КоличествоРКОЗаДень = ?(КоличествоРКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоРКОЗаДень, ФорматнаяСтрока));
				КоличествоПКОЗаДень = СокрЛП(Лев(КоличествоПКОЗаДень, СтрДлина(КоличествоПКОЗаДень) - 3 ));
				КоличествоРКОЗаДень = СокрЛП(Лев(КоличествоРКОЗаДень, СтрДлина(КоличествоРКОЗаДень) - 3 ));
				ОбластьМакета.Параметры.КоличествоПКО = КоличествоПКОЗаДень;
				ОбластьМакета.Параметры.КоличествоРКО = КоличествоРКОЗаДень;
				
				Если ВалютнаяКасса Тогда
					ОбластьМакета.Параметры.ОстатокКонецВалюта = Формат(ВалютныйОстатокЗаДень,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.ПриходВалюта = Формат(ВалютныйПриходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.РасходВалюта = Формат(ВалютныйРасходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.Валюта = Валюта.Наименование;
				КонецЕсли;
				
				// количество листов за месяц
				Если Месяц(РезультатПоРегистратору.Период) <> Месяц(ТекДата) Тогда
					Если ВидЛистаКассовойКниги = "Конец месяца" Тогда
						КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
						ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
					КонецЕсли;
				КонецЕсли;	
				
				// количество листов за год
				Если ВидЛистаКассовойКниги = "Конец года" Тогда
					Если Месяц(РезультатПоРегистратору.Период) <> Месяц(ТекДата) Тогда
						КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
						ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
					КонецЕсли;
					Если Год(РезультатПоРегистратору.Период) <> Год(ТекДата) Тогда
						КоличествоЛистовГод = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровГод.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛиста + 1; 
						ОбластьМакета.Параметры.КоличествоЛистовГод = "Листів з початку року: " + КоличествоЛистовГод; 
					КонецЕсли;
				КонецЕсли;	
				
				Если Месяц(РезультатПоРегистратору.Период) <> Месяц(ТекДата) Тогда
					СдвигНомеровМесяц = 0;
					НачальныйНомерЛистаМесяц = 1;
				КонецЕсли;
				
				Если Год(РезультатПоРегистратору.Период) <> Год(ТекДата) Тогда
					СдвигНомеровГод = 0;
					
					Отбор = Новый Структура;
					Отбор.Вставить("Организация", Организация);
					НастройкиПечатиКассовойКниги = РегистрыСведений.НастройкиПечатиКассовойКниги.СрезПоследних(НачалоГода(РезультатПоРегистратору.Период), Отбор);
					Если НастройкиПечатиКассовойКниги.Количество() > 0 Тогда 
						НесколькоЛистовВДень      = НастройкиПечатиКассовойКниги[0].НесколькоЛистовВДень;
						НачальныйНомерЛиста       = НастройкиПечатиКассовойКниги[0].НомерПервогоЛиста;
						НачальныйНомерЛистаМесяц  = НачальныйНомерЛиста;
					КонецЕсли;
					
				КонецЕсли;
				
				ДокументРезультат.Вывести(ОбластьМакета);
				КоличествоПКОЗаДень = 0;
				КоличествоРКОЗаДень = 0;
				
				// проверим наличие ПКО с приемом прозничной выручки по АТТ, не подтвержденные ОтчетамиОРозничныхПродажах.
				НеучтенныеПКО =  ТаблицаПКОпоАТТ.НайтиСтроки(Новый Структура("Дата", НачалоДня(ТекДата)));
				Для каждого ПКО Из НеучтенныеПКО Цикл
				
					Если НЕ ПКО.ПКОУчтен Тогда
							 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"".';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"".'"),
							 					ПКО.Ссылка, Формат(ТекДата,"ДФ=dd.MM.yyyy")));
					Иначе
						
						Если ПКО.СуммаПродаж > 0 Тогда
							 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму продаж %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму продажу %3.'"),
							 					ПКО.Ссылка, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаПродаж,"ЧДЦ=2; ЧГ=0")));
						КонецЕсли;
						
						Если ПКО.СуммаВозвратов > 0 Тогда
							 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму повернень %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму повернень %3.'"),
							 					ПКО.Ссылка, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаВозвратов,"ЧДЦ=2; ЧГ=0")));
						КонецЕсли;
						
					КонецЕсли;
				
				КонецЦикла;
				
			КонецЕсли;
			
			ТекДата = РезультатПоРегистратору.Период;
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ЧислоДокумента                          = Формат(РезультатПоРегистратору.Период,"ДФ='дд';Л=uk_UA");
			ДатаДокумента                           = Формат(РезультатПоРегистратору.Период,"ДФ='дд ММММ ггггр.';Л=uk_UA");
			ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
			ОбластьМакета.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
			СоответствиеСдвигНомеровМесяц.Вставить(НачалоДня(ТекДата), СдвигНомеровМесяц);
			СоответствиеСдвигНомеровГод.Вставить(НачалоДня(ТекДата), СдвигНомеровГод);
			
			// номер листа
			ОбластьМакета.Параметры.НомерЛиста = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровГод.Получить(НачалоДня(ТекДата));
			ДокументРезультат.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("ОстатокНачало");
			ОбластьМакета.Параметры.ОстатокНачало = РезультатПоРегистратору.СуммаНачальныйОстаток;
			Если ВалютнаяКасса Тогда
				ОбластьМакета.Параметры.ОстатокНачалоВалюта = Формат(РезультатПоРегистратору.ВалютнаяСуммаНачальныйОстаток,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				ОбластьМакета.Параметры.Валюта = Валюта.Наименование;
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьМакета);
			ОстатокЗаДень = РезультатПоРегистратору.СуммаКонечныйОстаток;
			ПриходЗаДень = РезультатПоРегистратору.СуммаОборотДт;
			РасходЗаДень = РезультатПоРегистратору.СуммаОборотКт;
			ВалютныйОстатокЗаДень = РезультатПоРегистратору.ВалютнаяСуммаКонечныйОстаток;
			ВалютныйПриходЗаДень = РезультатПоРегистратору.ВалютнаяСуммаОборотДт;
			ВалютныйРасходЗаДень = РезультатПоРегистратору.ВалютнаяСуммаОборотКт;
		КонецЕсли;              
		
		Строка = ТаблицаСтрокДляВывода.Добавить();
		Строка.ДокументОрдер = РезультатПоРегистратору.Регистратор;		
		
		ТекРегистратор = РезультатПоРегистратору.Регистратор;
		Если ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ЗакрытиеМесяца") Тогда
			//Просто отобразим курсовую разницу
			Строка.НомерОрдера = "";
			Строка.Контрагент  = "";
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ОперацияБух") Тогда
			//Тут мы ничего не знаем
			Строка.НомерОрдера = "";
			Строка.Контрагент  = "";
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
			Строка.НомерОрдера = РезультатПоРегистратору.Регистратор.НомерОрдера;
// Серна - Начало
			Если РезультатПоРегистратору.Регистратор.ВидОперации = Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке Тогда
				Строка.Контрагент  = РезультатПоРегистратору.Регистратор.СчетОрганизации;
			Иначе
				Строка.Контрагент  = РезультатПоРегистратору.Регистратор.ПринятоОт;
			КонецЕсли;
// Серна - Конец
			КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда	
			Строка.НомерОрдера = РезультатПоРегистратору.Регистратор.НомерОрдера;
			Строка.Контрагент  = РезультатПоРегистратору.Регистратор.Выдать;
			КоличествоРКОЗаДень = КоличествоРКОЗаДень + 1;
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда	
			// найдем соответствующие ордера
			ПКОпоАТТ = ТаблицаПКОпоАТТ.НайтиСтроки(Новый Структура("Дата, Склад", НачалоДня(ТекДата), ТекРегистратор.Склад));
				
			СуммаПродаж    = РезультатПоРегистратору.СуммаКорОборотДт;
			СуммаВозвратов = РезультатПоРегистратору.СуммаКорОборотКт;
				
			КвоПКО = 1;
			Для каждого ПКО Из ПКОпоАТТ Цикл
				
				СуммаПродажВОтчет 	 = 0;
				СуммаВозвратовВОтчет = 0;
				
				Если (КвоПКО > 1)
					 И ((СуммаПродаж > 0 И ПКО.СуммаПродаж > 0) 
					 ИЛИ (СуммаВозвратов > 0 И ПКО.СуммаВозвратов > 0)) Тогда
					Строка = ТаблицаСтрокДляВывода.Добавить();
                    Строка.ДокументОрдер = РезультатПоРегистратору.Регистратор;                 
				КонецЕсли;
				
				Если СуммаПродаж > 0 И ПКО.СуммаПродаж > 0 Тогда
					СуммаПродажВОтчет = Мин(СуммаПродаж, ПКО.СуммаПродаж);
					// учтем в таблице 
					ПКО.СуммаПродаж = ПКО.СуммаПродаж - СуммаПродажВОтчет;
					// учтем сумму
					СуммаПродаж = СуммаПродаж - СуммаПродажВОтчет;
					Если НЕ ПКО.ПКОУчтен Тогда
						ПКО.ПКОУчтен = Истина;
						КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;
					КонецЕсли;
				КонецЕсли; 
					
				Если СуммаВозвратов > 0 И ПКО.СуммаВозвратов > 0 Тогда
					СуммаВозвратовВОтчет = Мин(СуммаВозвратов, ПКО.СуммаВозвратов);
					// учтем в таблице 
					ПКО.СуммаВозвратов = ПКО.СуммаВозвратов - СуммаВозвратовВОтчет;
					// учтем сумму
					СуммаВозвратов = СуммаВозвратов - СуммаВозвратовВОтчет;
					Если НЕ ПКО.ПКОУчтен Тогда
						ПКО.ПКОУчтен = Истина;
						КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;
					КонецЕсли;
				КонецЕсли; 
					
				// выведем в отчет
				Если СуммаПродажВОтчет > 0 ИЛИ СуммаВозвратовВОтчет > 0 Тогда
						
					Строка.НомерОрдера = ПКО.НомерОрдера;
					Строка.Контрагент  = ПКО.ПринятоОт;
						
					
					РезультатПосчетам = РезультатПоРегистратору.Выбрать();
					
					СписокСчетов = ""; Разделитель = "";
					Пока РезультатПосчетам.Следующий() Цикл
						
						СписокСчетов = СписокСчетов + Разделитель + Строка(РезультатПосчетам.КорСчет);
						Разделитель = ", ";
						
					КонецЦикла;
					
					Строка.КоррСчет = СписокСчетов;
						
					Если СуммаПродажВОтчет - СуммаВозвратовВОтчет > 0 Тогда
						Строка.Приход = СуммаПродажВОтчет - СуммаВозвратовВОтчет;
						Строка.Расход = "-";
					Иначе
						Строка.Приход = "-";
						Строка.Расход = СуммаВозвратовВОтчет - СуммаПродажВОтчет;
					КонецЕсли;
					Строка.РасходПриход = ?(СуммаПродажВОтчет    = 0, 1, 0);
					Строка.НомерОрдераДляСортировки = Прав("0000000000" + ПКО.НомерОрдера, 10);

					// оставляем ссылку на ОтчетОРозничных продажах
					Строка.Ордер 		  = РезультатПоРегистратору.Регистратор;
					Строка.ДокументОрдер = ПКО.Ссылка;
					
					ДатаПоследнейЗаписи = РезультатПоРегистратору.Период;
					КвоПКО = КвоПКО + 1;
						
				КонецЕсли;
					
			КонецЦикла; 
				
				
			Если СуммаПродаж > 0 ИЛИ СуммаВозвратов > 0 Тогда
				// неподтвержденные ПКО продажи
					
				Если СуммаПродаж > 0 Тогда
					
					 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По документу %1 за %2 нет зарегистрированных ПКО на сумму продаж %3.';uk='По документу %1 за %2 немає зареєстрованих ПКО на суму продажу %3.'"),
										 РезультатПоРегистратору.Регистратор, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(СуммаПродаж,"ЧДЦ=2; ЧГ=0")));
					
				КонецЕсли;
					
				Если СуммаВозвратов > 0 Тогда
					
					 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По документу %1 за %2 нет зарегистрированных ПКО на сумму возвратов %3.';uk='По документу %1 за %2 немає зареєстрованих ПКО на суму повернення %3.'"),
										 РезультатПоРегистратору.Регистратор, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(СуммаВозвратов,"ЧДЦ=2; ЧГ=0")));
					
				КонецЕсли;
				Если КвоПКО > 1 Тогда
					Строка = ТаблицаСтрокДляВывода.Добавить();
				КонецЕсли;
				Строка.НомерОрдера = "";
				Строка.Контрагент  = "";
				
				
				РезультатПосчетам = РезультатПоРегистратору.Выбрать();
				
				СписокСчетов = ""; Разделитель = "";
				Пока РезультатПосчетам.Следующий() Цикл
					
					СписокСчетов = СписокСчетов + Разделитель + Строка(РезультатПосчетам.КорСчет);
					Разделитель = ", ";
					
				КонецЦикла;
				
				Строка.КоррСчет = СписокСчетов;
				
				Если СуммаПродаж - СуммаВозвратов > 0 Тогда
					Строка.Приход = СуммаПродаж - СуммаВозвратов;
					Строка.Расход = "-";
				Иначе
					Строка.Приход = "-";
					Строка.Расход = СуммаВозвратов - СуммаПродаж;
				КонецЕсли;
				
				Строка.РасходПриход = ?(СуммаПродаж    = 0, 1, 0);
				Строка.НомерОрдераДляСортировки = "0000000000";

				// оставляем ссылку на ОтчетОРозничных продажах
				Строка.Ордер = РезультатПоРегистратору.Регистратор;
						
				ДатаПоследнейЗаписи = РезультатПоРегистратору.Период;
					
			КонецЕсли;
				
			// вывод строк был осуществлен локально
			Продолжить;
				
		Иначе
			//Попробуем найти для него ордер
			Ордер = ОрдерПоРегистратору(РезультатПоРегистратору.Регистратор);
			Строка.НомерОрдера = Ордер.НомерОрдера;
			Строка.Контрагент = Ордер.ПринятоОт;
			Если Не Ордер.Пустая() Тогда
				Строка.ДокументОрдер = Ордер;						
				КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;		
			КонецЕсли;
		КонецЕсли;	
		
		// выведем строку в отчет (строки по ОтчетуОРозничныхПродажах были выведены ранее)
		
		РезультатПосчетам = РезультатПоРегистратору.Выбрать();
		
		ЕстьКурсоваяРазница = Ложь;
		СписокСчетов = ""; Разделитель = "";
		Пока РезультатПосчетам.Следующий() Цикл
			
			СписокСчетов = СписокСчетов + Разделитель + Строка(РезультатПосчетам.КорСчет);
			Разделитель = ", ";
			Если ВалютнаяКасса И (РезультатПоСчетам.СуммаКорОборотДт <> 0 И РезультатПоСчетам.ВалютнаяСуммаКорОборотДт = 0) 
				ИЛИ (РезультатПоСчетам.СуммаКорОборотКт <> 0 И РезультатПоСчетам.ВалютнаяСуммаКорОборотКт=0) Тогда
				ЕстьКурсоваяРазница = Истина;	
			КонецЕсли;	
		КонецЦикла;
		
		Строка.КоррСчет = СписокСчетов;
		СуммаПродаж    = РезультатПоРегистратору.СуммаКорОборотДт;
		СуммаВозвратов = РезультатПоРегистратору.СуммаКорОборотКт;
		Если СуммаПродаж - СуммаВозвратов > 0 Тогда
			Строка.Приход = СуммаПродаж - СуммаВозвратов;
			Строка.Расход = "-";
		Иначе
			Строка.Приход = "-";
			Строка.Расход = СуммаВозвратов - СуммаПродаж;
		КонецЕсли;
		Строка.РасходПриход = ?(СуммаПродаж    = 0, 1, 0);
		Строка.НомерОрдераДляСортировки = Прав("0000000000" + Строка.НомерОрдера, 10);
		Если ВалютнаяКасса Тогда
			СуммаПродажВалюта    = РезультатПоРегистратору.ВалютнаяСуммаКорОборотДт;
			СуммаВозвратовВалюта = РезультатПоРегистратору.ВалютнаяСуммаКорОборотКт;
			Если СуммаПродаж - СуммаВозвратов > 0 Тогда
				Строка.ПриходВалюта = Формат(СуммаПродажВалюта - СуммаВозвратовВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				Строка.РасходВалюта = "-";
			Иначе
				Строка.ПриходВалюта = "-";
				Строка.РасходВалюта =  Формат(СуммаВозвратовВалюта - СуммаПродажВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			КонецЕсли;
			Строка.Валюта = Валюта.Наименование;
			Если ЕстьКурсоваяРазница Тогда
				Если ПустаяСтрока(Строка.Контрагент) Тогда
					Строка.Контрагент = "Курсова різниця";
				Иначе 
					Строка.Контрагент = Строка.Контрагент + ", Курсова різниця";	
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		Строка.Ордер 		  = РезультатПоРегистратору.Регистратор;
		ДатаПоследнейЗаписи = РезультатПоРегистратору.Период;
	КонецЦикла;
	
	Если (ОстатокЗаДень<>0)или(ПриходЗаДень<>0)или(РасходЗаДень<>0) Тогда
		
		ТаблицаСтрокДляВывода.Сортировать("РасходПриход Возр, НомерОрдераДляСортировки Возр");
		ОбластьКонецСтраницы = Макет.ПолучитьОбласть("ШаблонКонецСтраницы");
		НомерСтроки = 1;
		КоличествоСтрок = ТаблицаСтрокДляВывода.Количество();
		ПриходЗаДеньВОтчет = 0;
		РасходЗаДеньВОтчет = 0;
		ВалютныйПриходЗаДеньВОтчет = 0;
		ВалютныйРасходЗаДеньВОтчет = 0;
		Для каждого Строка Из ТаблицаСтрокДляВывода Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Строка);
			ОбластьКонецСтраницы.Параметры.Заполнить(Строка);
			
			Если НесколькоЛистовВДень Тогда
				Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) ИЛИ ((НомерСтроки = КоличествоСтрок) и НЕ ДокументРезультат.ПроверитьВывод(ОбластьКонецСтраницы))Тогда
					// Выведем разрыв страницы
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
					СдвигНомеровГод = СдвигНомеровГод + 1;
					СдвигНомеровМесяц = СдвигНомеровМесяц + 1;
												
					ЧислоДокумента                          = Формат(ТекДата,"ДФ='дд';Л=uk_UA");
					ДатаДокумента                           = Формат(ТекДата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
					ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
					ОбластьШапка.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
					ОбластьШапка.Параметры.НомерЛиста 		= СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СдвигНомеровГод;
					
					ДокументРезультат.Вывести(ОбластьШапка);
				КонецЕсли;
				СоответствиеСдвигНомеровМесяц.Вставить(НачалоДня(ТекДата), СдвигНомеровМесяц);
				СоответствиеСдвигНомеровГод.Вставить(НачалоДня(ТекДата), СдвигНомеровГод);
				НомерСтроки = НомерСтроки + 1;
			КонецЕсли;
			
			ПриходЗаДеньВОтчет = ПриходЗаДеньВОтчет + ?(Строка.Приход = "-", 0, Строка.Приход);
			РасходЗаДеньВОтчет = РасходЗаДеньВОтчет + ?(Строка.Расход = "-", 0, Строка.Расход);
			ВалютныйПриходЗаДеньВОтчет = ВалютныйПриходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.ПриходВалюта), Строка.ПриходВалюта, 0);
			ВалютныйРасходЗаДеньВОтчет = ВалютныйРасходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.РасходВалюта), Строка.РасходВалюта, 0);
			ДокументРезультат.Вывести(ОбластьМакета);
		КонецЦикла;
		ТаблицаСтрокДляВывода.Очистить();
		
		ОбластьМакета = Макет.ПолучитьОбласть("ОстатокКонец");
		ОбластьМакета.Параметры.ОстатокКонец = ОстатокЗаДень;
		ОбластьМакета.Параметры.Приход = ?(ПриходЗаДеньВОтчет = 0, "-", ПриходЗаДеньВОтчет);
		ОбластьМакета.Параметры.Расход = ?(РасходЗаДеньВОтчет = 0, "-", РасходЗаДеньВОтчет);
		
		
		Если ПоОбособленномуПодразделению И ЗначениеЗаполнено(ОбособленноеПодразделениеОрганизации) Тогда
			Руководители = ОбщегоНазначения.ОтветственныеЛицаОбособленногоПодразделения(ОбособленноеПодразделениеОрганизации, ТекДата);
		Иначе
			Руководители = ОбщегоНазначения.ОтветственныеЛица(Организация, ТекДата);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтерФИО) Тогда
			ОбластьМакета.Параметры.Бухгалтер = ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(Руководители.ГлавныйБухгалтерФИО.Фамилия, Руководители.ГлавныйБухгалтерФИО.Имя, Руководители.ГлавныйБухгалтерФИО.Отчество, Истина); // Кратко
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Руководители.КассирФИО) Тогда
			ОбластьМакета.Параметры.Кассир    = ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(Руководители.КассирФИО.Фамилия, Руководители.КассирФИО.Имя, Руководители.КассирФИО.Отчество, Истина); // Кратко
		КонецЕсли;
		
		ФорматнаяСтрока = "Л = uk_UA";
		КоличествоПКОЗаДень = ?(КоличествоПКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоПКОЗаДень, ФорматнаяСтрока));
		КоличествоРКОЗаДень = ?(КоличествоРКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоРКОЗаДень, ФорматнаяСтрока));
		КоличествоПКОЗаДень = СокрЛП(Лев(КоличествоПКОЗаДень, СтрДлина(КоличествоПКОЗаДень) - 3 ));
		КоличествоРКОЗаДень = СокрЛП(Лев(КоличествоРКОЗаДень, СтрДлина(КоличествоРКОЗаДень) - 3 ));
		ОбластьМакета.Параметры.КоличествоПКО = КоличествоПКОЗаДень;
		ОбластьМакета.Параметры.КоличествоРКО = КоличествоРКОЗаДень;



		Если ВалютнаяКасса Тогда
			ОбластьМакета.Параметры.ОстатокКонецВалюта = Формат(ВалютныйОстатокЗаДень,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.ПриходВалюта = Формат(ВалютныйПриходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.РасходВалюта = Формат(ВалютныйРасходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.Валюта = Валюта.Наименование;
		КонецЕсли;
		// количество листов за месяц
		Если ВидЛистаКассовойКниги = "Конец месяца" Тогда	
			КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
			ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
		КонецЕсли;	
		// количество листов за год
		Если ВидЛистаКассовойКниги = "Конец года" Тогда
			КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
			ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
			КоличествоЛистовГод = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровГод.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛиста + 1; 
			ОбластьМакета.Параметры.КоличествоЛистовГод = "Листів з початку року: " + КоличествоЛистовГод; 
		КонецЕсли;
		ДокументРезультат.Вывести(ОбластьМакета);

	КонецЕсли;	
	
	// проверим наличие ПКО с приемом прозничной выручки по АТТ, не подтвержденные ОтчетамиОРозничныхПродажах.
	Для каждого ПКО Из ТаблицаПКОпоАТТ Цикл
				
		Если НЕ ПКО.ПКОУчтен Тогда
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"".';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"".'"),
			ПКО.Ссылка, Формат(ПКО.Дата,"ДФ=dd.MM.yyyy")));
		Иначе
					
			Если ПКО.СуммаПродаж > 0 Тогда
				Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму продаж %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму продажу %3.'"),
				ПКО.Ссылка, Формат(ПКО.Дата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаПродаж,"ЧДЦ=2; ЧГ=0")));
			КонецЕсли;
					
			Если ПКО.СуммаВозвратов > 0 Тогда
				Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму повернень %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму повернень %3.'"),
				ПКО.Ссылка, Формат(ПКО.Дата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаВозвратов,"ЧДЦ=2; ЧГ=0")));
			КонецЕсли;
					
		КонецЕсли;
				
	КонецЦикла;
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
КонецПроцедуры

Функция ПроверкаПериода()
	
	ПроверкаПройдена=Истина;
	
	Если ДатаНач > ДатаКон Тогда
		
		Предупреждение(НСтр("ru='Неправильно задан период формирования отчета!"
"Дата начала больше даты окончания периода.';uk='Неправильно заданий період формування звіту!"
"Дата початку більша дати закінчення періоду.'"));
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли ДатаНач='00010101' Тогда
		
		Предупреждение(НСтр("ru='Не указана дата начала отчета';uk='Не зазначена дата початку звіту'"));
					   
		ПроверкаПройдена=Ложь;
		
	ИначеЕсли ДатаКон='00010101' Тогда
		
		Предупреждение(НСтр("ru='Не указана дата конца отчета';uk='Не зазначена дата кінця звіту'"));
					   
		ПроверкаПройдена=Ложь;
	
	КонецЕсли;
		
	Возврат ПроверкаПройдена;
	
КонецФункции // ПроверкаПериода()

Процедура СформироватьОтчет(ДокументРезультат, ВидОтчета) Экспорт
	
	Если НЕ ПроверкаПериода() Тогда
		Возврат;
	КонецЕсли;
	
	Если Организация.Пустая() Тогда
		Предупреждение(НСтр("ru='Не выбрана организация';uk='Не обрана організація'"));
		Возврат;
	КонецЕсли;
	
	Если Валюта.Пустая() Тогда
		Предупреждение(НСтр("ru='Не выбрана валюта';uk='Не обрана валюта'"));
		Возврат;
	КонецЕсли;
    	
	ДокументРезультат.Очистить();
	
	СтруктураНомеров = Новый Структура;
	
	Если ВидОтчета = "Журнал регистрации приходных ордеров" Тогда
		СформироватьЖурналРегистрацииПриходных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Журнал регистрации расходных ордеров" Тогда
		СформироватьЖурналРегистрацииРасходных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Журнал регистрации приходных и расходных ордеров" Тогда
		СформироватьЖурналРегистрацииРасходныхИПриходных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Книга учета принятых и выданных денег" Тогда
		СформироватьКнигаПринятыхВыданных(ДокументРезультат);
	ИначеЕсли ВидОтчета = "Кассовая книга" Тогда
		СформироватьКассоваяКнига(ДокументРезультат, СтруктураНомеров);		
	КонецЕсли;	
	
	ЗаписатьПоследнийНомерЛиста(СтруктураНомеров)
	
КонецПроцедуры // СформироватьРезультат()

Процедура ЗаписатьПоследнийНомерЛиста(СтруктураНомеров)
	
	Если НЕ ВидОтчета = "Кассовая книга" Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач)); 
	Запрос.УстановитьПараметр("ДатаКон", НачалоДня(ДатаКон)); 
	
	Если ОбособленноеПодразделениеОрганизации.Пустая() Тогда
		СтруктурнаяЕдиница = Организация;
	Иначе
		СтруктурнаяЕдиница = ОбособленноеПодразделениеОрганизации;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Валюта", Валюта); 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоследниеНомераЛистовКассовойКниги.Период,
	|	ПоследниеНомераЛистовКассовойКниги.НомерЛистаМесяца,
	|	ПоследниеНомераЛистовКассовойКниги.НомерЛистаГода
	|ИЗ
	|	РегистрСведений.ПоследниеНомераЛистовКассовойКниги КАК ПоследниеНомераЛистовКассовойКниги
	|ГДЕ
	|	ПоследниеНомераЛистовКассовойКниги.Период >= &ДатаНач
	|	И ПоследниеНомераЛистовКассовойКниги.Период <= &ДатаКон
	|	И ПоследниеНомераЛистовКассовойКниги.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|	И ПоследниеНомераЛистовКассовойКниги.Валюта = &Валюта";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.ПоследниеНомераЛистовКассовойКниги.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = Выборка.Период;
		МенеджерЗаписи.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
		МенеджерЗаписи.Валюта = Валюта;
		
		МенеджерЗаписи.Удалить();
		
	КонецЦикла;
	
	СоответствиеНомеровМесяц = СтруктураНомеров.СоответствиеНомеровМесяц; 
	СоответствиеНомеровГод   = СтруктураНомеров.СоответствиеНомеровГод;
	СоответствиеСдвигНомеровМесяц = СтруктураНомеров.СоответствиеСдвигНомеровМесяц;
	СоответствиеСдвигНомеровГод   = СтруктураНомеров.СоответствиеСдвигНомеровГод;
	
	Для Каждого Строка ИЗ СоответствиеНомеровГод Цикл
		
		Период = Строка.Ключ;
		
		МенеджерЗаписи = РегистрыСведений.ПоследниеНомераЛистовКассовойКниги.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = Период;
		МенеджерЗаписи.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
		МенеджерЗаписи.Валюта = Валюта;
		
		МенеджерЗаписи.НомерЛистаМесяца		= СоответствиеНомеровМесяц.Получить(Период) + СоответствиеСдвигНомеровМесяц.Получить(Период);
		МенеджерЗаписи.НомерЛистаГода		= СоответствиеНомеровГод.Получить(Период)   + СоответствиеСдвигНомеровГод.Получить(Период);
		
		
		МенеджерЗаписи.Записать();
	КонецЦикла;	
	
КонецПроцедуры

Функция НеЗаполненныНомера(УчетДенежныхСредствПоОбособленнымПодразделениям)
	
	Если НачалоДня(ДатаНач) = НачалоГода(ДатаНач) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗапросКоличествоСформированныхСтраниц = Новый Запрос;
	ЗапросКоличествоСформированныхСтраниц.УстановитьПараметр("ДатаНач", НачалоГода(ДатаНач));
	ЗапросКоличествоСформированныхСтраниц.УстановитьПараметр("ДатаКон", НачалоДня(ДатаНач)-1);
	
	Если ОбособленноеПодразделениеОрганизации.Пустая() Тогда
		ЗапросКоличествоСформированныхСтраниц.УстановитьПараметр("СтруктурнаяЕдиница", Организация);
	Иначе
		ЗапросКоличествоСформированныхСтраниц.УстановитьПараметр("СтруктурнаяЕдиница", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	ЗапросКоличествоСформированныхСтраниц.УстановитьПараметр("Валюта", Валюта);
	
	ЗапросКоличествоСформированныхСтраниц.Текст=
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоследниеНомераЛистовКассовойКниги.Период) КАК КвоПериод
	|ИЗ
	|	РегистрСведений.ПоследниеНомераЛистовКассовойКниги КАК ПоследниеНомераЛистовКассовойКниги
	|ГДЕ
	|	ПоследниеНомераЛистовКассовойКниги.Период >= &ДатаНач
	|	И ПоследниеНомераЛистовКассовойКниги.Период <= &ДатаКон
	|	И ПоследниеНомераЛистовКассовойКниги.Валюта = &Валюта
	|	И ПоследниеНомераЛистовКассовойКниги.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
	ВыборкаКоличествоСформированныхСтраниц = ЗапросКоличествоСформированныхСтраниц.Выполнить().Выбрать();
	КоличествоСформированныхСтраниц = 0;
	Если ВыборкаКоличествоСформированныхСтраниц.Следующий() Тогда
		КоличествоСформированныхСтраниц = ВыборкаКоличествоСформированныхСтраниц.КвоПериод;
	КонецЕсли;
	
	ЗапросКоличествоДнейЗаПериод = Новый Запрос; 
	ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("ДатаНач",НачалоГода(ДатаНач));
	ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("ДатаКон",НачалоДня(ДатаНач)-1);
	ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("Организация",Организация);
	
	Если Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОбороты.Валюта = &Валюта
					   |";
		ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("Валюта",Валюта);
		ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;
	
	Если НЕ УчетДенежныхСредствПоОбособленнымПодразделениям Тогда
		ТекстСубконто = "";
	Иначе
		ТекстСубконто = "&Субконто";
		Если ПустаяСтрока(ТекстФильтр) Тогда
			ТекстФильтр = "ГДЕ
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		Иначе
			ТекстФильтр = ТекстФильтр + " И
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		КонецЕсли; 
		ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("Субконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		ЗапросКоличествоДнейЗаПериод.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	ЗапросКоличествоДнейЗаПериод.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХозрасчетныйОбороты.Период) КАК КвоПериод
	|ИЗ
	| РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, День, Счет = &Счет,"+ТекстСубконто+", Организация = &Организация) КАК ХозрасчетныйОбороты
	|"+ ТекстФильтр+"
	|";
				 
	ВыборкКоличествоДнейЗаПериода = ЗапросКоличествоДнейЗаПериод.Выполнить().Выбрать();
	
	КоличествоСтраниц = 0;
	Если ВыборкКоличествоДнейЗаПериода.Следующий() Тогда
		КоличествоСтраниц = ВыборкКоличествоДнейЗаПериода.КвоПериод;
	КонецЕсли;
	
	Если (КоличествоСтраниц > 0) И (КоличествоСтраниц > КоличествоСформированныхСтраниц) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция НомерПервогоЛистаГода(Период);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", Организация);
	НастройкиПечатиКассовойКниги = РегистрыСведений.НастройкиПечатиКассовойКниги.СрезПоследних(Период, Отбор);
	Если НастройкиПечатиКассовойКниги.Количество() > 0 Тогда 
		Возврат НастройкиПечатиКассовойКниги[0].НомерПервогоЛиста;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции


НП =  Новый НастройкаПериода;
мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();

#КонецЕсли
