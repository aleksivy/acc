
#Область Функції

Функция ОтриматиМасивДанихРядка(Знач ПотРядок, Роздільник = ";")
	ДаніРядка = Новый Массив;
	ПотРядок = СокрЛП(ПотРядок);
	ДовжинаРядка = СтрДлина(ПотРядок);
	Если ДовжинаРядка > 0 Тогда
		Пока ПотРядок <> "" Цикл
			ПотСимвол = Лев(ПотРядок, 1);
			Если ПотСимвол = Роздільник Тогда
				ДаніРядка.Добавить("");
				ПотРядок = Сред(ПотРядок, 2);
			ИначеЕсли ПотСимвол = """" Тогда
				ПотЗначення = "";
				ПотРядок = Сред(ПотРядок, 2);
				Пока Истина Цикл
					НаступніЛапки = Найти(ПотРядок, """");
					ПотЗначення = ПотЗначення + Лев(ПотРядок, НаступніЛапки - 1);
					ПотРядок = Сред(ПотРядок, НаступніЛапки + 1);
					ПотСимвол = Лев(ПотРядок, 1);
					Если ПотСимвол = """" Тогда
						ПотЗначення = ПотЗначення + """";
						ПотРядок = Сред(ПотРядок, 2);
					Иначе
						ДаніРядка.Добавить(СокрЛП(ПотЗначення));
						НаступнийРоздільник = Найти(ПотРядок, Роздільник);
						Если НаступнийРоздільник <> 0 Тогда
							ПотРядок = Сред(ПотРядок, НаступнийРоздільник + 1);
						Иначе
							ПотРядок = "";
						КонецЕсли;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ПотСимвол = " " Или ПотСимвол = Символы.Таб Тогда
				ПотРядок = Сред(ПотРядок, 2);
			Иначе
				НаступнийРоздільник = Найти(ПотРядок, Роздільник);
				Если НаступнийРоздільник <> 0 Тогда
					ПотЗначення = Лев(ПотРядок, НаступнийРоздільник - 1);
					ДаніРядка.Добавить(СокрЛП(ПотЗначення));
					ПотРядок = Сред(ПотРядок, НаступнийРоздільник + 1);
				Иначе
					ПотЗначення = ПотРядок;
					ДаніРядка.Добавить(СокрЛП(ПотЗначення));
					ПотРядок = "";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат ДаніРядка;
КонецФункции

#КонецОбласти

#Область Інтерфейсні

Функция ОтриматиФорматиВивантаження() Экспорт
	Формати = Новый Массив;
	Формати.Добавить(Новый Структура("Формат, Опис", "CSV", "Файл рядку з розділювачами (CSV)"));
	Возврат Формати;
КонецФункции

Функция ПрочитатиВиписку(АдресиСховищаВиписки, Формат = "", Параметри) Экспорт
	
	Результат = Новый Структура("Дані, Попередження", Неопределено, Новый Массив);
	
	Версія = Неопределено;
	Параметри.Свойство("Версія", Версія);
	Если Версія <> 2 Тогда
		Результат.Попередження.Добавить(НСтр("ru = 'Потрібно оновити обробку формату'; uk = 'Потрібно оновити обробку формату'"));
		Возврат Результат;
	КонецЕсли;
	
	Дані = Параметри.Дані;
	
	Файли = Новый Массив;
	
	ПопКількістьРядків = 0;
	
	Для Каждого ПотЕлемент Из АдресиСховищаВиписки Цикл
		
		ТмчНазваФайлу = ПолучитьИмяВременногоФайла();
		ДаніВиписки = ПолучитьИзВременногоХранилища(ПотЕлемент.АдресаСховищаВиписки);
		ДаніВиписки.Записать(ТмчНазваФайлу);
		Файли.Добавить(ТмчНазваФайлу);
		
		ФайлВиписки	= Новый ТекстовыйДокумент;
		Попытка
			ФайлВиписки.Прочитать(ТмчНазваФайлу);
		Исключение
			Результат.Попередження.Добавить(НСтр("ru = 'Помилка читання файлу виписки'; uk = 'Помилка читання файлу виписки'") + " """ + ПотЕлемент.НазваФайлуВиписки + """");
			Продолжить;
		КонецПопытки;
		
		Для Лч = 2 По ФайлВиписки.КоличествоСтрок() Цикл
			ПотРядок = ФайлВиписки.ПолучитьСтроку(Лч);
			ДаніРядка = ОтриматиМасивДанихРядка(ПотРядок);
			Если ДаніРядка.Количество() <> 17 Тогда
				Продолжить;
			КонецЕсли;
			РахунокОрганізації = ДаніРядка[2];
			Если РахунокОрганізації <> Параметри.НомерРахунку Тогда
				Продолжить;
			КонецЕсли;
			ДатаВиписки = Дата(Сред(ДаніРядка[4], 7, 4), Сред(ДаніРядка[4], 4, 2), Сред(ДаніРядка[4], 1, 2), Сред(ДаніРядка[4], 12, 2), Сред(ДаніРядка[4], 15, 2), 0);
			Если ЗначениеЗаполнено(Параметри.ПеріодВиписки.ДатаНачала) И ДатаВиписки < Параметри.ПеріодВиписки.ДатаНачала Тогда
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Параметри.ПеріодВиписки.ДатаОкончания) И ДатаВиписки > Параметри.ПеріодВиписки.ДатаОкончания Тогда
				Продолжить;
			КонецЕсли;
			ПотПлатіж = Дані.Добавить();
			СумаВибуття = ДаніРядка[13];
			СумаНадходження = ДаніРядка[14];
			Если ПустаяСтрока(СумаВибуття) Тогда
				ПотПлатіж.Напрямок = 0; //* надходження
				ПотПлатіж.Сума = Число(СумаНадходження);
			Иначе
				ПотПлатіж.Напрямок = 1; //* вибуття
				ПотПлатіж.Сума = Число(СумаВибуття);
			КонецЕсли;
			ПотПлатіж.ДатаВиписки = ДатаВиписки;
			ПотПлатіж.ДатаДокумента = Дата(Сред(ДаніРядка[12], 7, 4), Сред(ДаніРядка[12], 4, 2), Сред(ДаніРядка[12], 1, 2));
			ПотПлатіж.НомерДокумента = ДаніРядка[11];
			ПотПлатіж.Призначення = ДаніРядка[15];
			ПотПлатіж.НазваКонтрагента = ДаніРядка[10];
			ПотПлатіж.КодКонтрагента = ДаніРядка[9];
			ПотПлатіж.НомерРахункуКонтрагента = ДаніРядка[8];
			ПотПлатіж.МФОКонтрагента = ДаніРядка[6];
			ПотПлатіж.НазваБанкуКонтрагента = ДаніРядка[7];
		КонецЦикла;
		
		ПотКількістьРядків = Дані.Количество() - ПопКількістьРядків;
		ПопКількістьРядків = Дані.Количество();
		
		Если ПотКількістьРядків = 0 И ФайлВиписки.КоличествоСтрок() Тогда
			Результат.Попередження.Добавить(НСтр("ru = 'У файлі не виявлено потрібних даних. Перевірте дату виписки, рахунок, формат файлу'; uk = 'У файлі не виявлено потрібних даних. Перевірте дату виписки, рахунок, формат файлу'") + " """ + ПотЕлемент.НазваФайлуВиписки + """");
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	Результат.Вставить("Дані", Дані);
	
	Для Каждого ПотФайл Из Файли Цикл
		Попытка
			УдалитьФайлы(ПотФайл);
		Исключение КонецПопытки;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
