
#Область Інтерфейсні

// Повертає перелік доступних форматів
//
// Возвращаемое значение:
//   Масив   - Масив структур з полями "Формат, Опис", де "Формат" - коротка назва формату, "Опис" - опис формату
//
Функция ОтриматиФорматиВивантаження() Экспорт
	Формати = Новый Массив;
	Формати.Добавить(Новый Структура("Формат, Опис", "CSV", "Файл рядку з розділювачами (CSV)"));
	Формати.Добавить(Новый Структура("Формат, Опис", "TXT", "Файл рядку (TXT)"));
	Формати.Добавить(Новый Структура("Формат, Опис", "DBF", "Файл бази даних (DBF)"));
	Формати.Добавить(Новый Структура("Формат, Опис", "DAT", "Файл рядку (DAT)"));
	Формати.Добавить(Новый Структура("Формат, Опис", "XML", "Файл XML (XML)"));
	Возврат Формати;
КонецФункции

// Повертає результат обробки файлу виписки (версія 2)
//
// Параметры:
//  АдресаСховищаВиписки  - Структура - містить поля "НазваФайлуВиписки, АдресаСховищаВиписки", де
//                          "НазваФайлуВиписки" - Рядок - назва файлу виписки на клієнті;
//                          "АдресаСховищаВиписки" - Рядок - адреса розміщення файлу виписки у тимчасовому сховищі.
//  Формат                - Рядок - коротка назва формату
//  Параметри             - Структура - містить поля "НомерРахунку, ДатаПлатежу, Дані", де
//                          "Версія" - Число - номер версії даних;
//                          "НомерРахунку" - Рядок - номер банківського рахунку організації;
//                          "ПеріодВиписки" - СтандартнийПеріод - період виписки;
//                          "Дані" - ТаблицяЗначень - порожня таблиця значень для заповнення; містить колонки:
//                           "ДатаВиписки" - Дата - дата виписки для документа;
//                           "Напрямок" - Число: 0 - вхідний платіж, 1 - вихідний;
//                           "Сума" - Число - сума платежу;
//                           "ДатаДокумента" - Дата - дата платіжного документу;
//                           "НомерДокумента" - Рядок - номер платіжного документу;
//                           "Призначення" - Рядок - призначення платежу;
//                           "НазваКонтрагента" - Рядок - назва контрагенту платежу;
//                           "КодКонтрагента" - Рядок - ідентифікаційний код контрагента (за ЄДРПОУ, ДРФО тощо);
//                           "НомерРахункуКонтрагента" - Рядок - номер банківського рахунку контрагента;
//                           "МФОКонтрагента" - Рядок - МФО банку контрагента;
//                           "НазваБанкуКонтрагента" - Рядок - назва банку контрагента.
//
// Возвращаемое значение:
//   Структура   - містить поля "Дані, Попередження", де
//                 "Дані" - заповнена таблиця значень, що отримана з параметром "Параметри.Дані";
//                 "Попередження" - Масив - текст попереджень про помилку для виведення користувачу (поле не обов'язкове)
//
Функция ПрочитатиВиписку(АдресиСховищаВиписки, Формат = "", Параметри) Экспорт
	
	Результат = Новый Структура("Дані, Попередження", Неопределено, Новый Массив);
	
	Версія = Неопределено;
	Параметри.Свойство("Версія", Версія);
	Если Версія <> 2 Тогда
		Результат.Попередження.Добавить(НСтр("ru = 'Потрібно оновити обробку формату'; uk = 'Потрібно оновити обробку формату'"));
		Возврат Результат;
	КонецЕсли;
	
	Дані = Параметри.Дані;
	
	Файли = Новый Массив;
	
	ПопКількістьРядків = 0;
	
	Для Каждого ПотЕлемент Из АдресиСховищаВиписки Цикл
		
		ТмчНазваФайлу = ПолучитьИмяВременногоФайла();
		ДаніВиписки = ПолучитьИзВременногоХранилища(ПотЕлемент.АдресаСховищаВиписки);
		ДаніВиписки.Записать(ТмчНазваФайлу);
		Файли.Добавить(ТмчНазваФайлу);
		
		ФайлВиписки	= Новый ТекстовыйДокумент;
		Попытка
			ФайлВиписки.Прочитать(ТмчНазваФайлу);
		Исключение
			Результат.Попередження.Добавить(НСтр("ru = 'Помилка читання файлу виписки'; uk = 'Помилка читання файлу виписки'") + " """ + ПотЕлемент.НазваФайлуВиписки + """");
			Продолжить;
		КонецПопытки;
		
		Для Лч1 = 2 По ФайлВиписки.КоличествоСтрок() Цикл
			//* обробка рядків та заповнення таблиці значень "Дані"
		КонецЦикла;
		
		ПотКількістьРядків = Дані.Количество() - ПопКількістьРядків;
		ПопКількістьРядків = Дані.Количество();
		
		Если ПотКількістьРядків = 0 И ФайлВиписки.КоличествоСтрок() Тогда
			Результат.Попередження.Добавить(НСтр("ru = 'У файлі не виявлено потрібних даних. Перевірте дату виписки, рахунок, формат файлу'; uk = 'У файлі не виявлено потрібних даних. Перевірте дату виписки, рахунок, формат файлу'") + " """ + ПотЕлемент.НазваФайлуВиписки + """");
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	Результат.Вставить("Дані", Дані);
	
	Для Каждого ПотФайл Из Файли Цикл
		Попытка
			УдалитьФайлы(ПотФайл);
		Исключение КонецПопытки;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
