{3,
{38,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере"},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"Настройки",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",5,13,1,
{
{#base64:Qk06AwAAAAAAADoAAAAoAAAAEAAAABAAAAABABgAAAAAAAADAAAAAAAAAAAAAAAA
AAAAAAAAAAAAADOZzDMzZv///////////////////////////////////5mZmZmZ
mZmZmf///////zNmmTNmmTMzZv///////////////////////////5mZmczMzGZm
ZpmZmf///////zOZzDNmmTNmmTMzZv///////////////////5mZmczMzP///8zM
zJmZmf///////////zOZzDNmmTNmmTMzZv///////////5mZmczMzP///8zMzJmZ
mf///////////////////zOZzDNmmTNmmTMzZv///5mZmczMzP///8zMzJmZmf//
/////////////////////////zOZzDNmmTNmmTMzZszMzP///8zMzJmZmf//////
/////////////////////////////zOZzDNmmTNmmTMzZszMzJmZmf//////////
/////////////////////////////5mZmTOZzDNmmTNmmTMzZv//////////////
/xoaGjMzM////////////4aGhpmZmbu7u4aGhjOZzDNmmTNmmTMzZv///////4aG
hoaGhmZmZjMzM////4aGhru7u7u7u4aGhoaGhoaGhjOZzDNmmTNmmTMzZkNDQxoa
GpmZmWZmZmZmZoaGhru7u2ZmZkNDQ7u7u4aGhpmZmZmZmTOZzDNmmWZmZpmZmWZm
ZpmZmczMzIaGhmZmZru7u8zMzMzMzLu7u0NDQ0NDQ////////0NDQ5mZmZmZmZmZ
mWZmZmZmZv///2ZmZru7u////0NDQ8zMzGZmZv///////4aGhoaGhszMzJmZmZmZ
mWZmZpmZmf///4aGhszMzP///0NDQ////4aGhv///4aGhmZmZmZmZpmZmczMzIaG
hjNmmTMzZv///////4aGhuTk5GZmZuTk5IaGhv///4aGhpmZmWZmZmZmZmZmZjOZ
zDNmmf///////////////4aGhmZmZoaGhv///////4aGhszMzIaGhv//////////
/////////////w==}
},0,""},1,
{"Pattern"},"",2,0,1,
{8,
{148,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{143,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НастройкиФорматовОбмена",
{1,0},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",12,1,1,
{
{#base64:Qk02BQAAAAAAADYEAAAoAAAAEAAAABAAAAABAAgAAAAAAAABAAAAAAAAAAAAAAAB
AAAAAAAAAHsAAAiUCAAInAgACIwQAAilEAAxjBgAIZQYABClGAAYpRgAGJQhACF7
KQA5lCkAUpQpACmcKQBKpSkAGK0pACG1KQAhtTEAIb0xACGMOQAYpTkAOaU5AGuE
QgA5nEIAQrVCACnGQgBalEoAjLVKAFK9SgBSUlIAOc5SABilWgBjpVoAOdZaAGNj
YwBza2MAjHNjAGPGYwBzxmMAQtZjAGtrawBK3msAKVpzAErncwAxa3sAQmt7AFrn
ewBS73sAKVKEAFJjhABztYQAc9aEAABCjAApWowAjIyMALWljAAhSpQAAFKUACFS
lAAhY5QAa/eUAEqEnABzhJwAMa2cAMa1nAAIY6UAAGulABhzpQClpaUAlOelAAhr
rQAYc60AIXOtACl7tQA5pbUAY629ACmMxgAQlMYAQqXGAAiUzgAQlM4AKZTOABCc
zgAYnM4Azs7OABil1gAppdYAY8bWANbW1gAppd4AMa3eAEqt3gBCtd4A3t7eAEKt
5wBCtecAY73nAGvG5wBCve8ASr3vAFLG7wBrxu8AUsb3AMDAwAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGdnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2c+
NGdnZ2dnZ2dnZ2dnSEcwSVY1OUFnZ2dnZ2dnZ1tfQVFaRk1QZ2dnZ2dnZzpMY2Jf
WllVTTQxZ2dnZ2c4XmZjYD1DUE1CO2dnZ2dnYWRjZV0oKk1PUktnZ2dnZxNKY2Vd
KCxVU1NnZyADAAseP1xXWCItVlZnZ2cNKREPHhQfGEAdJE5TZ2dnBSkrIR4ZEggG
FmdnZ2dnFRErKzMyCQcHAgxnZ2dnZ0U8LylYRAoBBAcmZ2dnZ2dnJykpWEQXEggO
Z2dnZ2dnZ2cuKVQ2GhwlZ2dnZ2dnZ2dnZyc3IxsQZ2dnZ2dnZ2c=}
},0,""},1,
{"Pattern"},"",2,0,1,
{8,
{149,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиФорматовОбменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{82,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаШапка",
{1,2,
{"ru","Группа шапка"},
{"uk","Група шапка"}
},
{1,2,
{"ru","Группа шапка"},
{"uk","Група шапка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{89,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаСчет",
{1,2,
{"ru","Группа счет"},
{"uk","Група рахунок"}
},
{1,2,
{"ru","Группа счет"},
{"uk","Група рахунок"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{83,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Организация",1,0,
{1,0},
{1,0},
{2,
{1},
{0,985e6760-3cf0-424e-851a-908fc76120c6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{84,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ОрганизацияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{152,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОрганизацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{85,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"БанковскийСчет",1,0,
{1,0},
{1,0},
{2,
{1},
{0,ce6c897b-f645-4ff8-b6ff-7a64aae99943}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"БанковскийСчетПриИзменении"},1,
{19,
{86,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"БанковскийСчетКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{153,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БанковскийСчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{146,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ИнфоБанковскогоСчета",0,0,
{1,0},
{1,0},
{1,
{15}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,1,0,2,2,2,
{1,0},0,
{3,3,
{-14}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},
{0},1,
{19,
{147,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ИнфоБанковскогоСчетаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{154,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИнфоБанковскогоСчетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{151,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{87,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ФорматОбмена",1,0,
{1,0},
{1,0},
{2,
{1},
{0,5dd4bffd-7f2b-4c75-8413-820e1fafa19e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ФорматОбменаПриИзменении"},1,
{19,
{88,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ФорматОбменаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{155,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФорматОбменаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{150,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаШапкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"Страницы",
{1,2,
{"ru","Страницы"},
{"uk","Сторінки"}
},
{1,2,
{"ru","Страницы"},
{"uk","Сторінки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницаИмпорт",
{1,2,
{"ru","Импорт выписки"},
{"uk","Імпорт виписки"}
},
{1,2,
{"ru","Страница импорт"},
{"uk","Сторінка імпорт"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,3,
{0},"",13,7,1,
{
{#base64:Qk32AAAAAAAAAHYAAAAoAAAAEAAAABAAAAABAAQAAAAAAIAAAAAAAAAAAAAAABAA
AAAAAAAAhAAAAIwpAAC9SgAAwMDAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMzMzMzMzMzAAAAAAAzMzMhEREREDMzMy
EREREQMzMzIRFEERAzMzMhFERBEDMzMyFEREQQMzMzIRFEERAzMzMhEUQREDMzMy
ERRBEQMzMzIRFEERAzMzMhEREREDMzMyIiIiIgMzMzJEREREAzMzMkREREQDMzMy
IiIiIgMz}
},0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаИмпортШапка",
{1,2,
{"ru","Группа импорт шапка"},
{"uk","Група імпорт шапка"}
},
{1,2,
{"ru","Группа импорт шапка"},
{"uk","Група імпорт шапка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаДатаСчет",
{1,2,
{"ru","Группа дата счет"},
{"uk","Група дата рахунок"}
},
{1,2,
{"ru","Группа дата счет"},
{"uk","Група дата рахунок"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДатаВыписки",1,0,
{1,0},
{1,0},
{2,
{1},
{0,22424b72-6216-4119-87ad-f05a1343dd50}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДатаВыпискиПриИзменении"},1,
{19,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДатаВыпискиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{160,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДатаВыпискиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{159,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДатаСчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаПараметрыИмпорта",
{1,2,
{"ru","Группа параметры импорта"},
{"uk","Група параметри імпорту"}
},
{1,2,
{"ru","Группа параметры импорта"},
{"uk","Група параметри імпорту"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИмяФайлаИмпорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,a8757d27-2734-496e-a36f-f9bf8601e1fc}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,1,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"ИмяФайлаИмпортНачалоВыбора",ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,"ИмяФайлаИмпортОткрытие"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ИмяФайлаИмпортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{162,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИмяФайлаИмпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаТипКодировка",
{1,2,
{"ru","Группа тип кодировка"},
{"uk","Група тип кодування"}
},
{1,2,
{"ru","Группа тип кодировка"},
{"uk","Група тип кодування"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТипФайлаИмпорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,f5e4520d-3d36-47c1-8262-565f22769565}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,3,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","TXT"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","Текстовые файлы"},
{"uk","Текстові файли"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","DBF"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","DBF файлы"},
{"uk","DBF файли"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","XML"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","XML файлы"},
{"uk","XML файли"}
}
}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
}
},15,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТипФайлаИмпортПриИзменении"},1,
{19,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТипФайлаИмпортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{164,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТипФайлаИмпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КодировкаФайлаИмпорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,10ef16b2-2185-4e37-9d84-0acb7b14e4fb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,2,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","ANSI"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","Windows"},
{"uk","Windows"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","OEM"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","DOS"},
{"uk","DOS"}
}
}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
}
},10,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КодировкаФайлаИмпортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{165,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КодировкаФайлаИмпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КодВБанкеИмпорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,afb544e5-18aa-454c-9125-b8ac67fd1006}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"КодВБанкеИмпортПриИзменении"},1,
{19,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КодВБанкеИмпортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{166,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КодВБанкеИмпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{163,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаТипКодировкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{161,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПараметрыИмпортаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{158,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИмпортШапкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаТаблицаИмпорт",
{1,2,
{"ru","Группа таблица импорт"},
{"uk","Група таблиця імпорт"}
},
{1,2,
{"ru","Группа таблица импорт"},
{"uk","Група таблиця імпорт"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{48,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,1,
{0,
{0,
{"B",1},0}
},"ТаблицаИмпорт",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{2,1282f000-23b6-4887-87f4-9e8e79db3d32,"ТаблицаИмпортВыбор",b3c10170-c5ff-4cba-b537-679e1c872b45,"ТаблицаИмпортПриНачалеРедактирования"},
{0},1,
{19,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{19,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ТаблицаИмпортКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{105,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаИмпортТаблицаИмпортПометитьВсе",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{168,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортТаблицаИмпортПометитьВсеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{106,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаИмпортТаблицаИмпортСнятьПометкуСоВсех",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-11},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{169,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортТаблицаИмпортСнятьПометкуСоВсехРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{81,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаИмпортИмпортВыписки",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{170,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортИмпортВыпискиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{102,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаИмпортСформироватьВыписки",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{171,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСформироватьВыпискиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,0},17,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ТаблицаИмпортНомерСтроки",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{-2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,0,2,2,2,
{1,0},0,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},
{0},1,
{19,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортНомерСтрокиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{182,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортНомерСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{100,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортСтатус",0,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,c7891498-254b-4bd3-93ea-5cedfdfea307}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{101,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортСтатусКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{183,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСтатусРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ТаблицаИмпортФлаг",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,6685e68a-13da-4ea9-b545-2df383159811}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортФлагКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{184,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортФлагРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{74,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортВидДокумента",1,0,
{1,2,
{"ru","Вид документа"},
{"uk","Вид документу"}
},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,772a136c-895c-4258-9c27-6aa0c08340fb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{75,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортВидДокументаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{185,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортВидДокументаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{80,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортГруппаКонтрагентСчет",
{1,2,
{"ru","Таблица импорт группа контрагент счет"},
{"uk","Таблиця імпорт група контрагент рахунок"}
},
{1,2,
{"ru","Таблица импорт группа контрагент счет"},
{"uk","Таблиця імпорт група контрагент рахунок"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,1,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортКонтрагент",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,abbbd47d-384a-4ebd-bd6b-17be01391926}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,0,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТаблицаИмпортКонтрагентПриИзменении"},1,
{19,
{55,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортКонтрагентКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{187,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортКонтрагентРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортСчетКонтрагента",1,0,
{1,2,
{"ru","Счет контрагента"},
{"uk","Рахунок контрагента"}
},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,4da95f7b-e9a2-43ef-af1c-b4e51560b068}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,0,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{79,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортСчетКонтрагентаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{188,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСчетКонтрагентаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{186,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортГруппаКонтрагентСчетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортПриход",1,0,
{1,2,
{"ru","Приход"},
{"uk","Надходження"}
},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,afea56c0-00ea-4896-b498-5a18ab049083}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортПриходКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{189,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортПриходРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{58,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортРасход",1,0,
{1,2,
{"ru","Расход"},
{"uk","Видаток"}
},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,3d11082f-2318-43b2-81ce-0225d68a6cf1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{59,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортРасходКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{190,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортРасходРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортСодержание",1,0,
{1,2,
{"ru","Содержание"},
{"uk","Зміст"}
},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,70a24746-10fd-4987-80e8-42d519695e33}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортСодержаниеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{191,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСодержаниеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{76,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортНомерПП",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,5cd30888-cef1-4776-b1db-a601c383c218}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортНомерППКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{192,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортНомерППРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{103,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортТипДокумента",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,2d46db98-d516-4a23-b709-5d53b0810672}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{104,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортТипДокументаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{193,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортТипДокументаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{94,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортВидОперации",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,756dc270-60ad-430f-bd6b-e50bc5b90bc5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТаблицаИмпортВидОперацииПриИзменении"},1,
{19,
{95,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортВидОперацииКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{194,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортВидОперацииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{92,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортСтатьяДДС",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,f78d15db-5f3d-4a03-938c-4c2eda177741}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{93,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортСтатьяДДСКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{195,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСтатьяДДСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{98,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортСтатьяДоходовИлиРасходов",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,76678d0b-d126-4dc1-b56a-9f15d4eb1c5e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{99,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортСтатьяДоходовИлиРасходовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{196,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСтатьяДоходовИлиРасходовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{96,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортПодразделение",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,f5660618-836a-4afb-b00d-b13a11221f04}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{97,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортПодразделениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{197,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортПодразделениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{109,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ТаблицаИмпортОплачен",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,dff6cc7b-e8fb-418e-bab0-9fa20c582f00}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{110,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортОплаченКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{198,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортОплаченРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{90,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортДокумент",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,188abc3e-28f1-4722-8cea-1f4ec3b78f5a}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{91,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаИмпортДокументКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{199,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортДокументРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{238,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаИмпортДоговор",1,0,
{1,0},
{1,0},
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,60cf88d1-cd74-4ecf-8aa6-f3f7d676e71a}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{239,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИмпортДоговорКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{240,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортДоговорРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{8,
{172,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},1,1,1,1,
{3,
{173,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{174,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИмпортСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{175,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{47,0},0},1,
{3,
{176,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТаблицаИмпортСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0}
},1,
{19,
{177,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИмпортСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{178,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{47,1},0},1,
{3,
{179,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИмпортУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{180,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИмпортУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{181,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИмпортУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{47,2},0},0},1,0,1,
{8,
{167,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаТаблицаИмпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{157,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаИмпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницаЭкспорт",
{1,2,
{"ru","Экспорт платежных документов"},
{"uk","Експорт платіжних документів"}
},
{1,2,
{"ru","Страница импорт"},
{"uk","Сторінка імпорт"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,
{4,3,
{0},"",14,5,1,
{
{#base64:Qk32AAAAAAAAAHYAAAAoAAAAEAAAABAAAAABAAQAAAAAAIAAAAAAAAAAAAAAABAA
AAAAAAAAhAAAAIwpAAC9SgAAwMDAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMzMzMzMzMzAAAAAAAzMzMhEREREDMzMy
EREREQMzMzIRFEERAzMzMhEUQREDMzMyERRBEQMzMzIRFEERAzMzMhREREEDMzMy
EUREEQMzMzIRFEERAzMzMhEREREDMzMyIiIiIgMzMzJEREREAzMzMkREREQDMzMy
IiIiIgMz}
},0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаЭкспортШапка",
{1,2,
{"ru","Группа экспорт шапка"},
{"uk","Група експорт шапка"}
},
{1,2,
{"ru","Группа экспорт шапка"},
{"uk","Група експорт шапка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаДатаСчетЭкспорт",
{1,2,
{"ru","Группа дата счет экспорт"},
{"uk","Група дата рахунок експорт"}
},
{1,2,
{"ru","Группа дата счет экспорт"},
{"uk","Група дата рахунок експорт"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Период",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДатаППС",1,0,
{1,2,
{"ru","Период с"},
{"uk","Період з"}
},
{1,0},
{2,
{1},
{0,974d80d9-3caa-406a-b894-a6602ec24d6b}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДатаППСПриИзменении"},1,
{19,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДатаППСКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{204,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДатаППСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДатаПППо",1,0,
{1,2,
{"ru","по"},
{"uk","по"}
},
{1,0},
{2,
{1},
{0,5c75bfbe-71e3-4d28-84e1-0bca3d3b339d}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДатаПППоПриИзменении"},1,
{19,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ДатаПППоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{205,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДатаПППоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{203,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПериодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{202,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДатаСчетЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаПараметрыЭкспорта",
{1,2,
{"ru","Группа параметры экспорта"},
{"uk","Група параметри експорту"}
},
{1,2,
{"ru","Группа параметры экспорта"},
{"uk","Група параметри експорту"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИмяФайлаЭкспорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,335bc614-6975-4c52-a1e9-f7382d9d8feb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,1,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"ИмяФайлаЭкспортНачалоВыбора",ac5a9c5a-5f1d-4fc5-b88c-a187038c16d1,"ИмяФайлаЭкспортОткрытие"},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ИмяФайлаЭкспортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{207,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИмяФайлаЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаТипКодировкаЭкспорт",
{1,2,
{"ru","Группа тип кодировка экспорт"},
{"uk","Група тип кодування експорт"}
},
{1,2,
{"ru","Группа тип кодировка экспорт"},
{"uk","Група тип кодування експорт"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТипФайлаЭкспорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,efa0411d-5354-4820-8d51-1db313ea8c32}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,3,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","TXT"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","Текстовые файлы"},
{"uk","Текстові файли"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","DBF"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","DBF файлы"},
{"uk","DBF файли"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","XML"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","XML файлы"},
{"uk","XML файли"}
}
}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
}
},15,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТипФайлаЭкспортПриИзменении"},1,
{19,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТипФайлаЭкспортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{209,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТипФайлаЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КодировкаФайлаЭкспорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,fc8171f4-93e2-40a8-bb22-7a5a20a6e49e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,2,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","ANSI"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","Windows"},
{"uk","Windows"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","OEM"},9b6abf8b-0173-48e5-b0a0-83b21fcf63c5,00000000-0000-0000-0000-000000000000,
{1,2,
{"ru","DOS"},
{"uk","DOS"}
}
}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
}
},10,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КодировкаФайлаЭкспортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{210,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КодировкаФайлаЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{144,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КодВБанкеЭкпорт",1,0,
{1,0},
{1,0},
{2,
{1},
{0,afb544e5-18aa-454c-9125-b8ac67fd1006}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"КодВБанкеЭкпортПриИзменении"},1,
{19,
{145,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КодВБанкеЭкпортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{211,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КодВБанкеЭкпортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{208,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаТипКодировкаЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{206,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПараметрыЭкспортаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{201,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЭкспортШапкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{19,
{134,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаТаблицаЭкспорт",
{1,2,
{"ru","Группа таблица экспорт"},
{"uk","Група таблиця експорт"}
},
{1,2,
{"ru","Группа таблица экспорт"},
{"uk","Група таблиця експорт"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{17,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0}
},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{48,
{111,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,1,
{0,
{0,
{"B",1},0}
},"тчЭкспорт",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102}
},0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{2,1282f000-23b6-4887-87f4-9e8e79db3d32,"тчЭкспортВыбор",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"тчЭкспортПередНачаломДобавления"},
{0},1,
{19,
{112,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{19,
{113,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"тчЭкспортКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},5,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{137,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"тчЭкспортТаблицаЭкспортПометитьВсе",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{213,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортТаблицаЭкспортПометитьВсеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{136,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"тчЭкспортТаблицаЭкспортСнятьПометкуСоВсех",
{1,0},1,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-11},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{214,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортТаблицаЭкспортСнятьПометкуСоВсехРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{139,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"тчЭкспортУдалить",
{1,0},1,
{111,8d772f97-c0ef-47c0-9cb0-efea28c61341},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{215,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортУдалитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{138,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"тчЭкспортЭкспортПП",
{1,0},1,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",14,8,1,
{
{#base64:Qk32AAAAAAAAAHYAAAAoAAAAEAAAABAAAAABAAQAAAAAAIAAAAAAAAAAAAAAABAA
AAAAAAAAhAAAAIwpAAC9SgAAwMDAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMzMzMzMzMzAAAAAAAzMzMhEREREDMzMy
EREREQMzMzIRFEERAzMzMhEUQREDMzMyERRBEQMzMzIRFEERAzMzMhREREEDMzMy
EUREEQMzMzIRFEERAzMzMhEREREDMzMyIiIiIgMzMzJEREREAzMzMkREREQDMzMy
IiIiIgMz}
},0,""},1,
{"Pattern"},"",2,0,1,
{8,
{216,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортЭкспортППРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{25,
{135,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"тчЭкспортПрочитатьПлатежныеПоручения",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,fc4f29e0-d168-4fe0-8e64-e982fabf2595},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{8,
{217,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортПрочитатьПлатежныеПорученияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},
{"U"},1,0,0,1,0,0,0,3,3,3},1,0,0},10,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{114,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"тчЭкспортНомерСтроки",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{-2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,0,2,2,2,
{1,0},0,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},
{0},1,
{19,
{115,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортНомерСтрокиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{228,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортНомерСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{116,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"тчЭкспортФлаг",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,ea30e707-42c7-4c72-ba7d-0f53e5e84cac}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0},1,
{19,
{117,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортФлагКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{229,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортФлагРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{132,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"тчЭкспортДатаПП",1,0,
{1,2,
{"ru","Дата"},
{"uk","Дата"}
},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,51461c71-11c5-4578-ad0a-0cfb172bc289}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{133,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортДатаППКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{230,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортДатаППРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{130,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"тчЭкспортНомерПП",1,0,
{1,2,
{"ru","Номер"},
{"uk","Номер"}
},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,fc75cea3-056c-41f1-b579-ae4f8c1e4f51}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{131,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортНомерППКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{231,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортНомерППРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{118,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"тчЭкспортКонтрагент",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,7062bb14-4887-4490-aba6-91b4da3883c5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{119,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортКонтрагентКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{232,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортКонтрагентРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{140,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"тчЭкспортСчетКонтрагента",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,63898849-2dfb-45d0-ad1a-0c96c4fa29e4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{141,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортСчетКонтрагентаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{233,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортСчетКонтрагентаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{120,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"тчЭкспортСумма",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,fa4dd2ee-9989-4eaf-8352-b5b0d8f2370e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{121,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортСуммаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{234,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортСуммаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{122,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"тчЭкспортСтавкаНДС",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,c3fd309f-9906-4ea3-9008-dd7f747ee632}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{123,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортСтавкаНДСКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{235,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортСтавкаНДСРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{126,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"тчЭкспортСодержание",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,19ef9c51-7ac8-439d-853e-a46aad039754}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{127,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортСодержаниеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{236,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортСодержаниеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{128,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",0},0}
},2,"тчЭкспортДокумент",1,0,
{1,0},
{1,0},
{3,
{1},
{0,48ed466a-4827-4453-b606-fa90688ce102},
{0,6ff08ef5-2bd7-44b7-a80b-16070dad1154}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{129,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"тчЭкспортДокументКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{237,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортДокументРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{8,
{218,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},1,1,1,1,
{3,
{219,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{220,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"тчЭкспортСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{221,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{111,0},0},1,
{3,
{222,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"тчЭкспортСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{0,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0}
},1,
{19,
{223,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"тчЭкспортСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{224,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{111,1},0},1,
{3,
{225,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"тчЭкспортУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0}
},1,
{19,
{226,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"тчЭкспортУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{8,
{227,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"тчЭкспортУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0},2,
{111,2},0},0},1,0,1,
{8,
{212,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаТаблицаЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{200,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаЭкспортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,0,1,
{8,
{156,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",2,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"// (С) АБИ Украина 2013

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//^<< szewczuk 15.11.2016
	//^ Перенес определение конфигурации в отдельную процедуру
	ОпределитьКонфигурацию();
	//^>> 
	
	
	МетаПуть = РеквизитФормыВЗначение(""Объект"").Метаданные().ПолноеИмя();
	
	Объект.ДатаВыписки 	= ТекущаяДата();
	Объект.ДатаППС 		= ТекущаяДата();
	Объект.ДатаПППо 	= ТекущаяДата();
	
	//^<< szewczuk 09.11.2016
	//^Объект.ВерсияКБ = ""2.0.1"";
	Объект.ВерсияКБ = ""2.1.1"";
	//^>> 
	
	СтатусыСтрокИмпорта = Новый Структура;
	СтатусыСтрокИмпорта.Вставить(""СуществующийПлатеж"", 1);
	СтатусыСтрокИмпорта.Вставить(""ГотовКЗаписи"",2);
	СтатусыСтрокИмпорта.Вставить(""НеобходимоЗаполнитьРеквизиты"", 3);
	СтатусыСтрокИмпорта.Вставить(""СуществующийПлатежНеобходимоОплатить"", 4);
	
	РежимОтладки = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	//^<< szewczuk 09.11.2016
	УстановитьВидимостьНаСервере();
	//^>> 
	
КонецПроцедуры

//^<< szewczuk 11.11.2016
&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	МассивРеквизитовУТ = Новый Массив;
	МассивРеквизитовУТ.Добавить(Элементы.ТаблицаИмпортТипДокумента);
	МассивРеквизитовУТ.Добавить(Элементы.ТаблицаИмпортСтатьяДоходовИлиРасходов);
	МассивРеквизитовУТ.Добавить(Элементы.ТаблицаИмпортПодразделение);
	
	МассивРеквизитовБУ =  Новый Массив;
	
	МассивРеквизитовБУ.Добавить(Элементы.ТаблицаИмпортДоговор);
	
	Для каждого ТекРеквизит Из МассивРеквизитовУТ Цикл
		ТекРеквизит.Видимость = Объект.Конфигурация = ""УТ"";
	КонецЦикла;
	
	Для каждого ТекРеквизит Из МассивРеквизитовБУ Цикл
		ТекРеквизит.Видимость = Объект.Конфигурация = ""БУ"";
	КонецЦикла;
	
КонецПроцедуры
//^>> 

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	#Если ВебКлиент Тогда
	УстановитьРасширениеРаботыСФайлами();
	ПодключитьРасширениеРаботыСФайлами();
	#КонецЕсли
	
	//^<< szewczuk 31.10.2016
	//^Объект.НастройкаПервыйЗапуск = Ложь;
	//^>> 
	
	// 2. Проверяем на первый запуск
	Если Объект.НастройкаПервыйЗапуск = Ложь Тогда
		// первый запуск - инициализация параметров настройки
		ПервыйЗапускОбработки();
		
		ПараметрыФормы = Новый Структура(""Ключ"", Объект);
		
		//^<< szewczuk 09.11.2016
		//^Настройки = ОткрытьФормуМодально(МетаПуть + "".Форма.ФормаНастроек"", ПараметрыФормы, ЭтаФорма);
		Настройки = Неопределено;
		ОткрытьФорму(МетаПуть + "".Форма.ФормаНастроек"", ПараметрыФормы, ЭтаФорма,,,, Новый ОписаниеОповещения(""ОткрытьНастройкиПервыйЗапускЗавершение"", ЭтаФорма, Новый Структура(""ПараметрыФормы"", ПараметрыФормы)));
		//^>> 
				
		Объект.НастройкаПервыйЗапуск = Истина;
	Иначе
    	//не первый запуск, восстановить все значения параметров настройки
		ВосстановитьЗначениеНастроек();
	КонецЕсли;	
	
	// 3. читаем ini файлы
	//^<< szewczuk 09.11.2016
	//^Пока НЕ ПрочитатьИниФайлы(Элементы) Цикл
	//^	Предупреждение(НСтр(""ru='Не правильно указан каталог продукта. Укажите правильный каталог в настройках!';uk='Не правильно зазначений каталог продукту. Вкажіть правильний каталог у настроюваннях!'""));
	//^	ПараметрыФормы = Новый Структура(""Ключ"", Объект);
	//^	
	//^	Настройки = ОткрытьФормуМодально(МетаПуть + "".Форма.ФормаНастроек"", ПараметрыФормы, ЭтаФорма);
	//^	Если Настройки <> Неопределено Тогда
	//^		ВосстановитьЗначениеНастроек(Настройки);
	//^	Иначе
	//^		// пользователь не захотел сделать настройки, выйдем вообще из обработки
	//^		Предупреждение(НСтр(""ru='Не правильно указан каталог продукта. Обработка будет закрыта!';uk='Не правильно зазначений каталог продукту. Обробка буде закрита!'""));
	//^		Отказ = Истина;
	//^		Прервать;
	//^	КонецЕсли; 
	//^КонецЦикла;
	//^ПриИзмененииБанковскогоСчета();
	//^	// При установленных параметрах делаем автоимпорт и/или автозаполнение таблицы экспорта
	//^АвтоИмпортЭкспорт();

	Если НЕ ПрочитатьИниФайлы(Элементы) Тогда
		
		ПараметрыФормы = Новый Структура(""Ключ"", Объект);
		Настройки = Неопределено;
		ОткрытьФорму(МетаПуть + "".Форма.ФормаНастроек"", ПараметрыФормы, ЭтаФорма,,,, Новый ОписаниеОповещения(""ОткрытьНастройкиЗавершение"", ЭтаФорма, Новый Структура(""ПараметрыФормы"", ПараметрыФормы)));
		
		ТекстПредупреждения = НСтр(""ru='Не правильно указан каталог продукта. Укажите правильный каталог в настройках!';uk='Не правильно зазначений каталог продукту. Вкажіть правильний каталог у настроюваннях!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,); 
	Иначе 
		ПриИзмененииБанковскогоСчета();
		// При установленных параметрах делаем автоимпорт и/или автозаполнение таблицы экспорта
		АвтоИмпортЭкспорт();
	КонецЕсли;
	//^>> 	
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ВосстановитьЗначениеНастроек(НастройкиИзФормы = Неопределено)
	
	Если НастройкиИзФормы <> Неопределено Тогда 
		Объект.НастройкаИмяКаталогаКБ 						= НастройкиИзФормы.НастройкаИмяКаталогаКБ;
		
		Объект.НастройкаОрганизацияПоУмолчанию 				= НастройкиИзФормы.НастройкаОрганизацияПоУмолчанию;
		//^<< szewczuk 14.11.2016
		//^Объект.НастройкаБанковскийСчетПоУмолчанию 			= НастройкиИзФормы.НастройкаБанковскийСчетПоУмолчанию;
		ВосстановитьЗначениеНастройкиБанковскийСчет(Объект.НастройкаБанковскийСчетПоУмолчанию,НастройкиИзФормы.НастройкаБанковскийСчетПоУмолчанию);
		//^>> 
		
		
		Объект.НастройкаАвтоСозданиеКонтрагента 			= НастройкиИзФормы.НастройкаАвтоСозданиеКонтрагента;
		Объект.НастройкаРодительНовыхКонтрагентовПлатимМы 	= НастройкиИзФормы.НастройкаРодительНовыхКонтрагентовПлатимМы;
		Объект.НастройкаРодительНовыхКонтрагентовПлатятНам 	= НастройкиИзФормы.НастройкаРодительНовыхКонтрагентовПлатятНам;
		
		Объект.НастройкаПытатьсяПроводитьСозданныеДокументы = НастройкиИзФормы.НастройкаПытатьсяПроводитьСозданныеДокументы;
		//^<< szewczuk 11.11.2016
		//^Объект.НастройкаОткрыватьСозданныеДокументы 		= НастройкиИзФормы.НастройкаОткрыватьСозданныеДокументы;
		//^Объект.НастройкаОткрыватьТолькоДокументыСОшибками= НастройкиИзФормы.НастройкаОткрыватьТолькоДокументыСОшибками;
		//^>> 
		
		Объект.НастройкаАвтоИмпортВыписок 					= НастройкиИзФормы.НастройкаАвтоИмпортВыписок;
		Объект.НастройкаИмпортТолькоВходящихПлатежей 		= НастройкиИзФормы.НастройкаИмпортТолькоВходящихПлатежей;
		Объект.НастройкаКоличествоДнейДляОплатыБанка 		= НастройкиИзФормы.НастройкаКоличествоДнейДляОплатыБанка;
		
		Объект.НастройкаАвтоЗаполнениеТаблицыЭкспорта 		= НастройкиИзФормы.НастройкаАвтоЗаполнениеТаблицыЭкспорта;
		Объект.НастройкаПорядокСортировки 					= НастройкиИзФормы.НастройкаПорядокСортировки;
		Объект.НастройкаИспользоватьСортировку 				= НастройкиИзФормы.НастройкаИспользоватьСортировку;
		
		Объект.НастройкаСтатьяДДСВходящие 					= НастройкиИзФормы.НастройкаСтатьяДДСВходящие;
		Объект.НастройкаСтатьяДДСИсходящие 					= НастройкиИзФормы.НастройкаСтатьяДДСИсходящие;
		Объект.НастройкаВидОперацииВходящие 				= НастройкиИзФормы.НастройкаВидОперацииВходящие;
		Объект.НастройкаВидОперацииИсходящие 				= НастройкиИзФормы.НастройкаВидОперацииИсходящие;
		Объект.НастройкаСтатьяДоходов 						= НастройкиИзФормы.НастройкаСтатьяДоходов;
		Объект.НастройкаСтатьяРасходов 						= НастройкиИзФормы.НастройкаСтатьяРасходов;
		Объект.НастройкаПодразделениеВходящие 				= НастройкиИзФормы.НастройкаПодразделениеВходящие;
		Объект.НастройкаПодразделениеИсходящие 				= НастройкиИзФормы.НастройкаПодразделениеИсходящие;
		
		Объект.НастройкаСтавкаНДС 							= НастройкиИзФормы.НастройкаСтавкаНДС;
		
		Объект.НастройкаФормироватьКраткоеНаименованиеКонтрагента 	= НастройкиИзФормы.НастройкаФормироватьКраткоеНаименованиеКонтрагента;
		Объект.НастройкаФормироватьКраткоеНаименованиеОрганизации 	= НастройкиИзФормы.НастройкаФормироватьКраткоеНаименованиеОрганизации;
		//^<< szewczuk 03.11.2016
		Объект.НастройкаСчетУчетаДС		=	НастройкиИзФормы.НастройкаСчетУчетаДС;
		Объект.НастройкаВхСчетРасчетов	=	НастройкиИзФормы.НастройкаВхСчетРасчетов;
		Объект.НастройкаИсхСчетРасчетов	=	НастройкиИзФормы.НастройкаИсхСчетРасчетов;
		Объект.НастройкаВхСчетАвансов	=	НастройкиИзФормы.НастройкаВхСчетАвансов;
		Объект.НастройкаИсхСчетАвансов	=	НастройкиИзФормы.НастройкаИсхСчетАвансов;
		//^>>
		// ...
		
	КонецЕсли;	
	
	Объект.Организация 		= Объект.НастройкаОрганизацияПоУмолчанию;
	//^<< szewczuk 14.11.2016
	//^Объект.БанковскийСчет 	= Объект.НастройкаБанковскийСчетПоУмолчанию;
	ВосстановитьЗначениеНастройкиБанковскийСчет(Объект.БанковскийСчет,Объект.НастройкаБанковскийСчетПоУмолчанию);
	//^>> 

	// ...
	
	Настройки = ХранилищеСистемныхНастроек.Загрузить(""Обработка.КлиентБанк82/НастройкаФорматыОбмена"", ""КлиентБанк82Общие"");
		
	Если Настройки <> Неопределено Тогда
		ТаблицаНастроекФорматыОбмена = Настройки.Получить(""НастройкаФорматыОбмена"");
		Объект.НастройкаФорматыОбмена.Загрузить(ТаблицаНастроекФорматыОбмена);
	КонецЕсли;	
	
	//ПриИзмененииБанковскогоСчета();
	
КонецПроцедуры

//^<< szewczuk 15.11.2016
&НаСервере
Процедура ВосстановитьЗначениеНастройкиБанковскийСчет(БанковскийСчет,НастройкаБанковскийСчет)
	
	Если  НастройкаБанковскийСчет <> Неопределено Тогда
		БанковскийСчет 	= НастройкаБанковскийСчет;
	Иначе 
		Если Объект.Конфигурация = ""УТ"" Тогда
			БанковскийСчет 	= Справочники.БанковскиеСчетаОрганизаций.ПустаяСсылка();
		ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
			БанковскийСчет	= Справочники.БанковскиеСчета.ПустаяСсылка();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры
//^>> 

&НаКлиенте
Функция ПолучитьКаталогИБ()
	ИмяКаталогаКБ = ПолучитьИспользуемоеИмяФайлаОбработки();
	
	ПроверяемФайл = Новый Файл(ИмяКаталогаКБ);
	Если ПроверяемФайл.Существует() Тогда
		Возврат ПроверяемФайл.Путь;
	Иначе
		Возврат """";
	КонецЕсли;	
КонецФункции	

&НаСервере
Функция ПолучитьИспользуемоеИмяФайлаОбработки()
	Возврат РеквизитФормыВЗначение(""Объект"").ИспользуемоеИмяФайла;
КонецФункции	

&НаКлиенте
// Проверяет существование файла, выдает предупреждение, если файла нет
// Предупреждение может не выдаваться, если НеВыдаватьПредупреждения = Истина; 
// 
//
// Параметры:
//
//  ИмяПроверяемогоФайла  				– Строка  – имя файла, который проверяем
//  ТекстДополнительногоПредупреждения  – Строка –  текст, который будет присоединен к
//											предупреждению
//  НеВыдаватьПредупреждения 			– Булево - при Истина предупреждение не выдается
//  
//
// Возвращаемое значение:
//
//   Булево    – Истина - существует, Ложь - нет
// 
Функция СуществуетФайл(ИмяПроверяемогоФайла, ТекстДополнительногоПредупреждения = """", НеВыдаватьПредупреждения = Ложь) Экспорт
	ПроверяемФайл = Новый Файл(ИмяПроверяемогоФайла);
	Если ПроверяемФайл.Существует() Тогда
		Возврат Истина;
	Иначе
		
		Если Не НеВыдаватьПредупреждения Тогда
		
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='Файла с именем %1 не существует!';uk='Файлу з ім’ям %1 не існує!'""), ИмяПроверяемогоФайла);
			
			Если НЕ ПустаяСтрока(ТекстДополнительногоПредупреждения) Тогда
				ТекстПредупреждения = ТекстПредупреждения + "" "" + ТекстДополнительногоПредупреждения;
			КонецЕсли; 
			
			//^<< szewczuk 02.11.2016
			//^Предупреждение(ТекстПредупреждения);
			ПоказатьПредупреждение(,ТекстПредупреждения,,);
			//^>> 
			
		КонецЕсли;
		
		Возврат Ложь;
	КонецЕсли; 
КонецФункции // СуществуетФайл()

&НаКлиенте
// Читает тчИспользуемыеФорматыОбмена из файла ClientBank.ini
// также формирует список значений используемых форматов для выбора на основной форме
//
// Параметры: нет
//
// Возвращаемое значение:
//
//   СписокЗначений – список значений используемых форматов для выбора на основной форме
//
//
Функция ПрочитатьИспользуемыеФорматыОбмена() Экспорт

	ФайлКБ = Новый ТекстовыйДокумент();
	Объект.тчИспользуемыеФорматыОбмена.Очистить();
	СписокФорматов = Новый СписокЗначений; // СписокВыбора для ФорматОбмена

	сооФорматИмяФайлаОбработкиФормата = Новый СписокЗначений;
	
	ИмяКаталогаКБ = Объект.НастройкаИмяКаталогаКБ;
	ИмяФайлаКБИни = ИмяКаталогаКБ + ""ClientBank.ini"";
	
	Если СуществуетФайл(ИмяФайлаКБИни,,Истина) Тогда

		ФайлКБ.Прочитать(ИмяФайлаКБИни);
		
		Для н = 1 По ФайлКБ.КоличествоСтрок() Цикл
			
			СтрокаИзФайла = ФайлКБ.ПолучитьСтроку(н);
			Если СокрЛП(СтрокаИзФайла) = """" Тогда
				Продолжить;
			КонецЕсли;
			
			Поз = Найти(СтрокаИзФайла,"";"");
			ИмяФормата = Сред(СтрокаИзФайла, 1, Поз - 1);
			
			ИмяФайлаОбработки = Сред(СтрокаИзФайла,Поз + 1);
			ПолноеИмяФайлаОбработки = ИмяКаталогаКБ + ИмяФайлаОбработки;
			
			сооФорматИмяФайлаОбработкиФормата.Добавить(ИмяФормата, ПолноеИмяФайлаОбработки);
			СписокФорматов.Добавить(ИмяФормата, ИмяФормата);
			
			СтрокаИспользуемыеФорматыОбмена = Объект.тчИспользуемыеФорматыОбмена.Добавить();
			
			СтрокаИспользуемыеФорматыОбмена.ИмяФормата = ИмяФормата;
			СтрокаИспользуемыеФорматыОбмена.ИмяФайла = ИмяФайлаОбработки;
			СтрокаИспользуемыеФорматыОбмена.СуществуетФайл = СуществуетФайл(ПолноеИмяФайлаОбработки,,Истина);
			
		КонецЦикла;
	
	КонецЕсли;
	
	ФорматыОбмена = Объект.НастройкаФорматыОбмена;
	Если ФорматыОбмена <> Неопределено И ТипЗнч(ФорматыОбмена) = Тип(""ДанныеФормыКоллекция"") Тогда
		Для Каждого ТекФорматОбмена Из ФорматыОбмена Цикл
			ИмяФормата = ТекФорматОбмена.ИмяФормата; 
			ИмяФайлаОбработки = ТекФорматОбмена.ИмяФайлаОбработкиФормата;
			ПолноеИмяФайлаОбработки = ИмяКаталогаКБ + ИмяФайлаОбработки;
			
			сооФорматИмяФайлаОбработкиФормата.Добавить(ИмяФормата, ИмяКаталогаКБ + ""\"" + ИмяФайлаОбработки);	
			
			Если СписокФорматов.НайтиПоЗначению(ИмяФормата) = Неопределено Тогда
				СписокФорматов.Добавить(ИмяФормата, ИмяФормата);
			КонецЕсли;	
			
			сооМФОФорматСтрока = сооМФОФормат.НайтиПоЗначению(СокрЛП(ТекФорматОбмена.МФО));
			Если сооМФОФорматСтрока = Неопределено Тогда
				сооМФОФормат.Добавить(СокрЛП(ТекФорматОбмена.МФО), ИмяФормата);	
			Иначе
				// Переопределение формата с тем же МФО
				сооМФОФорматСтрока.Представление = ИмяФормата;
			КонецЕсли;	
			
			СтрокаИспользуемыеФорматыОбмена = Объект.тчИспользуемыеФорматыОбмена.Добавить();
			
			СтрокаИспользуемыеФорматыОбмена.ИмяФормата = ИмяФормата;
			СтрокаИспользуемыеФорматыОбмена.ИмяФайла = ИмяФайлаОбработки;
			СтрокаИспользуемыеФорматыОбмена.СуществуетФайл = СуществуетФайл(ПолноеИмяФайлаОбработки,,Истина);
			
		КонецЦикла;	
	КонецЕсли;
	
	СписокФорматов.СортироватьПоЗначению();
	
	Возврат СписокФорматов;
	
КонецФункции // ПрочитатьИспользуемыеФорматыОбмена()

&НаКлиенте
// Читает файлы AllBanks.ini, AllFormats.ini, ClientBank.ini, Abbrs.ini
// формируется соответствие сооМФОФормат МФО -> Формат
// формируется соответствие сооФорматИмяФайлаОбработкиФормата Формат -> ПолноеИмяФайлаОбработкиФормата
// формируется список значений СписокФорматов для выбора в поле Формат
// доступные для выбора форматы из файла ClientBank.ini
//
// Формируется список значений СокращенияТиповОрганизаций, содержащий возможные сокращения 
//
// В файле AllBanks.ini находится список МФО1, МФО2, ... МФОN;НазваниеФормата
// В файле ClientBank.ini находится список НазваниеФормата;ИмяФайлаОбработкиФормата
// В файле Abbrs.ini находится список сокращений типов организаций
//
// Параметры: нет
//
//
Функция ПрочитатьИниФайлы(ЭлементыФормы) Экспорт
	
	Файл = Новый ТекстовыйДокумент();
	
	ИмяКаталогаКБ = Объект.НастройкаИмяКаталогаКБ;
	
	ИмяФайлаВБИни = ИмяКаталогаКБ + ""AllBanks.ini"";
	
	Если НЕ СуществуетФайл(ИмяФайлаВБИни) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Файл.Прочитать(ИмяФайлаВБИни);
	
	//сооМФОФормат = Новый Соответствие;
	сооМФОФормат = Новый СписокЗначений;
	
	Для н = 1 По Файл.КоличествоСтрок() Цикл
		СтрокаИзФайла = Файл.ПолучитьСтроку(н);
		Если СокрЛП(СтрокаИзФайла) = """" Тогда
			Продолжить;
		КонецЕсли;
		
		Поз = Найти(СтрокаИзФайла,"";"");
		ИмяФормата = Сред(СтрокаИзФайла,Поз + 1);
		СтрокаИзФайла = Сред(СтрокаИзФайла,1, Поз - 1);
		
		Поз2 = Найти(СтрокаИзФайла,"","");
		Пока Поз2 Цикл
			КодМФО = Сред(СтрокаИзФайла,1, Поз2 - 1);
			сооМФОФормат.Добавить(КодМФО, ИмяФормата);
			СтрокаИзФайла = Сред(СтрокаИзФайла,Поз2 + 1);
			Поз2 = Найти(СтрокаИзФайла,"","");
		КонецЦикла;	
		
		//Последний код МФО из СтрокаИзФайла
		сооМФОФормат.Добавить(СтрокаИзФайла, ИмяФормата);
	КонецЦикла;
	
	
	ФайлВФ = Новый ТекстовыйДокумент();
	
	ИмяФайлаВФИни = ИмяКаталогаКБ + ""AllFormats.ini"";
	Если НЕ СуществуетФайл(ИмяФайлаВФИни) Тогда
		Возврат Ложь;
	КонецЕсли;        	
	
	ФайлВФ.Прочитать(ИмяФайлаВФИни);
	
	Объект.тчВсеФорматыОбмена.Очистить();
	//сзВсеФорматыОбмена.Очистить();
	
	Для н = 1 По ФайлВФ.КоличествоСтрок() Цикл
		СтрокаИзФайла = ФайлВФ.ПолучитьСтроку(н);
		Если СокрЛП(СтрокаИзФайла) = """" Тогда
			Продолжить;
		КонецЕсли;
		Поз = Найти(СтрокаИзФайла,"";"");
		ИмяФормата = Сред(СтрокаИзФайла, 1, Поз - 1);
		
		ИмяФайлаОбработки = Сред(СтрокаИзФайла,Поз + 1);
		ПолноеИмяФайлаОбработки = ИмяКаталогаКБ + ИмяФайлаОбработки;
		
		СтрокаВсеФорматыОбмена = Объект.тчВсеФорматыОбмена.Добавить();
		
		СтрокаВсеФорматыОбмена.Установлен = Ложь;
		
		СтрокаВсеФорматыОбмена.ИмяФормата = ИмяФормата;
		СтрокаВсеФорматыОбмена.ИмяФайла = ИмяФайлаОбработки;
		СтрокаВсеФорматыОбмена.СуществуетФайл = СуществуетФайл(ПолноеИмяФайлаОбработки,,Истина);
		
	//	сзВсеФорматыОбмена.Добавить(ИмяФормата, ИмяФормата);
		
	КонецЦикла;
	
	СписокФорматов = ПрочитатьИспользуемыеФорматыОбмена();
	ЭлементыФормы.ФорматОбмена.СписокВыбора.ЗагрузитьЗначения(СписокФорматов.ВыгрузитьЗначения());
	
	ФайлАБ = Новый ТекстовыйДокумент();
	
	ИмяФайлаАБИни = ИмяКаталогаКБ + ""Abbrs.ini"";
	Если НЕ СуществуетФайл(ИмяФайлаАБИни) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ФайлАБ.Прочитать(ИмяФайлаАБИни);
	
	СокращенияТиповОрганизаций = Новый СписокЗначений; 
	Для н = 1 По ФайлАБ.КоличествоСтрок() Цикл
		СтрокаИзФайла = СокрЛП(ФайлАБ.ПолучитьСтроку(н));
		Если СтрокаИзФайла = """" Тогда
			Продолжить;
		КонецЕсли;
		СокращенияТиповОрганизаций.Добавить(СтрокаИзФайла, СтрокаИзФайла);
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // ПрочитатьИниФайлы()

&НаКлиенте
// Процедура запускается при первом запуске обработки
// Автоматически отображает форму ""ФормаНастроек"". 
//
Процедура ПервыйЗапускОбработки() Экспорт
	
	//^<< szewczuk 02.11.2016
	//Предупреждение(НСтр(""ru='Необходимо настроить параметры обработки """"Обмен данными с системами Клиент-Банк""""';uk='Необхідно настроїти параметри обробки """"Обмін даними із системами Клієнт-Банк""""'""),
	//^,НСтр(""ru='Первый запуск обработки """"Обмен данными с системами Клиент-Банк""""';uk='Перший запуск обробки """"Обмін даними із системами Клієнт-Банк""""'""));
	ТекстПредупреждения 	=	НСтр(""ru='Необходимо настроить параметры обработки """"Обмен данными с системами Клиент-Банк""""';uk='Необхідно настроїти параметри обробки """"Обмін даними із системами Клієнт-Банк""""'"");
	ЗаголовокПредупреждения	=	НСтр(""ru='Первый запуск обработки """"Обмен данными с системами Клиент-Банк""""';uk='Перший запуск обробки """"Обмін даними із системами Клієнт-Банк""""'"");
	ПоказатьПредупреждение(,ТекстПредупреждения,,ЗаголовокПредупреждения);
	//^>> 
	
	//^<< szewczuk 15.11.2016
	ОпределитьКонфигурацию();
	//^>> 
		
	Объект.НастройкаИмяКаталогаКБ = ПолучитьКаталогИБ();
	
	//^<< szewczuk 14.11.2016
	//^Объект.НастройкаПорядокСортировки.Добавить(""Контрагент"", ""По контрагентам"");
	//^Объект.НастройкаПорядокСортировки.Добавить(""Сумма"", ""По сумме платежей"");
	//^Объект.НастройкаПорядокСортировки.Добавить(""ПриходРасход,Сумма"", ""По сумме платежей прихода, сумме платежей расхода"");
	//^Объект.НастройкаПорядокСортировки.Добавить(""Статус"", ""По статусу строки выписки"");
	Объект.НастройкаПорядокСортировки.Добавить(""Контрагент"", 			НСтр(""ru='По контрагентам';uk='По контрагентах'""));
	Объект.НастройкаПорядокСортировки.Добавить(""Сумма"", 				НСтр(""ru='По сумме платежей';uk='По сумі платежів'""));
	Объект.НастройкаПорядокСортировки.Добавить(""ПриходРасход,Сумма"", 	НСтр(""ru='По сумме платежей прихода, сумме платежей расхода';uk='По сумі платежів приходу, сумме платежів розходу'""));
	Объект.НастройкаПорядокСортировки.Добавить(""Статус"", 				НСтр(""ru='По статусу строки выписки';uk='По статусу строки выписки'""));
	//^>> 
	
	
	Объект.НастройкаАвтоСозданиеКонтрагента = Истина;
	Объект.НастройкаИспользоватьСортировку 	= Истина;
	
	Объект.НастройкаФормироватьКраткоеНаименованиеОрганизации = Истина;
	
	Объект.НастройкаСтавкаНДС = ПредопределенноеЗначение(""Перечисление.СтавкиНДС.НДС20"");
	
	//^<< szewczuk 14.11.2016
	Если Объект.Конфигурация = ""БУ"" Тогда
		Объект.НастройкаВидОперацииВходящие  =	ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя"");
		Объект.НастройкаВидОперацииИсходящие =  ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику"");
	КонецЕсли; 
	//^>> 
	
КонецПроцедуры // ПервыйЗапускОбработки()	

&НаСервере
Функция ПолучитьМФО()
	
	//^<< szewczuk 04.11.2016
	Если Объект.БанковскийСчет <> Неопределено Тогда
		Возврат СокрЛП(Объект.БанковскийСчет.Банк.Код);
	КонецЕсли; 
	
	//^>> 
	
КонецФункции

&НаСервере
// Создаёт новый элемент справочника Контрагенты
//
// Параметры:
//
//  Реквизиты  – Структура
// Возвращает ссылку на созданный элемент справочника
//
Функция СоздатьСпрКонтрагент(Реквизиты) Экспорт
	
	спрКонтрагент = Справочники.Контрагенты;
	
	спрКонтрагентОб = спрКонтрагент.СоздатьЭлемент();
	
	спрКонтрагентОб.Наименование		= ПреобразоватьНаименованиеКонтрагента(Реквизиты.Наименование);
	
	спрКонтрагентОб.КодПоЕДРПОУ			= Реквизиты.ОКПО;
	спрКонтрагентОб.НаименованиеПолное	= Реквизиты.Наименование;
	
	//^<< szewczuk 03.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 
		спрКонтрагентОб.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		спрКонтрагентОб.Партнер = Справочники.Партнеры.НеизвестныйПартнер;
	//^<< szewczuk 03.11.2016	
	ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда
		спрКонтрагентОб.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	КонецЕсли; 
	//^>> 
		
	спрКонтрагентОб.Записать();
	
	ДобавитьСчетКонтрагента(спрКонтрагентОб.Ссылка, Реквизиты.РСчет, Реквизиты.МФО);
	спрКонтрагентОб.Записать();	
	
	Возврат спрКонтрагентОб.Ссылка;
	
КонецФункции // СоздатьСпрКонтрагент()	

&НаСервере
// Добавляет новый банковский счет контрагенту
//
// Параметры:
//
//  НомерСчета  – Строка
//  Контрагент  – СправочникСсылка.Контрагенты
// Возвращает ссылку на созданный элемент справочника - СправочникСсылка.БанковскиеСчета
//
Функция ДобавитьСчетКонтрагента(Контрагент, НомерСчета, МФО) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(НомерСчета) Тогда
		Возврат Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();
	КонецЕсли;	
	
	//^<< szewczuk 03.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 	
		спрБанкСчет = Справочники.БанковскиеСчетаКонтрагентов.СоздатьЭлемент();	
	//^<< szewczuk 03.11.2016
	ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
		 спрБанкСчет = Справочники.БанковскиеСчета.СоздатьЭлемент();
	КонецЕсли; 
	//^>> 
	
	спрБанкСчет.Владелец 		= Контрагент;
	спрБанкСчет.Наименование 	= ""По счету №""+ СокрЛП(НомерСчета);
	
	НайтиБанк = НайтиБанк(МФО);
	
	//^<< szewczuk 03.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 	
		БанкНеНайден = НайтиБанк = Справочники.КлассификаторБанков.ПустаяСсылка();	
	//^<< szewczuk 03.11.2016
	ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
		БанкНеНайден = НайтиБанк = Справочники.Банки.ПустаяСсылка();	
	КонецЕсли; 
	//^>> 
	 
	//^<< szewczuk 03.11.2016
	//^Если НайтиБанк = Справочники.КлассификаторБанков.ПустаяСсылка() Тогда
	Если БанкНеНайден Тогда
	//^>> 
		
		спрБанкСчет.РучноеИзменениеРеквизитовБанка = Истина;
		//спрБанкСчет.НаименованиеБанка              = РССчет[0].Значение;
		спрБанкСчет.КодБанка                       = МФО;
		
	Иначе	
		
		спрБанкСчет.Банк = НайтиБанк.Ссылка;
		
	КонецЕсли;
	
	спрБанкСчет.НомерСчета 		= НомерСчета;
	спрБанкСчет.ВидСчета		= ""Текущий"";
	спрБанкСчет.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить();
	
	спрБанкСчет.Записать();
	
	Возврат спрБанкСчет.Ссылка;
	
КонецФункции // ДобавитьСчетКонтрагента()	

&НаСервере
// По номеру счета для контрагента ищем банковский счет
//
// Параметры:
//
//  НомерСчета  – Строка
//  Контрагент  – СправочникСсылка.Контрагенты
//
// Возвращает ссылку на найденный элемент - СправочникСсылка.БанковскиеСчета
Функция НайтиСчетКонтрагента(НомерСчета, Контрагент) Экспорт
	
	Если НЕ ЗначениеЗаполнено(НомерСчета) Или НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();
	КонецЕсли;	
	
	//^<< szewczuk 03.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 	
		Запрос = Новый Запрос;
		ТекстЗапроса = ""ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Владелец
		|	И БанковскиеСчета.НомерСчета = &НомерСчета"";	
	//^<< szewczuk 03.11.2016
	ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
		Запрос = Новый Запрос;
		ТекстЗапроса = ""ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Владелец
		|	И БанковскиеСчета.НомерСчета = &НомерСчета"";	
	КонецЕсли; 
	//^>> 
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр(""НомерСчета"",	НомерСчета);
	Запрос.УстановитьПараметр(""Владелец"",	Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Количество() = 0 Тогда
		//^<< szewczuk 03.11.2016
		Если Объект.Конфигурация = ""УТ"" Тогда
		//^>> 	
			Возврат Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();	
		//^<< szewczuk 03.11.2016
		ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
			Возврат Справочники.БанковскиеСчета.ПустаяСсылка();	
		КонецЕсли; 
		//^>> 
	Иначе
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;	
	
КонецФункции // НайтиСчетКонтрагента()	

Функция НайтиБанк(МФО)
	
	//^<< szewczuk 03.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 	
		НайденныйБанк = Справочники.КлассификаторБанков.ПустаяСсылка();
		Если НЕ ПустаяСтрока(МФО) Тогда
			НайденныйБанк = Справочники.КлассификаторБанков.НайтиПоКоду(МФО);
		КонецЕсли;
	//^<< szewczuk 03.11.2016
	ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда

		НайденныйБанк = Справочники.Банки.ПустаяСсылка();
		
		//^ Перенес из КлиентБанк.epf
		Если ПустаяСтрока(МФО) Тогда
			Сообщить(Нстр(""ru = 'Ошибка создания банка: Не указан МФО!'; uk = 'Помилка створення банку: Не зазначений МФО!'""));
			Возврат НайденныйБанк;
		КонецЕсли;	
	
		МФО = СокрЛП(МФО);
	
		// ищем по МФО
		НайтиБанк = Справочники.Банки.НайтиПоКоду(МФО, Истина);
		
		Если ЗначениеЗаполнено(НайтиБанк) Тогда
			Возврат НайтиБанк;
		КонецЕсли;	
		
		КлассификаторБанков = Справочники.Банки.ПолучитьМакет(""КлассификаторБанков"");
		
		// Области классификатора
		ОбластьКодМФО         	= КлассификаторБанков.Области.КодМФО;
		ОбластьНаименование 	= КлассификаторБанков.Области.Наименование;
		ОбластьГород  			= КлассификаторБанков.Области.Город;
		ОбластьАдрес  			= КлассификаторБанков.Области.Адрес;
		ОбластьЕДРПОУ  			= КлассификаторБанков.Области.ЕДРПОУ;
		ОбластьТелефоны			= КлассификаторБанков.Области.Телефоны;
		ОбластьКоррСчет			= КлассификаторБанков.Области.КоррСчет;
		
		ИскомаяСтрока = КлассификаторБанков.НайтиТекст(МФО,,ОбластьКодМФО,,Истина);
		
		Если ИскомаяСтрока = Неопределено Тогда
			Сообщить(Нстр(""ru = 'Ошибка создания банка: В классификаторе банков нет элемента с МФО = '; uk = 'Помилка створення банку: У класифікаторі банків немає елемента із МФО = '"") + МФО);
			//^<< szewczuk 03.11.2016
			//^Возврат Неопределено;
			Возврат Справочники.Банки.ПустаяСсылка();
			//^>> 
		Иначе	
			НомерСтроки = ИскомаяСтрока.Верх;
		КонецЕсли;	
		
		// для найденной строки из классификатора определим все реквизиты банка
		КодМФО         	= КлассификаторБанков.Область(НомерСтроки, ОбластьКодМФО.Лево, 			НомерСтроки, ОбластьКодМФО.Право).Текст;
		Наименование 	= КлассификаторБанков.Область(НомерСтроки, ОбластьНаименование.Лево, 	НомерСтроки, ОбластьНаименование.Право).Текст;
		Город  			= КлассификаторБанков.Область(НомерСтроки, ОбластьГород.Лево, 			НомерСтроки, ОбластьГород.Право).Текст;
		Адрес  			= КлассификаторБанков.Область(НомерСтроки, ОбластьАдрес.Лево, 			НомерСтроки, ОбластьАдрес.Право).Текст;
		ЕДРПОУ  		= КлассификаторБанков.Область(НомерСтроки, ОбластьЕДРПОУ.Лево, 			НомерСтроки, ОбластьЕДРПОУ.Право).Текст;
		Телефоны		= КлассификаторБанков.Область(НомерСтроки, ОбластьТелефоны.Лево, 		НомерСтроки, ОбластьТелефоны.Право).Текст;
		КоррСчет		= КлассификаторБанков.Область(НомерСтроки, ОбластьКоррСчет.Лево, 		НомерСтроки, ОбластьКоррСчет.Право).Текст;
		
		НовыйЭлемент = Справочники.Банки.СоздатьЭлемент();

		НовыйЭлемент.Код 			= КодМФО;
		НовыйЭлемент.Наименование 	= Наименование;
		НовыйЭлемент.Город 			= Город;
		НовыйЭлемент.Адрес 			= Адрес;
		НовыйЭлемент.КодПоЕДРПОУ 	= ЕДРПОУ;
		НовыйЭлемент.Телефоны 		= Телефоны;
		НовыйЭлемент.КоррСчет 		= КоррСчет;

		НовыйЭлемент.Записать();
		
		Сообщить(НСтр(""ru = 'Создан банк с МФО = '; uk = 'Створений банк із МФО = '"") + КодМФО);
		
		//^<< szewczuk 03.11.2016
		//^Возврат НовыйЭлемент.Ссылка;
		НайденныйБанк = НовыйЭлемент.Ссылка;
		//^>> 
	КонецЕсли; 
	//^>> 
	
	Возврат НайденныйБанк;

КонецФункции

//^<< szewczuk 09.11.2016
&НаСервере
Функция клОпределитьВидДоговораСКонтрагентом(ВидОперации=Неопределено)
	
	Если Объект.Конфигурация = ""БУ"" Тогда
		СПоставщиком = Новый СписокЗначений;
		СПоставщиком.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
		СПоставщиком.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
		СПоставщиком.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);

		СПокупателем = Новый СписокЗначений;
		СПокупателем.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
		СПокупателем.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
		СПокупателем.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);

		Прочее = Новый СписокЗначений;
		Прочее.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);

		Если ЗначениеЗаполнено(ВидОперации) тогда

			//Определение вида операции

			ВидДоговораПоВидуОпераций = Новый Соответствие();
			//^<< szewczuk 09.11.2016
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийРКО.ОплатаПоставщику,СПоставщиком);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийРКО.РасчетыПоКредитамИЗаймамСКонтрагентами,Прочее);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийРКО.ВозвратДенежныхСредствПокупателю,СПокупателем);
			//^
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПКО.ОплатаПокупателя,СПокупателем);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПКО.РасчетыПоКредитамИЗаймамСКонтрагентами,Прочее);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПоставщиком,СПоставщиком);
			//^
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ОплатаПоставщику,СПоставщиком);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.РасчетыПоКредитамИЗаймам,Прочее);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПокупателю,СПокупателем);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПрочиеРасчетыСКонтрагентами,Прочее);

			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПокупателя,СПокупателем);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПоставщиком,СПоставщиком);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.РасчетыПоКредитамИЗаймам,Прочее);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ПрочиеРасчетыСКонтрагентами,Прочее);
			//^
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ОплатаПоставщику,СПоставщиком);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.РасчетыПоКредитамИЗаймамСКонтрагентами,Прочее);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ПрочиеРасчетыСКонтрагентами,Прочее);
			//^ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ВозвратДенежныхСредствПокупателю,СПокупателем);
			
			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику,СПоставщиком);
			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймамСКонтрагентами,Прочее);
			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВозвратДенежныхСредствПокупателю,СПокупателем);
			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами,Прочее);

			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя,СПокупателем);
			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратДенежныхСредствПоставщиком,СПоставщиком);
			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.РасчетыПоКредитамИЗаймам,Прочее);
			ВидДоговораПоВидуОпераций.Вставить(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПрочиеРасчетыСКонтрагентами,Прочее);
			//^>> 

			ВидДоговора = ВидДоговораПоВидуОпераций[ВидОперации];

			Если НЕ ВидДоговора = Неопределено Тогда
				Возврат ВидДоговора;
			Иначе
				Возврат Новый СписокЗначений;

			КонецЕсли;

			Иначе

				Возврат Новый СписокЗначений;

			Конецесли;
			
		КонецЕсли;
	
КонецФункции // клОпределитьВидДоговораСКонтрагентом()
//^>>

&НаСервере
// Получает договор контрагента по умолчанию с учетом условий отбора. Возвращается основной договор или единственный или пустая ссылка
//
// Параметры
//  ВладелецДоговора	–	<СправочникСсылка.Контрагенты> 
//							Контрагент, договор которого нужно получить
//  ОрганизацияДоговора	–	<СправочникСсылка.Организации> 
//							Организация, договор которой нужно получить
//  СписокВидовДоговора	–	<Массив> или <СписокЗначений>, состоящий из значений типа <ПеречислениеСсылка.ВидыДоговоровКонтрагентов> 
//							Нужные виды договора
//  СтруктураПараметров	–	<Структура>
//							Структура дополнительных параметров отбора договоров по реквизитам.
//							Элементы структуры СтруктураПараметров:
//							Ключ - имя реквизита договора, Значение - еще одна структура
//							
//							Элементы структуры, которая находится в Значение:
//							Ключ - ""ЗначениеОтбора"", Значение - значение реквизита договора для отбора. Обязательный элемент.
//							Ключ - ""ВидСравненияОтбора"", Значение - <ВидСравнения>. Необязательный элемент, по умолчанию ВидСравнения.Равно
//
// Возвращаемое значение:
//   <СправочникСсылка.ДоговорыКонтрагентов> – найденный счет или пустая ссылка
//
//^<< szewczuk 09.11.2016
Функция НайтиДоговорКонтрагента(ВладелецДоговора, ОрганизацияДоговора, СписокВидовДоговора=неопределено, КодВалюты="""")
	
	//^<< szewczuk 15.11.2016
	Если Объект.Конфигурация = ""БУ"" Тогда
	//^>> 

		НовыйДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

		Запрос = Новый Запрос;
		ТекстЗапроса = 
		""ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
		|	ДоговорыКонтрагентов.Ссылка,
		|	ВЫБОР
		|		КОГДА СправочникВладелец.Ссылка ЕСТЬ НЕ NULL 
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК Приоритет
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК СправочникВладелец
		|		ПО ДоговорыКонтрагентов.Владелец = СправочникВладелец.Ссылка
		|			И ДоговорыКонтрагентов.Ссылка = СправочникВладелец.ОсновнойДоговорКонтрагента
		|ГДЕ
		|	&ТекстФильтра
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет"";
		
		Запрос.УстановитьПараметр(""ВладелецДоговора"", ВладелецДоговора);
		Запрос.УстановитьПараметр(""ОрганизацияДоговора"", ОрганизацияДоговора);
		Запрос.УстановитьПараметр(""СписокВидовДоговора"", СписокВидовДоговора);
		
		Если НЕ ЗначениеЗаполнено(КодВалюты) Тогда
			ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
		Иначе
			ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоКоду(КодВалюты);
			Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
				ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
			КонецЕсли;	
		КонецЕсли;	
		
		Запрос.УстановитьПараметр(""ВалютаВзаиморасчетов"", ВалютаВзаиморасчетов);
		
		ТекстФильтра = ""
		|	ДоговорыКонтрагентов.Владелец = &ВладелецДоговора
		|	И ДоговорыКонтрагентов.Организация = &ОрганизацияДоговора
		|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
		|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов""
		+?(СписокВидовДоговора<>неопределено,""
		|	И ДоговорыКонтрагентов.ВидДоговора В (&СписокВидовДоговора)"","""");
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ""&ТекстФильтра"", ТекстФильтра);
		
		Запрос.Текст = ТекстЗапроса;
		Результат = Запрос.Выполнить();
		
		Если Не Результат.Пустой() Тогда
		
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Возврат Выборка.Ссылка;
		Иначе
			Возврат НСтр(""ru='Не найден';uk='Не знайдений'"")
		КонецЕсли;
		
	//^<< szewczuk 14.11.2016
	КонецЕсли;
	//^>>
	
КонецФункции // ПолучитьДоговорКонтрагента()
//^>> 

//^<< szewczuk 11.11.2016
// Возвращает курс валюты на дату
//
//
// Параметры:
//  Валюта    - Валюта (элемент справочника ""Валюты"")
//  ДатаКурса - Дата, на которую следует получить курс
//
// Возвращаемое значение: 
//  Курс, с учетом кратности
//
&НаСервере
Функция клКурсДляВалюты(Валюта, ДатаКурса) Экспорт

	Структура = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ДатаКурса, Новый Структура(""Валюта"", Валюта));
	Возврат Структура;
	
КонецФункции
//^>> 

&НаСервере
// Функция заменяет определённые символы в переданной строке 
//
// Параметры: 
// 		Стр - Строка - переданная строка для замены 
//
//
// Возвращаемое значение:
//
//   Строка - преобразованное значение
//
// 
Функция ЗаменитьСимволы(Стр) Экспорт
	СтрВозврата = Стр;
	СтрВозврата = СтрЗаменить(СтрВозврата, ""Ї"", ""Є"");
	СтрВозврата = СтрЗаменить(СтрВозврата, ""ї"", ""є"");
	СтрВозврата = СтрЗаменить(СтрВозврата, ""Ў"", ""І"");
	СтрВозврата = СтрЗаменить(СтрВозврата, ""ў"", ""і"");
	СтрВозврата = СтрЗаменить(СтрВозврата, ""•"", ""ї"");
	СтрВозврата = СтрЗаменить(СтрВозврата, ""°"", ""Ї"");
	Возврат СтрВозврата;
КонецФункции

&НаСервере
// Функция заменяет определённые символы в переданной строке 
// в порядке, обратном функции ЗаменитьСимволы
// 
// Параметры: 
// 		Стр - Строка - переданная строка для замены 
//
//
// Возвращаемое значение:
//
//   Строка - преобразованное значение
//
// 
Функция ЗаменитьСимволыНазад(Стр) Экспорт
    Рез = СтрЗаменить(Стр,""Ї"",""Є"");
    Рез = СтрЗаменить(Рез,""ї"",""є"");
    Рез = СтрЗаменить(Рез,""Ў"",""І"");
    Рез = СтрЗаменить(Рез,""ў"",""і"");
    Рез = СтрЗаменить(Рез,""°"",""Ї"");
    Рез = СтрЗаменить(Рез,""•"",""ї"");
    Рез = СтрЗаменить(Рез, Символы.ПС, "" "");
	Возврат Рез;
КонецФункции

// Убирает в коротком названии контрагента символы ""
// перебирает в СокращенияТиповОрганизаций все сокращения и если сокращение подошло
// перемещает сокращение в конец краткого названия отделяя запятой
// Сокращение ""подходит"", если 
//
// - строка сокращения начинается с первой позиции в строке 
// - сразу после сокращения идет пробел или ""
// 
// 
// Пример преобразования: ООО ""Добро"" -> Добро, ООО 
//
// Параметры:
//
//  НаименованиеКонтрагента  – Строка - преобразовываемое краткое название контрагента
//
// Возвращаемое значение:
//
//   Строка    – преобразованое краткое название контрагента
// 
Функция ПреобразоватьНаименованиеКонтрагента(НаименованиеКонтрагента)
	//НаименованиеКонтрагента = СокрЛП(НаименованиеКонтрагента);
	Рез = НаименованиеКонтрагента;
	Для Каждого СокращениеЭлемент Из СокращенияТиповОрганизаций Цикл
		Сокращение = СокращениеЭлемент.Значение;
		// проверяем на 1-ую позицию
		Если Найти(Врег(НаименованиеКонтрагента), Врег(Сокращение)) = 1 Тогда
			Поз = СтрДлина(Сокращение) + 1;
			ПроверяемСимвол = Сред(НаименованиеКонтрагента, Поз, 1);
			Если (ПроверяемСимвол = "" "") ИЛИ (ПроверяемСимвол = """""""") Тогда
				// нашли
				Рез = СокрЛП(Сред(НаименованиеКонтрагента, Поз+1));
				Рез = Рез + "", "" + Сокращение;
				Прервать;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	// теперь уберем ""
	Рез = СтрЗаменить(Рез, """""""", """");
	Возврат Рез;
КонецФункции // ПреобразоватьНаименованиеКонтрагента()

&НаСервере
// Возвращает для определённого вида документа вид операции
//
Функция ОпределитьВидОперации(ВидДокумента) Экспорт
	
	//^<< szewczuk 03.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
		ДокументПоступление = ""ПоступлениеБезналичныхДенежныхСредств"";
		ДокументСписание	= ""СписаниеБезналичныхДенежныхСредств"";
	ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
		ДокументПоступление = ""ПоступлениеНаРасчетныйСчет"";
		ДокументСписание	= ""СписаниеСРасчетногоСчета"";
	КонецЕсли; 
	//^>> 
	
	//^<< szewczuk 03.11.2016
	//^Если ВидДокумента = ""ПоступлениеБезналичныхДенежныхСредств"" Тогда
	Если ВидДокумента = ДокументПоступление Тогда
	//^>> 
		Возврат Объект.НастройкаВидОперацииВходящие;
	//^<< szewczuk 03.11.2016
	//^ИначеЕсли ВидДокумента = ""СписаниеБезналичныхДенежныхСредств"" Тогда	
	ИначеЕсли ВидДокумента = ДокументСписание Тогда	
	//^>> 
		Возврат Объект.НастройкаВидОперацииИсходящие;
	КонецЕсли;	
	
	Возврат Неопределено;
	
КонецФункции // ОпределитьВидОперации()	

&НаКлиенте
Процедура ВыбратьФайлДанных(Элемент, Заголовок, Фильтр = """");
	
	Если Фильтр = """" Тогда
		Фильтр = НСтр(""ru='Текстовый файл (*.txt)|*.*|Файлы dBase (*.dbf)|*.dbf|XML файл (*.xml)|*.xml|Все файлы (*.*)|*.*'"");
	КонецЕсли;	
	
	Если Элемент.Имя = ""ИмяФайлаЭкспорт"" Тогда
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Иначе	
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	КонецЕсли;
	
	ДиалогВыбораФайла.Фильтр                      = Фильтр;
	ДиалогВыбораФайла.Заголовок                   = Заголовок;
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла              = Элемент.ТекстРедактирования;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Если Элемент.Имя = ""ИмяФайлаЭкспорт"" Тогда
			Объект.ИмяФайлаЭкспорт = ДиалогВыбораФайла.ПолноеИмяФайла;
		ИначеЕсли Элемент.Имя = ""ИмяФайлаИмпорт"" Тогда
			Объект.ИмяФайлаИмпорт = ДиалогВыбораФайла.ПолноеИмяФайла;
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(Элемент, Заголовок);
	
	ФайлНаДиске = Новый Файл(Элемент.ТекстРедактирования);
	
	Если НЕ ФайлНаДиске.Существует() Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не найден файл!'""));
		ТекстПредупреждения = НСтр(""ru='Не найден файл!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,); 
		//^>> 
		Возврат;
	КонецЕсли;
	
	Если (Элемент.Имя = ""ИмяФайлаЭкспорт"" И Объект.ТипФайлаЭкспорт = ""DBF"") ИЛИ (Элемент.Имя = ""ИмяФайлаИмпорт"" И Объект.ТипФайлаИмпорт = ""DBF"") Тогда
		
		ЗапуститьПриложение(Элемент.ТекстРедактирования);
		
	Иначе
		
		Текст = Новый ТекстовыйДокумент();
		Если Объект.КодировкаФайлаИмпорт = ""DOS"" Тогда
			Кодир = КодировкаТекста.OEM;
		Иначе
			Кодир = КодировкаТекста.ANSI;
		КонецЕсли;
		
		Текст.Прочитать(Элемент.ТекстРедактирования, Кодир);
		Текст.Показать(Заголовок, Элемент.ТекстРедактирования);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПодключитьВнешнююОбработку(АдресВременногоХранилища, Подключать = Ложь)
	
	//Возврат ВнешниеОбработки.Создать(Объект.ФорматОбмена, Ложь);
	
	Если РежимОтладки Тогда
		Возврат ВнешниеОбработки.Создать(АдресВременногоХранилища, Ложь); // для файлового варианта и тестирования
	КонецЕсли;	
	
	Если Подключать Тогда
		ИмяОбработки = ВнешниеОбработки.Подключить(АдресВременногоХранилища, Объект.ФорматОбмена, Ложь);
	КонецЕсли;	
	
	//// Проверка корректности переданных параметров
	//Если ИмяОбработки = Неопределено Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	
	Возврат ВнешниеОбработки.Создать(Объект.ФорматОбмена, Ложь);
	
КонецФункции

&НаСервере
Функция ПолучитьНастройкуЗаполнения(ИмяНастройки, ВидДокумента) Экспорт
	
	//^<< szewczuk 03.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 	
		Если ИмяНастройки = ""ВидОперации"" Тогда
			Если ВидДокумента = ""ПоступлениеБезналичныхДенежныхСредств"" Тогда
				Возврат Объект.НастройкаВидОперацииВходящие;
			ИначеЕсли ВидДокумента = ""СписаниеБезналичныхДенежныхСредств"" Тогда	
				Возврат Объект.НастройкаВидОперацииИсходящие;
			КонецЕсли;	
		ИначеЕсли ИмяНастройки = ""СтатьяДДС"" Тогда
			Если ВидДокумента = ""ПоступлениеБезналичныхДенежныхСредств"" Тогда
				Возврат Объект.НастройкаСтатьяДДСВходящие;
			ИначеЕсли ВидДокумента = ""СписаниеБезналичныхДенежныхСредств"" Тогда	
				Возврат Объект.НастройкаСтатьяДДСИсходящие;
			КонецЕсли;	
		ИначеЕсли ИмяНастройки = ""Подразделение"" Тогда
			Если ВидДокумента = ""ПоступлениеБезналичныхДенежныхСредств"" Тогда
				Возврат Объект.НастройкаПодразделениеВходящие;
			ИначеЕсли ВидДокумента = ""СписаниеБезналичныхДенежныхСредств"" Тогда	
				Возврат Объект.НастройкаПодразделениеИсходящие;
			КонецЕсли;	
		ИначеЕсли ИмяНастройки = ""СтатьяДоходовИлиРасходов"" Тогда
			Если ВидДокумента = ""ПоступлениеБезналичныхДенежныхСредств"" Тогда
				Возврат Объект.НастройкаСтатьяДоходов;
			ИначеЕсли ВидДокумента = ""СписаниеБезналичныхДенежныхСредств"" Тогда	
				Возврат Объект.НастройкаСтатьяРасходов;
			КонецЕсли;	
		ИначеЕсли ИмяНастройки = ""ТипДокумента"" Тогда
			Возврат Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение;
		ИначеЕсли ИмяНастройки = ""СтавкаНДС"" Тогда
			Возврат Объект.НастройкаСтавкаНДС;
		КонецЕсли;	
	//^<< szewczuk 03.11.2016
	ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
		Если ИмяНастройки = ""ВидОперации"" Тогда
			Если ВидДокумента = ""ПоступлениеНаРасчетныйСчет"" Тогда
				Возврат Объект.НастройкаВидОперацииВходящие;
			ИначеЕсли ВидДокумента = ""СписаниеСРасчетногоСчета"" Тогда	
				Возврат Объект.НастройкаВидОперацииИсходящие;
			КонецЕсли;	
		ИначеЕсли ИмяНастройки = ""СтатьяДДС"" Тогда
			Если ВидДокумента = ""ПоступлениеНаРасчетныйСчет"" Тогда
				Возврат Объект.НастройкаСтатьяДДСВходящие;
			ИначеЕсли ВидДокумента = ""СписаниеСРасчетногоСчета"" Тогда	
				Возврат Объект.НастройкаСтатьяДДСИсходящие;
			КонецЕсли;	
		ИначеЕсли ИмяНастройки = ""СтатьяДоходовИлиРасходов"" Тогда
			Если ВидДокумента = ""ПоступлениеНаРасчетныйСчет"" Тогда
				Возврат Объект.НастройкаСтатьяДоходов;
			ИначеЕсли ВидДокумента = ""СписаниеСРасчетногоСчета"" Тогда	
				Возврат Объект.НастройкаСтатьяРасходов;
			КонецЕсли;
		ИначеЕсли ИмяНастройки = ""СтавкаНДС"" Тогда
			Возврат Объект.НастройкаСтавкаНДС;
		КонецЕсли;
	КонецЕсли; 
	//^>> 
		
	Возврат Неопределено;
	
КонецФункции // ОпределитьВидОперации()

&НаСервере
// Ищет контрагента по ОКПО и наименованию
//
// Параметры:
//
//  ОКПО  – Строка – код по ЕДРПОУ или ДРФО
//  Наименование  – Строка – имя контрагента
//
//  Возвращает: Контрагент с данным ОКПО, либо наименованием
//
Функция НайтиПоОКПО(ОКПО, Наименование) Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапросаОКПО = """";
	
	// Если ОКПО пусто, не ищем по нему, только по Наименованию юр лица.
	
	Если Не ПустаяСтрока(ОКПО) Тогда
		
		ТекстЗапроса = ""ВЫБРАТЬ
		|	Контрагенты.Ссылка,
		|	1 КАК Приоритет
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И (Контрагенты.КодПоЕДРПОУ В (&ОКПО))
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка,
		|	2
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.КодПоЕДРПОУ = &ПустойОКПО
		|	И (Контрагенты.Наименование = &Имя
		|			ИЛИ Контрагенты.Наименование = &ИмяПреобразованное
		|			ИЛИ Контрагенты.НаименованиеПолное ПОДОБНО &Имя)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет"";
		
		МассивОКПО = Новый Массив;
		МассивОКПО.Добавить(Формат(Число(ОКПО),""ЧГ=0"")); //ОКПО
		МассивОКПО.Добавить(Формат(Число(ОКПО),""ЧЦ=8;ЧВН=;ЧГ=0"")); //ОКПО8
		МассивОКПО.Добавить(Формат(Число(ОКПО),""ЧЦ=12;ЧВН=;ЧГ=0"")); //ОКПО12
		
		Запрос.УстановитьПараметр(""ОКПО"", МассивОКПО);
		Запрос.УстановитьПараметр(""ПустойОКПО"", """");
		
	Иначе	
		
		ТекстЗапроса = ""ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ПометкаУдаления = ЛОЖЬ
		|	И (Контрагенты.Наименование = &Имя
		|			ИЛИ Контрагенты.Наименование = &ИмяПреобразованное
		|			ИЛИ Контрагенты.НаименованиеПолное ПОДОБНО &Имя)
		|"";		
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр(""Имя"", Наименование);
	Запрос.УстановитьПараметр(""ИмяПреобразованное"", ПреобразоватьНаименованиеКонтрагента(Наименование));
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат Выборка;
	
КонецФункции // НайтиПоОКПО()	

&НаСервере
// Позволяет определить есть ли среди реквизитов документа
// реквизит с переданным именем.
//
// Параметры: 
//  ИмяРеквизита - строковое имя искомого реквизита, 
//  МетаданныеДокумента - объект описания метаданных документа, среди реквизитов которого производится поиск.
//
// Возвращаемое значение:
//  Истина - нашли реквизит с таким именем, Ложь - не нашли.
//
Функция клЕстьРеквизит(ИмяРеквизита, МетаданныеДокумента) Экспорт

	Если МетаданныеДокумента.Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли; 

КонецФункции // клЕстьРеквизит()

&НаКлиенте
Процедура ЗаполнитьСписокВыбораВидовОпераций(ИмяДокумента, ПолеФормы)
	
	СписокВыбора = ПолеФормы.СписокВыбора;
	СписокВыбора.Очистить();
		
	//^<< szewczuk 31.10.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 	
		Если Найти(ИмяДокумента, ""Поступление"") > 0 Тогда
	
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПрочиеДоходы""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.КонвертацияВалюты""));
		
		Иначе
		
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ОплатаПоставщику""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПрочиеРасходы""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПеречислениеТаможне""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ХозяйственныеОперации.КонвертацияВалюты""));
		
		КонецЕсли;
	//^<< szewczuk 31.10.2016
	ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда 
		
		Если Найти(ИмяДокумента, ""Поступление"") > 0 Тогда
	
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ВозвратДенежныхСредствПоставщиком""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.РасчетыПоКредитамИЗаймам""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПрочиеРасчетыСКонтрагентами""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ИнкассацияДенежныхСредств""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПокупкаПродажаВалюты""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПрочееПоступлениеБезналичныхДенежныхСредств""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажПоПлатежнымКартамИБанковскимКредитам""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступлениеСредствОтФСС""));
		
		Иначе
		
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ОплатаПоставщику""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ВозвратДенежныхСредствПокупателю""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеНалога""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.РасчетыПоКредитамИЗаймам""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПрочиеРасчетыСКонтрагентами""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПереводНаДругойСчет""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеДенежныхСредствПодотчетнику""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПокупкаПродажаВалюты""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПеречислениеЗП""));
			СписокВыбора.Добавить(ПредопределенноеЗначение(""Перечисление.ВидыОперацийСписаниеБезналичныхДенежныхСредств.ПрочееСписаниеБезналичныхДенежныхСредств""));
					
		КонецЕсли;

		
	КонецЕсли; 
	//^>>

		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораВидовДокумента(СуммаПриход, СуммаРасход, ПолеФормы)
	
	СписокВыбора = ПолеФормы.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если СуммаПриход > 0 Тогда
		//^<< szewczuk 04.11.2016
		Если Объект.Конфигурация = ""УТ"" Тогда
		//^>> 	
			СписокВыбора.Добавить(""ПоступлениеБезналичныхДенежныхСредств"");
		//^<< szewczuk 04.11.2016
		ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
			СписокВыбора.Добавить(""ПоступлениеНаРасчетныйСчет"");	
		КонецЕсли; 
		//^>> 
	ИначеЕсли СуммаРасход > 0 Тогда
		//^<< szewczuk 04.11.2016
		Если Объект.Конфигурация = ""УТ"" Тогда
		//^>> 	
			СписокВыбора.Добавить(""СписаниеБезналичныхДенежныхСредств"");
		//^<< szewczuk 04.11.2016
		ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
			СписокВыбора.Добавить(""СписаниеСРасчетногоСчета"");	
		КонецЕсли; 
		//^>> 
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура СформироватьФильтрВыбораФайла(Знач ВнешняяОбработкаОбъект = Неопределено, РежимИмпорт = Истина, РежимЭкспорт = Истина)
	
	Если ВнешняяОбработкаОбъект = Неопределено Тогда
		ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилищаОбработкиФормата);
	КонецЕсли;	
	
	Если РежимИмпорт Тогда
		ПараметрыВызова = Новый Структура;
		ПараметрыВызова.Вставить(""Режим"", ""Импорт""); 
		ПараметрыВызова.Вставить(""ТипФайла"", Объект.ТипФайлаИмпорт);
		ФильтрВыбораФайла = ВнешняяОбработкаОбъект.СформироватьФильтрВыбораФайла(ПараметрыВызова);
	КонецЕсли;	
	
	Если РежимЭкспорт Тогда
		ПараметрыВызова = Новый Структура;
		ПараметрыВызова.Вставить(""Режим"", ""Экспорт""); 
		ПараметрыВызова.Вставить(""ТипФайла"", Объект.ТипФайлаЭкспорт);
		ФильтрВыбораФайлаЭкспорт = ВнешняяОбработкаОбъект.СформироватьФильтрВыбораФайла(ПараметрыВызова);
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьИмяФайла(Знач ВнешняяОбработкаОбъект = Неопределено, РежимИмпорт = Истина, РежимЭкспорт = Истина)
	
	Если ВнешняяОбработкаОбъект = Неопределено Тогда
		ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилищаОбработкиФормата);
	КонецЕсли;	
	
	// формируем имя файлов импорт/экспорт
	Если РежимИмпорт Тогда
		ПараметрыВызова = Новый Структура;
		ПараметрыВызова.Вставить(""Режим"", ""Импорт""); 
		ПараметрыВызова.Вставить(""Дата"", Объект.ДатаВыписки); // дата выписки, если импорт 
		ПараметрыВызова.Вставить(""Организация"", Объект.Организация); // организация 
		ПараметрыВызова.Вставить(""РСчет"", СокрЛП(Объект.БанковскийСчет.НомерСчета)); // Расчетный счет
		ПараметрыВызова.Вставить(""КодВБанке"", Объект.КодВБанке); // если есть 
		ПараметрыВызова.Вставить(""ТипФайла"", Объект.ТипФайлаИмпорт);
		//^<< szewczuk 16.11.2016
		//^Объект.ИмяФайлаИмпорт = ВнешняяОбработкаОбъект.СформироватьИмяФайла(ПараметрыВызова);
		Объект.ИмяФайлаИмпорт = ПроверитьКаталог(ВнешняяОбработкаОбъект.СформироватьИмяФайла(ПараметрыВызова));
		//^>> 
	КонецЕсли;
	
	Если РежимЭкспорт Тогда
		ПараметрыВызова = Новый Структура;
		ПараметрыВызова.Вставить(""Режим"", ""Экспорт"");
		ПараметрыВызова.Вставить(""Дата"", Объект.ДатаППС); // дата начала периода, если экспорт
		ПараметрыВызова.Вставить(""Организация"", Объект.Организация); // организация
		ПараметрыВызова.Вставить(""РСчет"", СокрЛП(Объект.БанковскийСчет.НомерСчета)); // Расчетный счет
		ПараметрыВызова.Вставить(""КодВБанке"", Объект.КодВБанке); // если есть 
		ПараметрыВызова.Вставить(""ТипФайла"", Объект.ТипФайлаЭкспорт);
		//^<< szewczuk 16.11.2016
		//^Объект.ИмяФайлаЭкспорт = ВнешняяОбработкаОбъект.СформироватьИмяФайла(ПараметрыВызова);
		Объект.ИмяФайлаЭкспорт = ПроверитьКаталог(ВнешняяОбработкаОбъект.СформироватьИмяФайла(ПараметрыВызова)); 
		//^>> 
				
	КонецЕсли;	
	
КонецПроцедуры

//^<< szewczuk 16.11.2016
&НаСервере
Функция ПроверитьКаталог(ФайлНаДиске)
	
	ИмяФайла ="""";
	
	ФайлИмпорт = Новый Файл(ФайлНаДиске);
		
	КаталогНаДиске = Новый Файл(ФайлИмпорт.Путь);
		
	Если НЕ КаталогНаДиске.Существует() Тогда
		КаталогНаДиске = Новый Файл(Объект.НастройкаИмяКаталогаКБ);
		Если КаталогНаДиске.Существует() Тогда
			ИмяФайла = Объект.НастройкаИмяКаталогаКБ+ФайлНаДиске;
		КонецЕсли;
	Иначе
		ИмяФайла = ФайлНаДиске;
	КонецЕсли; 

	Возврат ИмяФайла;	
	
КонецФункции
//^>> 
 

&НаСервере
Функция ПолучитьСтатьюДДС(ВидОперации)
	
	//^<< szewczuk 01.11.2016
	//^Возврат Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ВидОперации);	
	Если Объект.Конфигурация = ""УТ"" Тогда
		Возврат Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ВидОперации);	
	КонецЕсли; 
	//^>> 
		                                           	                                    	
КонецФункции

&НаСервере
Функция СформироватьНадписьИнфоБанковскогоСчета(Счет)
	//^<< szewczuk 02.11.2016
	//^Если Счет.Пустая() Тогда
	Если Счет = Неопределено ИЛИ Счет.Пустая() Тогда
	//^>> 
		Возврат """";
	Иначе
		Возврат НСтр(""ru='№ счета: ';uk='№ рахунку: '"") + СокрЛП(Строка(Счет.НомерСчета)) + "", Банк: "" + Строка(Счет.Банк) + "", МФО: "" + Строка(Счет.Банк.Код);
	КонецЕсли;
	
КонецФункции // ЭкспортПлатежныхПоручений()

&НаКлиенте
// В зависимости от параметров обработки проводит автоматический импорт платежей 
// или автоматическое заполнение таблицы экспорта
// 
// Параметры: нет
//
//
Процедура АвтоИмпортЭкспорт()
	// если автоимпорт - делаем его 
	
	Если Объект.НастройкаАвтоИмпортВыписок Тогда
		
		Отказ = Ложь;
		ИмпортВыпискиКлиент(Отказ);
		
		Если НЕ Отказ Тогда	
			ИмпортВыпискиСервер(АдресХранилищаОбработкиФормата, АдресХранилищаФайла);
		КонецЕсли;	
		
	КонецЕсли; 
	
	// если автозаполнение экспорта - заполним таблицу экспорта
	
	Если Объект.НастройкаАвтоЗаполнениеТаблицыЭкспорта Тогда
		ПрочитатьСуществующиеПП();
	КонецЕсли;
	
КонецПроцедуры // АвтоИмпортЭкспорт()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	ПриИзмененииБанковскогоСчета();
КонецПроцедуры

&НаКлиенте
// Процедура выполняет действия при изменении банковского счета
// 
Процедура ПриИзмененииБанковскогоСчета()
	
	// очистим таблицы 
	Объект.тчИмпорт.Очистить();
	Объект.тчЭкспорт.Очистить();
	
	// загрузим старые платежи и платежки
	ПрочитатьСуществующиеПлатежи();
	ПрочитатьСуществующиеПП();
	
	//Если Счет = Неопределено ИЛИ Счет.Пустая() Тогда
	//	НадписьБанк = """";
	//	ФорматОбмена = Неопределено;
	//	ИмяФайлаИмпорт = """";
	//	ТипФайлаИмпорт = Неопределено;
	//Иначе
	//	// перерисуем информационную надпись
	//	НадписьБанк = НСтр(""ru='№ счета: ';uk='№ рахунку: '"") + СокрЛП(Строка(Счет.НомерСчета)) + "", Банк: "" + Строка(Счет.Банк) + "", МФО: "" + Строка(Счет.Банк.Код);
		// прочитаем формат обмена
		Если ЗначениеЗаполнено(сооМФОФормат) Тогда
			ФорматОбменаСтрока = сооМФОФормат.НайтиПоЗначению(ПолучитьМФО());
			Объект.ФорматОбмена = ?(ФорматОбменаСтрока = Неопределено, """", ФорматОбменаСтрока.Представление);
			ФорматОбменаПриИзмененииКлиент();
			ФорматОбменаПриИзмененииСервер();
		КонецЕсли;	
	//КонецЕсли;
	
	ИнфоБанковскогоСчета = СформироватьНадписьИнфоБанковскогоСчета(Объект.БанковскийСчет);
	
КонецПроцедуры // ПриИзмененииБанковскогоСчета()	

&НаКлиенте
Процедура ФорматОбменаПриИзменении(Элемент)
	
	ФорматОбменаПриИзмененииКлиент();
	ФорматОбменаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматОбменаПриИзмененииКлиент()
	
	ТекущийФайлФорматаОбменаСуществует = Истина;
	
	ИмяФайлаОбработкиФорматаСписка = сооФорматИмяФайлаОбработкиФормата.НайтиПоЗначению(Объект.ФорматОбмена);
	
	Если ИмяФайлаОбработкиФорматаСписка <> Неопределено Тогда
		ИмяФайлаОбработкиФормата = ИмяФайлаОбработкиФорматаСписка.Представление;
	Иначе
		ТекущийФайлФорматаОбменаСуществует = Ложь;
		Возврат;
	КонецЕсли;	
	
	Если СуществуетФайл(ИмяФайлаОбработкиФормата) Тогда
		
		Если НЕ РежимОтладки Тогда
			АдресХранилищаОбработкиФормата = """";
			#Если ВебКлиент Тогда
			//^<< szewczuk 03.11.2016
			//^Предупреждение(""Выберите файл "" + ИмяФайлаОбработкиФормата);	
			ТекстПредупреждения = ""Выберите файл "" + ИмяФайлаОбработкиФормата;	
			ПоказатьПредупреждение(,ТекстПредупреждения,,); 
			//^>> 
			Результат = ПоместитьФайл(АдресХранилищаОбработкиФормата, ИмяФайлаОбработкиФормата, , Истина);
			//АдресХранилищаОбработкиФормата = ПоместитьВоВременноеХранилище(ИмяФайлаОбработкиФормата);
			#Иначе
			Результат = ПоместитьФайл(АдресХранилищаОбработкиФормата, ИмяФайлаОбработкиФормата, , Ложь);
			#КонецЕсли
		
		Иначе
			АдресХранилищаОбработкиФормата = ИмяФайлаОбработкиФормата; // для файлового варианта и тестирования  
		КонецЕсли;	
		
	Иначе
		ТекущийФайлФорматаОбменаСуществует = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФорматОбменаПриИзмененииСервер()

	Если ТекущийФайлФорматаОбменаСуществует = Ложь Тогда
		Возврат;
	КонецЕсли;	
	
	ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилищаОбработкиФормата, Истина);
	
	// запрос к обработке формата на поддерживаемые форматы обмена
	ПоддерживаемыеФорматы = ВнешняяОбработкаОбъект.ПолучитьПоддерживаемыеРежимы();
	
	Если ПоддерживаемыеФорматы.Импорт Тогда 
		Элементы.ТипФайлаИмпорт.СписокВыбора.Очистить();
		
		ВсегоТипов = 0;
		Если ПоддерживаемыеФорматы.ИмпортTXT Тогда
			Элементы.ТипФайлаИмпорт.СписокВыбора.Добавить(""TXT"", ""Текстовые файлы"");
			ВсегоТипов = ВсегоТипов + 1;
		КонецЕсли;
		Если ПоддерживаемыеФорматы.ИмпортDBF Тогда
			Элементы.ТипФайлаИмпорт.СписокВыбора.Добавить(""DBF"", ""DBF файлы"");
			ВсегоТипов = ВсегоТипов + 1;
		КонецЕсли;
		Если ПоддерживаемыеФорматы.ИмпортXML Тогда
			Элементы.ТипФайлаИмпорт.СписокВыбора.Добавить(""XML"", ""XML файлы"");
			ВсегоТипов = ВсегоТипов + 1;
		КонецЕсли;
		
		ПараметрыВызова = Новый Структура();
		ПараметрыВызова.Вставить(""Режим"", ""Импорт"");
		ПараметрыВызова.Вставить(""Организация"", Объект.Организация);
		
		ТекущийТипФайлаИмпорта = ВнешняяОбработкаОбъект.ПолучитьТекущийТипФайла(ПараметрыВызова);
		
		Объект.ТипФайлаИмпорт = ТекущийТипФайлаИмпорта;
		
		// запрос к обработке формата на текущий тип файла импорта
		ПараметрыВызова = Новый Структура();
		ПараметрыВызова.Вставить(""Режим"", ""Импорт"");
		ПараметрыВызова.Вставить(""Организация"", Объект.Организация);
		ТекущаяКодировкаФайлаИмпорта = ВнешняяОбработкаОбъект.ПолучитьТекущуюКодировкуФайла(ПараметрыВызова);
		
		Объект.КодировкаФайлаИмпорт = ТекущаяКодировкаФайлаИмпорта;
		
	КонецЕсли;	
	
	Если ПоддерживаемыеФорматы.Экспорт Тогда 
		
		Элементы.СтраницаЭкспорт.Видимость = Истина;
		
		Элементы.ТипФайлаЭкспорт.СписокВыбора.Очистить();
		
		ВсегоТипов = 0;
		Если ПоддерживаемыеФорматы.ЭкспортTXT Тогда
			Элементы.ТипФайлаЭкспорт.СписокВыбора.Добавить(""TXT"", ""Текстовые файлы"");
			ВсегоТипов = ВсегоТипов + 1;
		КонецЕсли;
		Если ПоддерживаемыеФорматы.ЭкспортDBF Тогда
			Элементы.ТипФайлаЭкспорт.СписокВыбора.Добавить(""DBF"", ""DBF файлы"");
			ВсегоТипов = ВсегоТипов + 1;
		КонецЕсли;
		Если ПоддерживаемыеФорматы.ЭкспортXML Тогда
			Элементы.ТипФайлаЭкспорт.СписокВыбора.Добавить(""XML"", ""XML файлы"");
			ВсегоТипов = ВсегоТипов + 1;
		КонецЕсли;
		
		ПараметрыВызова = Новый Структура();
		ПараметрыВызова.Вставить(""Режим"", ""Экспорт"");
		ПараметрыВызова.Вставить(""Организация"", Объект.Организация);
		
		ТекущийТипФайлаЭкспорта = ВнешняяОбработкаОбъект.ПолучитьТекущийТипФайла(ПараметрыВызова);
		
		Объект.ТипФайлаЭкспорт = ТекущийТипФайлаЭкспорта;
		
		// запрос к обработке формата на текущий тип файла экспорта
		ПараметрыВызова = Новый Структура();
		ПараметрыВызова.Вставить(""Режим"", ""Экспорт"");
		ПараметрыВызова.Вставить(""Организация"", Объект.Организация);
		ТекущаяКодировкаФайлаЭкспорта = ВнешняяОбработкаОбъект.ПолучитьТекущуюКодировкуФайла(ПараметрыВызова);
		
		Объект.КодировкаФайлаЭкспорт = ТекущаяКодировкаФайлаЭкспорта;
		
	Иначе
		Элементы.СтраницаЭкспорт.Видимость = Ложь;
	КонецЕсли;	
	
	// запрос к обработке на код в банке 
	ЕстьКодВБанке = ВнешняяОбработкаОбъект.ЕстьКодВБанке();
	Элементы.КодВБанкеИмпорт.Видимость = ЕстьКодВБанке;
	Элементы.КодВБанкеЭкпорт.Видимость = ЕстьКодВБанке;
	
	Если ЕстьКодВБанке Тогда
		
		ПараметрыВызова = Новый Структура();
		ПараметрыВызова.Вставить(""Режим"", ""Импорт"");
		ПараметрыВызова.Вставить(""Организация"", Объект.Организация);
		Объект.КодВБанке = ВнешняяОбработкаОбъект.кбПолучитьКодОрганизации(ПараметрыВызова); 
		
		Если НЕ ЗначениеЗаполнено(Объект.КодВБанке) Тогда
			ПараметрыВызова = Новый Структура();
			ПараметрыВызова.Вставить(""Режим"", ""Экспорт"");
			ПараметрыВызова.Вставить(""Организация"", Объект.Организация);
			Объект.КодВБанке = ВнешняяОбработкаОбъект.кбПолучитьКодОрганизации(ПараметрыВызова); 
		КонецЕсли;	
		
	КонецЕсли;	
	
	СформироватьФильтрВыбораФайла(ВнешняяОбработкаОбъект);
	СформироватьИмяФайла(ВнешняяОбработкаОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройки(Команда)
	
	ПараметрыФормы = Новый Структура(""Ключ"", Объект);
	
	Настройки = Неопределено;

	ОткрытьФорму(МетаПуть + "".Форма.ФормаНастроек"", ПараметрыФормы, ЭтаФорма,,,, Новый ОписаниеОповещения(""ОткрытьНастройкиЗавершение"", ЭтаФорма, Новый Структура(""ПараметрыФормы"", ПараметрыФормы)));	
	
КонецПроцедуры

//^<< szewczuk 01.11.2016
&НаКлиенте
Процедура ОткрытьНастройкиПервыйЗапускЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормы = ДополнительныеПараметры.ПараметрыФормы;
	
	Настройки = Результат;
	
		Если Настройки <> Неопределено Тогда
			ВосстановитьЗначениеНастроек(Настройки);
		Иначе
			// пользователь не захотел при первом запуске сделать настройки 
			// ничего не выдаем, возможно что обработки по умолчанию его и устроили
		КонецЕсли;	

КонецПроцедуры
//^>>

//^<< szewczuk 01.11.2016
&НаКлиенте
Процедура ОткрытьНастройкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормы = ДополнительныеПараметры.ПараметрыФормы;
	Настройки = Результат;
	
	Если Настройки <> Неопределено Тогда
		ВосстановитьЗначениеНастроек(Настройки);
	КонецЕсли;
	
	//^<< szewczuk 10.11.2016
	Если НЕ ПрочитатьИниФайлы(Элементы) Тогда
		// пользователь не захотел сделать настройки, выйдем вообще из обработки
		ТекстПредупреждения = НСтр(""ru='Не правильно указан каталог продукта. Обработка будет закрыта!';uk='Не правильно зазначений каталог продукту. Обробка буде закрита!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		ЭтаФорма.Закрыть();
	Иначе
		ПриИзмененииБанковскогоСчета();
		// При установленных параметрах делаем автоимпорт и/или автозаполнение таблицы экспорта
		АвтоИмпортЭкспорт();
	КонецЕсли; 
	//^>>
	
КонецПроцедуры
//^>>

&НаКлиенте
Процедура ОткрытьНастройкиФорматовОбмена(Команда)
	
	ПараметрыФормы = Новый Структура(""Ключ, сооМФОФормат"", Объект, сооМФОФормат);
	Настройки = Неопределено;

	ОткрытьФорму(МетаПуть + "".Форма.ФормаНастроекФорматов"", ПараметрыФормы, ЭтаФорма,,,, Новый ОписаниеОповещения(""ОткрытьНастройкиФорматовОбменаЗавершение"", ЭтаФорма)); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиФорматовОбменаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	//^<< szewczuk 01.11.2016
	//^Настройки = ОткрытьФормуМодально(МетаПуть + "".Форма.ФормаНастроекФорматов"", ПараметрыФормы, ЭтаФорма);
	Настройки = Результат;
	//^>> 
	//^<< szewczuk 01.11.2016
	//^// в любом случае перечитываем файл с используемыми форматами
	СписокФорматов = ПрочитатьИспользуемыеФорматыОбмена();
	Элементы.ФорматОбмена.СписокВыбора.ЗагрузитьЗначения(СписокФорматов.ВыгрузитьЗначения());
	//^>>

КонецПроцедуры            

////////////////////////////////////////////////////////////////////////////////
// Закладка ""Импорт выписки""

&НаСервере
// Проверяем, что выбраны организация, счет, дата выписки не пустая
//
// Параметры: нет
//
// Возвращаем:
//		Истина - заполнены поля
//		Ложь - иначе
//
Функция ПроверитьЗаполнениеПолей()
	
	Если Объект.ДатаВыписки = Неопределено Тогда
		Сообщить(НСтр(""ru='Не указана дата выписки!';uk='Не вказана дата виписки!'""));
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.Организация.Пустая() Тогда
		Сообщить(НСтр(""ru='Не указана организация!';uk='Не вказана організація!'""));
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.БанковскийСчет.Пустая() Тогда
		Сообщить(НСтр(""ru='Не указан расчетный счет!';uk='Не вказаний розрахунковий рахунок!'""));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // ПроверитьЗаполнениеПолей()	

// Читает существующие документы выписок
//
// Параметры:
//
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ПрочитатьСуществующиеПлатежи()
	
	// Проверить, что выбраны организация, счет, дата выписки не пустая
	Если НЕ ПроверитьЗаполнениеПолей() Тогда
		Возврат;
	КонецЕсли;	
	
	//Запрос к документам: выписки (СтрокаВыпискиПриход и СтрокаВыпискиРасход)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр(""ДатаНач"", НачалоДня(Объект.ДатаВыписки));	
	Запрос.УстановитьПараметр(""ДатаКон"", КонецДня(Объект.ДатаВыписки));
	Запрос.УстановитьПараметр(""Организация"", Объект.Организация);
	Запрос.УстановитьПараметр(""БанковскийСчет"", Объект.БанковскийСчет);
	
	Запрос.УстановитьПараметр(""ДатаНачНеОплаченные"", НачалоДня(Объект.ДатаВыписки-Объект.НастройкаКоличествоДнейДляОплатыБанка*86400));	
	//^<< szewczuk 01.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
			
		ТекстЗапроса = 
		""ВЫБРАТЬ
	       |	ПоступлениеБезналичныхДенежныхСредств.Ссылка,
	       |	ПоступлениеБезналичныхДенежныхСредств.ХозяйственнаяОперация,
		   |	ПоступлениеБезналичныхДенежныхСредств.ТипПлатежногоДокумента,
	       |	ПоступлениеБезналичныхДенежныхСредств.Контрагент,
	       |	ПоступлениеБезналичныхДенежныхСредств.СуммаДокумента,
	       |	ПоступлениеБезналичныхДенежныхСредств.БанковскийСчетКонтрагента,
		   |	ПоступлениеБезналичныхДенежныхСредств.НомерВходящегоДокумента КАК НомерПП,
		   |	ПоступлениеБезналичныхДенежныхСредств.НазначениеПлатежа КАК НазначениеПлатежа,
	       |	ПоступлениеБезналичныхДенежныхСредств.СтатьяДвиженияДенежныхСредств,
		   |	ВЫБОР
		   |		КОГДА ДенежныеСредстваКПоступлениюБезналичныеОстатки.СуммаОстаток >= 0
		   |			ТОГДА Ложь
		   |		ИНАЧЕ Истина
		   |	КОНЕЦ КАК Оплачен,
	       |	""""Приход"""" КАК ПриходРасход
	       |ИЗ
	       |	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
		   |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКПоступлениюБезналичные.Остатки КАК ДенежныеСредстваКПоступлениюБезналичныеОстатки
		   |	ПО ДенежныеСредстваКПоступлениюБезналичныеОстатки.Документ = ПоступлениеБезналичныхДенежныхСредств.Ссылка
	       |ГДЕ
	       |	ПоступлениеБезналичныхДенежныхСредств.Дата МЕЖДУ &ДатаНач И &ДатаКон
	       |	И ПоступлениеБезналичныхДенежныхСредств.Организация = &Организация
	       |	И ПоступлениеБезналичныхДенежныхСредств.БанковскийСчет = &БанковскийСчет
	       |	И ПоступлениеБезналичныхДенежныхСредств.ПометкаУдаления = ЛОЖЬ
	       |	И ПоступлениеБезналичныхДенежныхСредств.Проведен = ИСТИНА
	       |
	       |ОБЪЕДИНИТЬ
	       |
	       |ВЫБРАТЬ
	       |	СписаниеБезналичныхДенежныхСредств.Ссылка,
	       |	СписаниеБезналичныхДенежныхСредств.ХозяйственнаяОперация,
		   |	СписаниеБезналичныхДенежныхСредств.ТипПлатежногоДокумента,
	       |	ВЫБОР
	       |		КОГДА СписаниеБезналичныхДенежныхСредств.ХозяйственнаяОперация В (
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
		   |				)
	       |			ТОГДА СписаниеБезналичныхДенежныхСредств.Организация
	       |		ИНАЧЕ СписаниеБезналичныхДенежныхСредств.Контрагент
	       |	КОНЕЦ КАК Контрагент,
	       |	СписаниеБезналичныхДенежныхСредств.СуммаДокумента,
	       |	ВЫБОР
	       |		КОГДА СписаниеБезналичныхДенежныхСредств.ХозяйственнаяОперация В (
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
		   |				)
	       |			ТОГДА СписаниеБезналичныхДенежныхСредств.БанковскийСчетПолучатель
	       |		ИНАЧЕ СписаниеБезналичныхДенежныхСредств.БанковскийСчетКонтрагента
	       |	КОНЕЦ КАК БанковскийСчетКонтрагента,
		   |	ВЫБОР
		   |		КОГДА СписаниеБезналичныхДенежныхСредств.ТипПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение)
		   |			ТОГДА СписаниеБезналичныхДенежныхСредств.НомерПоручения
		   |		ИНАЧЕ СписаниеБезналичныхДенежныхСредств.НомерВходящегоДокумента
		   |	КОНЕЦ КАК НомерПП,
		   |	СписаниеБезналичныхДенежныхСредств.НазначениеПлатежа КАК НазначениеПлатежа,
	       |	СписаниеБезналичныхДенежныхСредств.СтатьяДвиженияДенежныхСредств,
		   |	ВЫБОР
		   |		КОГДА ДенежныеСредстваКСписаниюБезналичныеОстатки.СуммаОстаток <= 0
		   |			ТОГДА Ложь
		   |		ИНАЧЕ Истина
		   |	КОНЕЦ КАК Оплачен,
	       |	""""Расход""""
	       |ИЗ
	       |	Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
		   |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКСписаниюБезналичные.Остатки КАК ДенежныеСредстваКСписаниюБезналичныеОстатки
		   |	ПО ДенежныеСредстваКСписаниюБезналичныеОстатки.Документ = СписаниеБезналичныхДенежныхСредств.Ссылка
		   |//		И ДенежныеСредстваКСписаниюБезналичныеОстатки.СуммаОстаток < 0 // не оплачен
	       |ГДЕ
		   |	( ((Дата МЕЖДУ &ДатаНач И &ДатаКон) ) ИЛИ ((Дата МЕЖДУ &ДатаНачНеОплаченные И &ДатаНач) И ДенежныеСредстваКСписаниюБезналичныеОстатки.СуммаОстаток <= 0 ) )
	       |	И СписаниеБезналичныхДенежныхСредств.Организация = &Организация
	       |	И СписаниеБезналичныхДенежныхСредств.БанковскийСчет = &БанковскийСчет
	       |	И СписаниеБезналичныхДенежныхСредств.ПометкаУдаления = ЛОЖЬ"";
	//^<< szewczuk 04.11.2016
	ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда 
		ТекстЗапроса =
		""ВЫБРАТЬ
		 |	ПоступлениеНаРасчетныйСчет.Ссылка,
		 |	ПоступлениеНаРасчетныйСчет.ВидОперации КАК ХозяйственнаяОперация,
		 |	ПоступлениеНаРасчетныйСчет.Контрагент,
		 |	ПоступлениеНаРасчетныйСчет.СуммаДокумента,
		 |	ПоступлениеНаРасчетныйСчет.СчетКонтрагента КАК БанковскийСчетКонтрагента,
		 |	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента КАК НомерПП,
		 |	ПоступлениеНаРасчетныйСчет.НазначениеПлатежа,
		 |	ИСТИНА КАК Оплачен,
		 |	""""Приход"""" КАК ПриходРасход,
		 |	ПоступлениеНаРасчетныйСчет.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
		 |ИЗ
		 |	Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
		 |ГДЕ
		 |	ПоступлениеНаРасчетныйСчет.Дата МЕЖДУ &ДатаНач И &ДатаКон
		 |	И ПоступлениеНаРасчетныйСчет.Организация = &Организация
		 |	И ПоступлениеНаРасчетныйСчет.СчетОрганизации = &БанковскийСчет
		 |	И ПоступлениеНаРасчетныйСчет.ПометкаУдаления = ЛОЖЬ
		 |	И ПоступлениеНаРасчетныйСчет.Проведен = ИСТИНА
		 |
		 |ОБЪЕДИНИТЬ ВСЕ
		 |
		 |ВЫБРАТЬ
		 |	СписаниеСРасчетногоСчета.Ссылка,
		 |	СписаниеСРасчетногоСчета.ВидОперации,
		 |	СписаниеСРасчетногоСчета.Контрагент,
		 |	СписаниеСРасчетногоСчета.СуммаДокумента,
		 |	СписаниеСРасчетногоСчета.СчетКонтрагента,
		 |	СписаниеСРасчетногоСчета.НомерВходящегоДокумента,
		 |	СписаниеСРасчетногоСчета.НазначениеПлатежа,
		 |	ИСТИНА,
		 |	""""Расход"""",
		 |	СписаниеСРасчетногоСчета.СтатьяДвиженияДенежныхСредств
		 |ИЗ
		 |	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
		 |ГДЕ
		 |	СписаниеСРасчетногоСчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
		 |	И СписаниеСРасчетногоСчета.Организация = &Организация
		 |	И СписаниеСРасчетногоСчета.СчетОрганизации = &БанковскийСчет
		 |	И СписаниеСРасчетногоСчета.ПометкаУдаления = ЛОЖЬ
		 |	И СписаниеСРасчетногоСчета.Проведен = ИСТИНА"";
	//^>> 
	КонецЕсли;

    Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.тчИмпорт.Добавить();
		
		НоваяСтрока.Контрагент 		= Выборка.Контрагент;
		НоваяСтрока.НомерПП 		= Выборка.НомерПП;
		
		НоваяСтрока.Приход      	= ?(Выборка.ПриходРасход = ""Приход"", Выборка.СуммаДокумента, 0);
		НоваяСтрока.Расход          = ?(Выборка.ПриходРасход = ""Расход"", Выборка.СуммаДокумента, 0);
		
		НоваяСтрока.СчетКонтрагента = Выборка.БанковскийСчетКонтрагента;
		
		НоваяСтрока.Содержание      = Выборка.НазначениеПлатежа;
		
		Документ = Выборка.Ссылка;
		НоваяСтрока.Документ		= Документ;
		НоваяСтрока.ВидОперации		= Выборка.ХозяйственнаяОперация;
		//^<< szewczuk 04.11.2016
		Если Объект.Конфигурация = ""УТ"" Тогда
		//^>> 	
			НоваяСтрока.ТипДокумента	= Выборка.ТипПлатежногоДокумента;
		//^<< szewczuk 04.11.2016
		КонецЕсли; 
		//^>> 
		 
		НоваяСтрока.СтатьяДДС		= Выборка.СтатьяДвиженияДенежныхСредств;
		НоваяСтрока.ВидДокумента	= Выборка.Ссылка.Метаданные().Имя;
		
		Если Документ.РасшифровкаПлатежа.Количество() > 0 Тогда
		
			//^<< szewczuk 04.11.2016
			Если Объект.Конфигурация = ""УТ"" Тогда
			//^>> 	
				Если Выборка.ПриходРасход = ""Приход"" Тогда
					НоваяСтрока.СтатьяДоходовИлиРасходов = Документ.РасшифровкаПлатежа[0].СтатьяДоходов;
				ИначеЕсли Выборка.ПриходРасход = ""Расход"" Тогда
					НоваяСтрока.СтатьяДоходовИлиРасходов = Документ.РасшифровкаПлатежа[0].СтатьяРасходов;
				КонецЕсли;
				НоваяСтрока.Подразделение   = Документ.РасшифровкаПлатежа[0].Подразделение;	
			//^<< szewczuk 04.11.2016	
			КонецЕсли; 
			//^>>
			
			//^<< szewczuk 10.11.2016
			Если  Объект.Конфигурация = ""БУ"" Тогда
				НоваяСтрока.Договор = Документ.РасшифровкаПлатежа[0].ДоговорКонтрагента;	
			КонецЕсли; 
			//^>> 
			 
			НоваяСтрока.Статус 	= СтатусыСтрокИмпорта.СуществующийПлатеж;
		
			НоваяСтрока.Оплачен	= Выборка.Оплачен;
		
			НоваяСтрока.Флаг 	= Истина;
	
		КонецЕсли;
	КонецЦикла;
  СортировкаТчИмпорт();
	
КонецПроцедуры // ПрочитатьСуществующиеПлатежи()

&НаКлиенте
Процедура ИмпортВыпискиКлиент(Отказ = Ложь)
	
	// Очищаем с таблицы все, кроме существующих платежей
	// проверим, что таблица не пустая и не все уже существующие - тогда и лишнего вопроса
	// задавать не надо
	
	Рез = 0;
	Для Каждого Строка Из Объект.тчИмпорт Цикл
		Если Строка.Статус <> СтатусыСтрокИмпорта.СуществующийПлатеж Тогда
			Рез = 1;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Если Рез = 1 Тогда
		
		//^<< szewczuk 02.11.2016
		//^Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		//^	Отказ = Истина;
		//^	Возврат;
		//^КонецЕсли;
		ТекстВопроса = НСтр(""ru='Будут удалены все платежи, кроме существующих. Продолжить?';uk='Будуть вилучені всі платежі, крім існуючих. Продовжити?'"");
		ПоказатьВопрос(Новый ОписаниеОповещения(""ИмпортВыпискиКлиентЗавершение"", ЭтаФорма),ТекстВопроса,РежимДиалогаВопрос.ДаНет,,);
		ОчиститьНесуществующиеПлатежи();
		//^>>
	КонецЕсли;
	
	// 1. Проверяем, что выбрано имя файла, файл существует, ФормаОбработкиФормата определена
	// дата, организация, расчетный счет, формат обмена, тип файла
	Если НЕ ПроверитьЗаполнениеПолейДляИмпорта() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	АдресХранилищаФайла = """";
	
	#Если ВебКлиент Тогда
	//^<< szewczuk 02.11.2016
	//^Предупреждение(""Выберите файл "" + Объект.ИмяФайлаИмпорт);
	ТекстПредупреждения = ""Выберите файл "" + Объект.ИмяФайлаИмпорт;	
	ПоказатьПредупреждение(,ТекстПредупреждения,,);
	//^>> 
		
	Результат = ПоместитьФайл(АдресХранилищаФайла, Объект.ИмяФайлаИмпорт, , Истина);
	#Иначе
	Результат = ПоместитьФайл(АдресХранилищаФайла, Объект.ИмяФайлаИмпорт, , Ложь);
	#КонецЕсли

КонецПроцедуры

//^<< szewczuk 02.11.2016
&НаКлиенте
Процедура ИмпортВыпискиКлиентЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
КонецПроцедуры
//^>> 

&НаСервере
Функция ИмпортВыпискиСервер(АдресХранилища, АдресХранилищаФайла)
	
	Если НЕ ТекущийФайлФорматаОбменаСуществует Тогда
		Сообщить(""Файл формата "" + Объект.ФорматОбмена + "" не найден"");
		Возврат Неопределено;
	КонецЕсли;	
	
	ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилища);
	
	// 1.1 Сохраняем значения для выбранного формата
	// Вызываем функцию СохранитьЗначения для формата
	
	ПараметрыВызова = Новый Структура;
	ПараметрыВызова.Вставить(""Режим"", 				""Импорт"");
	ПараметрыВызова.Вставить(""Организация"", 		Объект.Организация);
	ПараметрыВызова.Вставить(""ТекущееИмяФайла"", 	Объект.ИмяФайлаИмпорт);
	ПараметрыВызова.Вставить(""КодВБанке"", 			Объект.КодВБанке); // если есть 
	ПараметрыВызова.Вставить(""ТекущийТипФайла"", 	Объект.ТипФайлаИмпорт);
	ПараметрыВызова.Вставить(""КодировкаФайла"", 		Объект.КодировкаФайлаИмпорт);

	ВнешняяОбработкаОбъект.СохранитьНастройки(ПараметрыВызова);
	
	// 2. Формируем параметры для вызова функции импорта формы обработки формата
	
	// запрос к обработке формата на импорт
	ПараметрыФормата = Новый Структура;
	
	ПараметрыФормата.Вставить(""ДатаДок"", 			Объект.ДатаВыписки);
	ПараметрыФормата.Вставить(""Организация"", 		Объект.Организация);
	ПараметрыФормата.Вставить(""РСчет"", 				СокрЛП(Объект.БанковскийСчет.НомерСчета));
	
	ХранилищаФайла = ПолучитьИзВременногоХранилища(АдресХранилищаФайла);
	//ИмяФайла = ПолучитьИмяВременногоФайла(Объект.ТипФайлаИмпорт); 
	ИмяФайла = КаталогВременныхФайлов() + ""KBExch."" + Объект.ТипФайлаИмпорт; 
	ХранилищаФайла.Записать(ИмяФайла);
	
	ПараметрыФормата.Вставить(""ИмяФайла"",			ИмяФайла);
	ПараметрыФормата.Вставить(""ТипФайла"", 			Объект.ТипФайлаИмпорт);
	ПараметрыФормата.Вставить(""НашМФО"", 			СокрЛП(Объект.БанковскийСчет.Банк.Код));
	ПараметрыФормата.Вставить(""КодировкаФайла"", 	Объект.КодировкаФайлаИмпорт);
	ПараметрыФормата.Вставить(""АдресХранилищаФайла"", АдресХранилищаФайла);
		
	// 3. Вызываем функцию обработки, получаем таблицу платежей
	
	Попытка
		тзВыписка = ВнешняяОбработкаОбъект.ИмпортВыписки(ПараметрыФормата);
	Исключение
		//^<< szewczuk 03.11.2016
		//^Сообщить(""Ошибка импорта: "" + ОписаниеОшибки());
		Сообщить(""Ошибка импорта: "");
		//^>> 
		Возврат Неопределено;
	КонецПопытки; 
	
	// Если произошла ошибка
	Если тзВыписка = Неопределено ИЛИ ТипЗнч(тзВыписка) <> Тип(""ТаблицаЗначений"") Тогда
		Если ТипЗнч(тзВыписка) = Тип(""Строка"") И ЗначениеЗаполнено(тзВыписка) Тогда
			Сообщить(тзВыписка);
		Иначе
			Сообщить(""Не загружено"");
		КонецЕсли;	
		Возврат Неопределено;
	КонецЕсли;	
	
	
	// 4. Обрабатываем таблицу платежей 
	// (перекодировка, только входящие, ищем юрфизлиц, контрагентов, сделки, заказы, договора)
	
	тзПлатежи = Объект.тчИмпорт.Выгрузить();
	тзПлатежи.Очистить();
	
	ПерекодировкаИмпорта = ВнешняяОбработкаОбъект.ПерекодировкаИмпорта();
	
	Для Каждого Строка Из тзВыписка Цикл
		
		// проверяем на только входящие платежи
		Если Объект.НастройкаИмпортТолькоВходящихПлатежей Тогда
			Если Число(Строка.Расход) > 0 Тогда
				Продолжить;	
			КонецЕсли; 
		КонецЕсли;
		
		НоваяСтрока = тзПлатежи.Добавить();
		
		// перекодировка
		Если ПерекодировкаИмпорта Тогда
			Строка.Контрагент = ЗаменитьСимволы(Строка.Контрагент);	
			Строка.Содержание = ЗаменитьСимволы(Строка.Содержание);	
		КонецЕсли;	
		
		НоваяСтрока.Приход      	= Строка.Приход;
		НоваяСтрока.Расход      	= Строка.Расход;
		
		НоваяСтрока.НомерПП			= Строка.НомерПП;
		
		// 4.1. Определение контрагента
		// Ищем по коду ЕДРПОУ (в дальнейшем ОКПО):
		ВыборкаПоОКПО = НайтиПоОКПО(Строка.ОКПО, Строка.Контрагент);
		НайденКонтрагент = Ложь;
		Если ВыборкаПоОКПО.Следующий() Тогда //есть хоть один
			
			Контрагент 	= ВыборкаПоОКПО.Ссылка;
			НайденКонтрагент = Истина;
			
		Иначе
			
			// в зависимости от флага
			// ""АвтоСозданиеКонтрагента"" создаем новые элементы справочника Контрагенты
			
			Если Объект.НастройкаАвтоСозданиеКонтрагента Тогда
				
				ПР = ?(Строка.Приход = 0, ""Р"", ""П"");
				
				Реквизиты = Новый Структура;
				Реквизиты.Вставить(""Наименование"", Строка.Контрагент);
				Реквизиты.Вставить(""ПР"", ПР); //Приход (""П"") или расход (""Р"")
				Реквизиты.Вставить(""ОКПО"", 	Строка.ОКПО);
				Реквизиты.Вставить(""РСчет"", Строка.РСчет);
				Реквизиты.Вставить(""МФО"", 	Строка.МФО);
				
				//Создаём нового контрагента в справочнике
				Контрагент = СоздатьСпрКонтрагент(Реквизиты);
			Иначе
				// ПустаяСсылка
				Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			КонецЕсли;	
			
		КонецЕсли;	
		
		НоваяСтрока.Контрагент 		= Контрагент;
		
		// 4.2. Определение сделки, заказа, договора.		
		ПриходРасход = """";
		Если НоваяСтрока.Приход > 0 Тогда
			ПриходРасход = ""Приход"";
			//^<< szewczuk 03.11.2016
			Если Объект.Конфигурация = ""УТ"" Тогда
			//^>> 	
				ВидДокумента = ""ПоступлениеБезналичныхДенежныхСредств"";	
			//^<< szewczuk 03.11.2016
			ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
				ВидДокумента = ""ПоступлениеНаРасчетныйСчет"";	
			КонецЕсли; 
			//^>> 
			 
		ИначеЕсли НоваяСтрока.Расход > 0 Тогда	
			ПриходРасход = ""Расход"";
			//^<< szewczuk 03.11.2016
			Если Объект.Конфигурация = ""УТ"" Тогда
			//^>> 	
				ВидДокумента = ""СписаниеБезналичныхДенежныхСредств"";
			//^<< szewczuk 03.11.2016
			ИначеЕсли  Объект.Конфигурация = ""БУ"" Тогда
				ВидДокумента = ""СписаниеСРасчетногоСчета"";	
			КонецЕсли; 
			//^>> 
			
		КонецЕсли;	
		
		НоваяСтрока.ВидДокумента 	= ВидДокумента;
		
		//НоваяСтрока.ВидОперации = ОпределитьВидОперации(ВидДокумента);
		НоваяСтрока.ВидОперации 				= ПолучитьНастройкуЗаполнения(""ВидОперации"", ВидДокумента);
		НоваяСтрока.СтатьяДДС 					= ПолучитьНастройкуЗаполнения(""СтатьяДДС"", ВидДокумента);
		НоваяСтрока.Подразделение 				= ПолучитьНастройкуЗаполнения(""Подразделение"", ВидДокумента);
		НоваяСтрока.СтатьяДоходовИлиРасходов 	= ПолучитьНастройкуЗаполнения(""СтатьяДоходовИлиРасходов"", ВидДокумента);
		//^<< szewczuk 04.11.2016
		Если Объект.Конфигурация = ""БУ"" Тогда
			НоваяСтрока.СтавкаНДС 					= ПолучитьНастройкуЗаполнения(""СтавкаНДС"", ВидДокумента);	
		КонецЕсли; 
		//^>> 
		
		//^<< szewczuk 04.11.2016
		Если Объект.Конфигурация = ""УТ"" Тогда
			НоваяСтрока.ТипДокумента 				= ПолучитьНастройкуЗаполнения(""ТипДокумента"", ВидДокумента);
		КонецЕсли; 
		//^>>
		
		СписокВидовДоговоров = клОпределитьВидДоговораСКонтрагентом(ПолучитьНастройкуЗаполнения(""ВидОперации"", ВидДокумента));
		Договор		= НайтиДоговорКонтрагента(Контрагент,Объект.Организация,СписокВидовДоговоров);

		НоваяСтрока.Договор 		= Договор;
		
		НоваяСтрока.Содержание 		= СокрЛП(Строка.Содержание);
				
		// по счету ищем банковский счет для контрагента. Если нет - создать.
		НоваяСтрока.СчетКонтрагента = НайтиСчетКонтрагента(Строка.РСчет, Контрагент);
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СчетКонтрагента) Тогда
			НоваяСтрока.СчетКонтрагента = ДобавитьСчетКонтрагента(Контрагент, Строка.РСчет, Строка.МФО);
		КонецЕсли;	
			
		// определяем статус
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Контрагент) Тогда
			НоваяСтрока.Статус = СтатусыСтрокИмпорта.НеобходимоЗаполнитьРеквизиты;
		Иначе
			НоваяСтрока.Статус = СтатусыСтрокИмпорта.ГотовКЗаписи;
		КонецЕсли;
		
	КонецЦикла;	
	
	// Ищем среди неоплаченных ППИсх с совпадением суммы и номера ПП (то есть те, которые вернулись из банка и их необходимо обновить). 
	// Для таких проставим статус СуществующийПлатежНеобходимоОплатить
	МассивУдаляемыхСтрок = Новый Массив;
	
	Для Каждого СтрокаИмпорт Из Объект.тчИмпорт Цикл
		
		Если СтрокаИмпорт.Оплачен Или СтрокаИмпорт.ВидДокумента <> ""СписаниеБезналичныхДенежныхСредств"" Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Строка Из тзПлатежи Цикл
			Если Строка.Контрагент = СтрокаИмпорт.Контрагент Тогда
				
				Если (Строка.Расход > 0) И (СтрокаИмпорт.Расход  > 0) И (Строка.Расход  = СтрокаИмпорт.Расход ) Тогда
					// номер ПП есть в файле и совпадает с текущим
					Если ЗначениеЗаполнено(Строка.НомерПП) И Строка.НомерПП <> СтрокаИмпорт.НомерПП Тогда
						Продолжить;
					КонецЕсли;	
					
					Если МассивУдаляемыхСтрок.Найти(Строка) = Неопределено Тогда
						МассивУдаляемыхСтрок.Добавить(Строка);
					КонецЕсли;	
					
					СтрокаИмпорт.Статус = СтатусыСтрокИмпорта.СуществующийПлатежНеобходимоОплатить;
					Прервать;
				КонецЕсли;	
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Для Каждого ЭлементМассива Из МассивУдаляемыхСтрок Цикл
		тзПлатежи.Удалить(ЭлементМассива);
	КонецЦикла;
	
	// 4.5 Удаляем с тзПлатежи, те которые уже есть в тчИмпорт
	// (совпадение по Контрагенту и приходу-расходу)
	
	МассивУдаляемыхСтрок = Новый Массив;
	
	Для Каждого Строка Из тзПлатежи Цикл
		ПервоеСовпадениеПриход = Истина;
		ПервоеСовпадениеРасход = Истина;
		Для Каждого СтрокаИмпорт Из Объект.тчИмпорт Цикл
			
			СтрокаСравнения = ""Контрагент"";
			Если (Строка[СтрокаСравнения] = СтрокаИмпорт[СтрокаСравнения]) Тогда
				// приход-расход
				Если (Строка.Приход > 0) И (СтрокаИмпорт.Приход > 0) И (Строка.Приход = СтрокаИмпорт.Приход) Тогда
					// номер ПП есть в файле и совпадает с текущим
					Если ЗначениеЗаполнено(Строка.НомерПП) И Строка.НомерПП <> СтрокаИмпорт.НомерПП Тогда
						Продолжить;
					КонецЕсли;	
					// совпало
					Если ПервоеСовпадениеПриход Тогда
						// эту строку из тзПлатежи удаляем
						МассивУдаляемыхСтрок.Добавить(Строка);
						ПервоеСовпадениеПриход = Ложь;
					КонецЕсли; 
				КонецЕсли; 
				Если (Строка.Расход > 0) И (СтрокаИмпорт.Расход  > 0) И (Строка.Расход  = СтрокаИмпорт.Расход ) Тогда
					// номер ПП есть в файле и совпадает с текущим
					Если ЗначениеЗаполнено(Строка.НомерПП) И Строка.НомерПП <> СтрокаИмпорт.НомерПП Тогда
						Продолжить;
					КонецЕсли;	
					// совпало
					Если ПервоеСовпадениеРасход  Тогда
						// эту строку из тзПлатежи удаляем
						МассивУдаляемыхСтрок.Добавить(Строка);
						ПервоеСовпадениеРасход  = Ложь;
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
	Для Каждого ЭлементМассива Из МассивУдаляемыхСтрок Цикл
		тзПлатежи.Удалить(ЭлементМассива);
	КонецЦикла;
	
	
	// 5. Объединяем с тчИмпорт, в которой сейчас существующие платежи. Устанавливаем статусы
	Для Каждого Строка Из тзПлатежи Цикл  
		НоваяСтрока = Объект.тчИмпорт.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

		НоваяСтрока.Оплачен = Истина;
		НоваяСтрока.Флаг = Истина;
		
	КонецЦикла;		
	
	// 6. Сортируем тчИмпорт
	СортировкаТчИмпорт();
	
КонецФункции

&НаСервере
Процедура ТипФайлаИмпортПриИзмененииСервер()
	
	ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилищаОбработкиФормата);
	
	СформироватьФильтрВыбораФайла(ВнешняяОбработкаОбъект, Истина, Ложь);
	СформироватьИмяФайла(ВнешняяОбработкаОбъект, Истина, Ложь);
	
КонецПроцедуры

&НаСервере
// Сортирует переданную таблицу значений по типу сортировки
//
// Параметры:
//
//  тзСорт - сортируемая таблица
//	ТипСортировки - тип сортировки
//
// Возвращает отсортированную таблицу
//
Функция Сортировать(тзСорт, ТипСортировки) Экспорт
	
	ПорядокСортировки = """";
	Для Каждого эл Из ТипСортировки Цикл
		ПорядокСортировки = ПорядокСортировки + эл.Значение + "","";
	КонецЦикла;
	ПорядокСортировки = Сред(ПорядокСортировки, 1, СтрДлина(ПорядокСортировки) - 1);
	
	тзВрем = тзСорт.Скопировать();    //скопируем тзСорт во временную тзВрем
	тзВрем.Колонки.Добавить(""Сумма"");
	тзВрем.Колонки.Добавить(""ПриходРасход"");
	Для Каждого стр Из тзВрем Цикл
		стр.Сумма = стр.Приход + стр.Расход;
		Если стр.Расход > 0 Тогда
			стр.ПриходРасход = 1;
		Иначе
			стр.ПриходРасход = 0;
		КонецЕсли; 
	КонецЦикла;	
	
	тзВрем.Сортировать(ПорядокСортировки);
	тзВрем.Колонки.Удалить(""Сумма"");
	тзВрем.Колонки.Удалить(""ПриходРасход"");
	
	Возврат тзВрем;
	
КонецФункции	

&НаСервере
// Сортирует тчИмпорт согласно настроек 
//
// Параметры: УстанавливатьТекущуюСтроку - булево
// При истина устанавливается необходимость изменения текущей строки в тпИмпорт
// Само изменение текущей строки происходит в ОбновлениеОтображения() - 
// здесь текущая строка устанавливаться не хочет
//
Процедура СортировкаТчИмпорт()

	// применим сортировку по настройкам
	Если Объект.НастройкаИспользоватьСортировку Тогда
		//сортируем таблицу значений ""тчИмпорт.Выгрузить()"" табличной части ""тчИмпорт""
		тзИмпорт = Сортировать(Объект.тчИмпорт.Выгрузить(), Объект.НастройкаПорядокСортировки);
		//загружаем ""тзИмпорт"" в ""тчИмпорт""
		Объект.тчИмпорт.Загрузить(тзИмпорт);
	КонецЕсли;	
	
КонецПроцедуры // СортировкаТчИмпорт()

&НаСервере
Процедура СоздатьДокументыВыпискаПоРасчетномуСчету()

	КоличествоСтрок = 0;
	
	Для Каждого СтрокаИмпорт Из Объект.тчИмпорт Цикл
		
		Если НЕ СтрокаИмпорт.Оплачен ИЛИ НЕ СтрокаИмпорт.Флаг ИЛИ НЕ СтрокаИмпорт.Статус = СтатусыСтрокИмпорта.СуществующийПлатежНеобходимоОплатить Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СтрокаИмпорт.Документ) Тогда
			КоличествоСтрок = КоличествоСтрок + 1;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если КоличествоСтрок = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ВыпискаПоРасчетномуСчету = Документы.ВыпискаПоРасчетномуСчету.СоздатьДокумент();
	ВыпискаПоРасчетномуСчету.Организация    = Объект.Организация;
	ВыпискаПоРасчетномуСчету.БанковскийСчет = Объект.БанковскийСчет;
	ВыпискаПоРасчетномуСчету.Дата           = КонецДня(Объект.ДатаВыписки);
	
	ВыпискаПоРасчетномуСчету.УстановитьНовыйНомер();
	
	Для Каждого СтрокаИмпорт Из Объект.тчИмпорт Цикл
		
		Если НЕ СтрокаИмпорт.Оплачен ИЛИ НЕ СтрокаИмпорт.Флаг ИЛИ НЕ СтрокаИмпорт.Статус = СтатусыСтрокИмпорта.СуществующийПлатежНеобходимоОплатить Тогда
			Продолжить;
		КонецЕсли;	
		
		Если СтрокаИмпорт.ВидДокумента = ""ПоступлениеБезналичныхДенежныхСредств"" Тогда
			ВыпискаПоРасчетномуСчетуТабЧасть = ВыпискаПоРасчетномуСчету.ВходящиеПлатежи;
		Иначе	
			ВыпискаПоРасчетномуСчетуТабЧасть = ВыпискаПоРасчетномуСчету.ИсходящиеПлатежи;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИмпорт.Документ) Тогда
			СтрокаВыпискаПоРасчетномуСчету =  ВыпискаПоРасчетномуСчетуТабЧасть.Добавить();
			
			СтрокаВыпискаПоРасчетномуСчету.ПлатежныйДокумент = СтрокаИмпорт.Документ;
			СтрокаВыпискаПоРасчетномуСчету.Сумма = СтрокаИмпорт.Приход + СтрокаИмпорт.Расход;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Попытка
		
		ВыпискаПоРасчетномуСчету.Записать(РежимЗаписиДокумента.Проведение);
		
		Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='Проведен документ """"Выписка по расчетному счету"""" № %1 от %2!'""), ВыпискаПоРасчетномуСчету.Номер, ВыпискаПоРасчетномуСчету.Дата));
		
		Для Каждого СтрокаИмпорт Из Объект.тчИмпорт Цикл
			Если НЕ СтрокаИмпорт.Флаг Тогда
				Продолжить;
			КонецЕсли;	
			СтрокаИмпорт.Оплачен = Истина;
			СтрокаИмпорт.Статус = СтатусыСтрокИмпорта.СуществующийПлатеж;
		КонецЦикла;	
		
	Исключение
		Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='Документ """"Выписка по расчетному счету"""" № %1 от %2 не проведен! Произошли ошибки при проведении!'""), ВыпискаПоРасчетномуСчету.Номер, ВыпискаПоРасчетномуСчету.Дата));
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры // СоздатьДокументыВыпискаПоРасчетномуСчету()

&НаСервере
// Очищает в тчИмпорт все платежи, кроме существующих
//
// Параметры:
//
Процедура ОчиститьНесуществующиеПлатежи()
	
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого Строка Из Объект.тчИмпорт Цикл
		Если Строка.Статус <> СтатусыСтрокИмпорта.СуществующийПлатеж Тогда
			МассивУдаляемыхСтрок.Добавить(Строка);			
		КонецЕсли; 
	КонецЦикла; 
	Для Каждого ЭлементМассива Из МассивУдаляемыхСтрок Цикл
		Объект.тчИмпорт.Удалить(ЭлементМассива);
	КонецЦикла;
	
КонецПроцедуры // ОчиститьНесуществующиеПлатежи()

&НаКлиенте
// Проверяет заполнение всех полей для импорта выписки
// 
// Проверяем, что выбрано имя файла, файл существует, ФормаОбработкиФормата определена
// дата, организация, расчетный счет, формат обмена, тип файла
//
// Параметры: нет
//
// Возвращаем:
//		Истина - заполнены все поля
//		Ложь - иначе
//
Функция ПроверитьЗаполнениеПолейДляИмпорта()
	
	Если ПустаяСтрока(Объект.ИмяФайлаИмпорт) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр(""ru='Не указано имя файла для импорта выписки!';uk='Не вказано ім''я файлу імпорту виписки!'""));
		ТекстПредупреждения = НСтр(""ru='Не указано имя файла для импорта выписки!';uk='Не вказано ім''я файлу імпорту виписки!'"");
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		//^>> 
		Возврат Ложь;
	КонецЕсли; 
	
	Если НЕ СуществуетФайл(Объект.ИмяФайлаИмпорт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.ДатаВыписки = '00010101000000' Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр(""ru='Не указана дата выписки!';uk='Не вказана дата виписки!'""));
		ТекстПредупреждения = НСтр(""ru='Не указана дата выписки!';uk='Не вказана дата виписки!'"");
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.Организация.Пустая() Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр(""ru='Не указана организация!';uk='Не вказана організація!'""));
		ТекстПредупреждения = НСтр(""ru='Не указана организация!';uk='Не вказана організація!'"");
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.БанковскийСчет.Пустая() Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр(""ru='Не указан расчетный счет!';uk='Не вказаний розрахунковий рахунок!'""));
		ТекстПредупреждения = НСтр(""ru='Не указан расчетный счет!';uk='Не вказаний розрахунковий рахунок!'"");
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ФорматОбмена) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр(""ru='Не указан формат обмена данными с системой Клиент-Банк!';uk='Не вказаний формат обміну даними із системою Клієнт-Банк!'""));
		ТекстПредупреждения = НСтр(""ru='Не указан формат обмена данными с системой Клиент-Банк!';uk='Не вказаний формат обміну даними із системою Клієнт-Банк!'"");
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ТипФайлаИмпорт) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр(""ru='Не указан тип файла для импорта с системы Клиент-Банк!';uk='Не вказаний тип файлу для імпорту із системи Клієнт-Банк!'""));
		ТекстПредупреждения = НСтр(""ru='Не указан тип файла для импорта с системы Клиент-Банк!';uk='Не вказаний тип файлу для імпорту із системи Клієнт-Банк!'"");
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // ПроверитьЗаполнениеПолейДляИмпорта()	

&НаСервере
Функция клПолучитьСтавкуНДС(СтавкаНДС) Экспорт

 	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		Возврат 20;
	КонецЕсли;

	Возврат 0;

КонецФункции // клПолучитьСтавкуНДС()

&НаСервере
Процедура ЗаполнитьРасшифровкуПлатежа(РасшифровкаПлатежа, Сумма, Строка, докОб, докОбМетаданные)
	
	//в таб части РасшифровкаПлатежа
	//^<< szewczuk 02.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 
		Если Строка.Расход > 0 Тогда
			Если Строка.ВидОперации = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
			 ИЛИ Строка.ВидОперации = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию	
			 ИЛИ Строка.ВидОперации = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
				
				РасшифровкаПлатежа.Сумма 			= Сумма;
				
			Иначе
				
				РасшифровкаПлатежа.Партнер = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Строка.Контрагент, ""Партнер"");
				РасшифровкаПлатежа.Подразделение = Строка.Подразделение;
				
				РасшифровкаПлатежа.Сумма 			= Сумма;
				
				Если Строка.ВидОперации = Перечисления.ХозяйственныеОперации.ПрочиеРасходы
				 ИЛИ Строка.ВидОперации = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
					РасшифровкаПлатежа.СтатьяРасходов = Строка.СтатьяДоходовИлиРасходов;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли Строка.Приход > 0 Тогда
			
			РасшифровкаПлатежа.Партнер = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Строка.Контрагент, ""Партнер"");
			РасшифровкаПлатежа.Сумма = Сумма;
			РасшифровкаПлатежа.СтатьяДоходов = Строка.СтатьяДоходовИлиРасходов;
			РасшифровкаПлатежа.Подразделение = Строка.Подразделение;
			
		КонецЕсли;
		
		//^<< szewczuk 14.11.2016
		РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств = Строка.СтатьяДДС;
		//^>> 
		
		//^<< szewczuk 02.11.2016
	ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда
		
		РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств = Строка.СтатьяДДС;
		РасшифровкаПлатежа.ДоговорКонтрагента			 = Строка.Договор;
		РасшифровкаПлатежа.СтавкаНДС					 = Строка.СтавкаНДС;
		РасшифровкаПлатежа.СуммаПлатежа 				 = Сумма;
		РасшифровкаПлатежа.СуммаВзаиморасчетов 			 = Сумма;
				
		ЗначениеСтавкиНДС     		= клПолучитьСтавкуНДС(РасшифровкаПлатежа.СтавкаНДС);
		РасшифровкаПлатежа.СуммаНДС	= РасшифровкаПлатежа.СуммаПлатежа*ЗначениеСтавкиНДС/(100+ЗначениеСтавкиНДС);
		
		//^<< szewczuk 11.11.2016
		СтруктураКурсаДокумента = клКурсДляВалюты(докОб.ВалютаДокумента, докОб.Дата);
		РасшифровкаПлатежа.КурсВзаиморасчетов 		= СтруктураКурсаДокумента.Курс;
		РасшифровкаПлатежа.КратностьВзаиморасчетов	= СтруктураКурсаДокумента.Кратность;
		//^>> 

		
		Если Строка.Расход > 0 Тогда
			
				РасшифровкаПлатежа.СчетУчетаРасчетовСКонтрагентом 	= ПланыСчетов.Хозрасчетный.НайтиПоКоду(Объект.НастройкаИсхСчетРасчетов);
				РасшифровкаПлатежа.СчетУчетаРасчетовПоАвансам	 	= ПланыСчетов.Хозрасчетный.НайтиПоКоду(Объект.НастройкаИсхСчетАвансов);

				РасшифровкаПлатежа.СчетУчетаНДС 					= ПланыСчетов.Хозрасчетный.НайтиПоКоду(""6432"");
				РасшифровкаПлатежа.СчетУчетаНДСПодтвержденный 		= ПланыСчетов.Хозрасчетный.НайтиПоКоду(""6431"");
				Попытка
					РасшифровкаПлатежа.НалоговоеНазначение 			= Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая;
				Исключение
				КонецПопытки;
			
			ИначеЕсли Строка.Приход > 0 Тогда
				
				РасшифровкаПлатежа.СчетУчетаРасчетовСКонтрагентом 	= ПланыСчетов.Хозрасчетный.НайтиПоКоду(Объект.НастройкаВхСчетРасчетов);
				РасшифровкаПлатежа.СчетУчетаРасчетовПоАвансам	 	= ПланыСчетов.Хозрасчетный.НайтиПоКоду(Объект.НастройкаВхСчетАвансов);
				
				РасшифровкаПлатежа.СчетУчетаНДС 					= ПланыСчетов.Хозрасчетный.НайтиПоКоду(""6442"");
				РасшифровкаПлатежа.СчетУчетаНДСПодтвержденный 		= ПланыСчетов.Хозрасчетный.НайтиПоКоду(""6441"");
				Попытка
					РасшифровкаПлатежа.НалоговоеНазначение 			= Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая;
				Исключение
				КонецПопытки;
		
		КонецЕсли;

	КонецЕсли; 
	//^>>

КонецПроцедуры	

&НаСервере
Процедура СформироватьВыпискиСервер()
	
	Для Каждого Строка Из Объект.тчИмпорт Цикл
		
		Если Строка.Флаг Тогда
			
			// надо импортировать эту строку 
			// статус ""СуществующийПлатеж"" не трогаем, остальные пытаемся записать и при 
			// установленных настройках провести
			Если Строка.Статус = СтатусыСтрокИмпорта.СуществующийПлатеж Тогда
				Продолжить;
			КонецЕсли;
			
			Если Строка.Статус = СтатусыСтрокИмпорта.СуществующийПлатежНеобходимоОплатить Тогда
				// для документа проставим флаг оплаты и дату оплаты, остальное - не трогаем
				докОб = Строка.Документ.ПолучитьОбъект();
				
				докОбМетаданные = докОб.Метаданные();
				
				докОб.Дата 			= Объект.ДатаВыписки;	
				
				// пытаемся записать
				Попытка
					докОб.Записать();
					// записали - поменяем сразу статус на существующий платеж
					//Строка.Статус = СтатусыСтрокИмпорта.СуществующийПлатеж;
				Исключение
					// 	
				КонецПопытки;
				
				// если установлена соответствующая настройка - пытаемся и провести
				Если Объект.НастройкаПытатьсяПроводитьСозданныеДокументы Тогда
					//^<< szewczuk 09.11.2016
					//^Попытка
					//^	докОб.Записать(РежимЗаписиДокумента.Проведение);
					//^Исключение
					//^ // 
					//^КонецПопытки;
					Если Строка.Статус = СтатусыСтрокИмпорта.НеобходимоЗаполнитьРеквизиты Тогда
					Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='Документ """"%1"""" не будет проведен! Не заполнены все необходимые реквизиты!';uk='Документ """"%1"""" не буде проведений! Не заповнені всі необхідні реквізити!'""), докОб));
					Иначе
						Попытка
							докОб.Записать(РежимЗаписиДокумента.Проведение);
						Исключение
						// 
					КонецПопытки;
					КонецЕсли;
					//^>> 
				КонецЕсли;
				
				Продолжить;
			КонецЕсли;
			
			НовыйДокумент = Истина;
			Если НЕ ЗначениеЗаполнено(Строка.Документ) Или НЕ ЗначениеЗаполнено(Строка.Документ.Номер) Тогда //вторая проверка в случае, если документ удалён физически
				// создаем новый документ
				
				ТипДокумента = Строка.ВидДокумента;
				Если ПустаяСтрока(ТипДокумента) Тогда
					Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='Для строки """"%1"""" не выбран вид документа!';uk='Для рядка """"%1"""" не вибраний вид документу!'""), Строка.НомерСтроки));
					Продолжить;
				КонецЕсли;	
				Док = Документы[ТипДокумента];
				
				докОб = Док.СоздатьДокумент();
			Иначе  
				// перезаписываем измененный старый документ
				докОб = Строка.Документ.ПолучитьОбъект();
				НовыйДокумент = Ложь;
			КонецЕсли;	
			
			
			// заполняем реквизиты документа
			
			докОбМетаданные = докОб.Метаданные();

			докОб.Контрагент 			= Строка.Контрагент;
			докОб.СуммаДокумента 		= ?(Строка.Приход > 0, Строка.Приход, Строка.Расход);
			
			//^<< szewczuk 03.11.2016
			//^докОб.БанковскийСчет		= Объект.БанковскийСчет;
			Если клЕстьРеквизит(""БанковскийСчет"",докОбМетаданные) Тогда
				докОб.БанковскийСчет  = Объект.БанковскийСчет;
			ИначеЕсли клЕстьРеквизит(""СчетОрганизации"",докОбМетаданные) Тогда	
				докОб.СчетОрганизации = Объект.БанковскийСчет;
			КонецЕсли;	
			//^>> 
			
			докОб.Организация			= Объект.Организация;
			
			//^<< szewczuk 03.11.2016
			//^докОб.БанковскийСчетКонтрагента		= Строка.СчетКонтрагента;
			Если клЕстьРеквизит(""БанковскийСчетКонтрагента"",докОбМетаданные) Тогда
				докОб.БанковскийСчетКонтрагента	= Строка.СчетКонтрагента;
			КонецЕсли;	

			Если клЕстьРеквизит(""СчетКонтрагента"",докОбМетаданные) Тогда
				докОб.СчетКонтрагента		= Строка.СчетКонтрагента;
			КонецЕсли;	
			//^>>
			
			//^<< szewczuk 04.11.2016
			Если клЕстьРеквизит(""СчетБанк"",докОбМетаданные) Тогда
				докОб.СчетБанк	= ПланыСчетов.Хозрасчетный.НайтиПоКоду(Объект.НастройкаСчетУчетаДС);
			КонецЕсли;
			//^>> 
			
			Если клЕстьРеквизит(""НомерПоручения"", докОбМетаданные) Тогда
				докОб.НомерПоручения 			= Строка.НомерПП;
			КонецЕсли;	
			
			Если клЕстьРеквизит(""НомерВходящегоДокумента"", докОбМетаданные) Тогда
				докОб.НомерВходящегоДокумента 	= Строка.НомерПП;
			КонецЕсли;      
			
			Если НовыйДокумент Тогда
				// дата для нового
				докОб.Дата = Объект.ДатаВыписки;
				// номер для нового 
				докОб.УстановитьНовыйНомер();
			КонецЕсли; 
			
			Если клЕстьРеквизит(""ДатаВходящегоДокумента"", докОбМетаданные) Тогда
				докОб.ДатаВходящегоДокумента 	= Объект.ДатаВыписки;	
			КонецЕсли;	
			
			// валюта - из счета 
			//^<< szewczuk 03.11.2016
			Если клЕстьРеквизит(""Валюта"", докОбМетаданные) Тогда
			//^>> 
				докОб.Валюта = Объект.БанковскийСчет.ВалютаДенежныхСредств;
			//^<< szewczuk 03.11.2016
			ИначеЕсли клЕстьРеквизит(""ВалютаДокумента"", докОбМетаданные) Тогда
				докОб.ВалютаДокумента = Объект.БанковскийСчет.ВалютаДенежныхСредств;
			КонецЕсли;
			//^>> 
			
			//в таб части РасшифровкаПлатежа
			докОб.РасшифровкаПлатежа.Очистить();
			
			РасшифровкаПлатежа = докОб.РасшифровкаПлатежа.Добавить();
			ЗаполнитьРасшифровкуПлатежа(РасшифровкаПлатежа, докОб.СуммаДокумента, Строка, докОб, докОбМетаданные);

			Если клЕстьРеквизит(""НазначениеПлатежа"",докОбМетаданные) Тогда
				докОб.НазначениеПлатежа		= Строка.Содержание;
			Иначе	
				докОб.Комментарий 			= Строка.Содержание;
			КонецЕсли;	
			
			// вид операции
			
			//^<< szewczuk 03.11.2016
			Если Объект.Конфигурация = ""УТ"" Тогда
			//^>> 	
				докОб.ТипПлатежногоДокумента = Строка.ТипДокумента;
				докОб.ХозяйственнаяОперация = Строка.ВидОперации;
			ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда
				докОб.ВидОперации = Строка.ВидОперации;
			КонецЕсли; 
			//^>> 
			
			// СтатьяДвиженияДенежныхСредств
			докОб.СтатьяДвиженияДенежныхСредств = Строка.СтатьяДДС;
			
			// пытаемся записать
			Попытка
				докОб.ОбменДанными.Загрузка = Истина; // в противном случае номер ПП перезаписывается
				докОб.Записать();
				докОб.ОбменДанными.Загрузка = Ложь; 
				// записали - поменяем сразу статус на существующий платеж
				//Строка.Статус = СтатусыСтрокИмпорта.СуществующийПлатеж;
				Строка.Статус = СтатусыСтрокИмпорта.СуществующийПлатежНеобходимоОплатить;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
			// если установлена соответствующая настройка - пытаемся и провести
			// но только если строка не со статусом - ""НеобходимоЗаполнитьРеквизиты"" 
			// так как они все равно не смогут провестися
			Если Объект.НастройкаПытатьсяПроводитьСозданныеДокументы Тогда
				Если Строка.Статус = СтатусыСтрокИмпорта.НеобходимоЗаполнитьРеквизиты Тогда
					Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='Документ """"%1"""" не будет проведен! Не заполнены все необходимые реквизиты!';uk='Документ """"%1"""" не буде проведений! Не заповнені всі необхідні реквізити!'""), докОб));
				Иначе
					Попытка
						//^<< szewczuk 14.11.2016
						//^докОб.Записать(РежимЗаписиДокумента.Проведение);
						Если докОб.ПроверитьЗаполнение() Тогда
							докОб.Записать(РежимЗаписиДокумента.Проведение);
						КонецЕсли;
						//^>> 
					Исключение
						// 
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
			// запишем в строку ссылку на созданный документ
			Строка.Документ = докОб.Ссылка;
			
		КонецЕсли;
	КонецЦикла;	
	
	// применим сортировку по настройкам
	СортировкаТчИмпорт();
	
КонецПроцедуры

&НаСервере
Процедура ДатаВыпискиПриИзмененииСервер()
	
	ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилищаОбработкиФормата);
	
	СформироватьИмяФайла(ВнешняяОбработкаОбъект, Истина, Ложь);
	
КонецПроцедуры

//^<< szewczuk 15.11.2016
&НаСервере
Процедура ОпределитьКонфигурацию()
	
	//определим текущую конфигурацию
	текКонфигурация = Метаданные.Имя;
	Если Найти(текКонфигурация, ""УправлениеТорговлей"") Тогда
		текКонфигурация = ""УТ"";
	ИначеЕсли Найти(текКонфигурация, ""БухгалтерияДляУкраины"") Тогда
		текКонфигурация = ""БУ"";
	ИначеЕсли Найти(текКонфигурация, ""УправлениеПредприятиемДляУкраины"") Тогда
		текКонфигурация = ""УТ"";
	Иначе
		текКонфигурация = """";
	КонецЕсли;
	
	//^<< szewczuk 31.10.2016
	Если текКонфигурация <> """" Тогда
		Конфигурация = текКонфигурация;
		Объект.Конфигурация = текКонфигурация;
		//^<< szewczuk 15.11.2016
		НазначитьТипыРеквизитовБанковскихСчетов();
		//^>> 
	Иначе 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ""Обработка """"Обмен данными с системами """"Клиент-Банк"""", 2.1"""" 
							|не предназначена для работы с ""+ Метаданные.Синоним;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	//^>> 
	
КонецПроцедуры
//^>> 

//^<< szewczuk 15.11.2016
&НаСервере
Процедура НазначитьТипыРеквизитовБанковскихСчетов()
	
	Если Объект.Конфигурация  =  ""УТ"" Тогда
		ОписаниеТипа = Новый ОписаниеТипов(""СправочникСсылка.БанковскиеСчетаОрганизаций"");
		Элементы.БанковскийСчет.ОграничениеТипа = ОписаниеТипа;
		Элементы.БанковскийСчет.ВыбиратьТип = Ложь;
	ИначеЕсли Объект.Конфигурация  = ""БУ"" Тогда
		ОписаниеТипа = Новый ОписаниеТипов(""СправочникСсылка.БанковскиеСчета"");
		Элементы.БанковскийСчет.ОграничениеТипа	 = ОписаниеТипа;
		Элементы.БанковскийСчет.ВыбиратьТип = Ложь;
	КонецЕсли;
	
КонецПроцедуры
//^>> 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ЗАКЛАДКИ ИМПОРТ

&НаКлиенте
Процедура ИмпортВыписки(Команда)
	
	Отказ = Ложь;
	ИмпортВыпискиКлиент(Отказ);
	
	Если НЕ Отказ Тогда
		Если РежимОтладки Тогда
			ИмпортВыпискиСервер(ИмяФайлаОбработкиФормата, АдресХранилищаФайла); // для файлового варианта и тестирования 
		Иначе	
			ИмпортВыпискиСервер(АдресХранилищаОбработкиФормата, АдресХранилищаФайла);
		КонецЕсли;	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура СформироватьВыписки(Команда)
	//СформироватьВыпискиКлиент();
	СформироватьВыпискиСервер();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИмпортПометитьВсе(Команда)
	Для Каждого СтрокаДокумента Из Объект.тчИмпорт Цикл
		СтрокаДокумента.Флаг = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИмпортСнятьПометкуСоВсех(Команда)
	Для Каждого СтрокаДокумента Из Объект.тчИмпорт Цикл
		СтрокаДокумента.Флаг = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаИмпортНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыбратьФайлДанных(Элемент, НСтр(""ru='Выберите файл для загрузки данных из клиента банка'""), ФильтрВыбораФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаИмпортОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайлДляПросмотра(Элемент, НСтр(""ru='Файл загрузки'""));
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыпискиПриИзменении(Элемент)
	Объект.тчИмпорт.Очистить();
	
	ДатаВыпискиПриИзмененииСервер();

	ПрочитатьСуществующиеПлатежи();
КонецПроцедуры

&НаКлиенте
Процедура ТипФайлаИмпортПриИзменении(Элемент)
	ТипФайлаИмпортПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура КодВБанкеИмпортПриИзменении(Элемент)
	СформироватьИмяФайла();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИмпортВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Поле.Имя = ""ТаблицаИмпортФлаг"" Тогда
						
		Элемент.ТекущиеДанные.Флаг = НЕ (Элемент.ТекущиеДанные.Флаг);
		
	ИначеЕсли Поле.Имя = ""ТаблицаИмпортСодержание"" Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='%1'""), Элемент.ТекущиеДанные.Содержание));
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='%1'""), Элемент.ТекущиеДанные.Содержание);
		ПоказатьПредупреждение(,ТекстПредупреждения,,);
		//^>> 		
		
				
	ИначеЕсли ЗначениеЗаполнено(Элемент.ТекущиеДанные.Документ) Тогда 
		
		Если (Поле.Имя = ""ТаблицаИмпортНомерСтроки""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортНомерПП""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортВидДокумента""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортТипДокумента""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортВидОперации""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортДокумент""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортОплачен""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортПриход""
		  ИЛИ Поле.Имя = ""ТаблицаИмпортРасход"")
		  ИЛИ (Поле.Имя = ""ТаблицаИмпортКонтрагент"" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Контрагент)) 
		  ИЛИ (Поле.Имя = ""ТаблицаИмпортСчетКонтрагента"" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.СчетКонтрагента)) 
		  ИЛИ (Поле.Имя = ""ТаблицаИмпортСтатьяДДС"" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.СтатьяДДС))
		  ИЛИ (Поле.Имя = ""ТаблицаИмпортСтатьяДоходовИлиРасходов"" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.СтатьяДоходовИлиРасходов))
		  ИЛИ (Поле.Имя = ""ТаблицаИмпортПодразделение"" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Подразделение))
		  Тогда
			
			СтандартнаяОбработка = Ложь;
				
			ОткрытьЗначение(Элемент.ТекущиеДанные.Документ);
		
		КонецЕсли
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИмпортПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Элемент.ТекущийЭлемент.Имя = ""ТаблицаИмпортВидОперации"" Тогда
		
		ТекущиеДанные = Элементы.ТаблицаИмпорт.ТекущиеДанные;
		ЗаполнитьСписокВыбораВидовОпераций(ТекущиеДанные.ВидДокумента, Элементы.ТаблицаИмпортВидОперации);
		
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = ""ТаблицаИмпортВидДокумента"" Тогда
		
		ТекущиеДанные = Элементы.ТаблицаИмпорт.ТекущиеДанные;
		ЗаполнитьСписокВыбораВидовДокумента(ТекущиеДанные.Приход, ТекущиеДанные.Расход, Элементы.ТаблицаИмпортВидДокумента);
		
	КонецЕсли;

	ТекущиеДанные = Элементы.ТаблицаИмпорт.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
		
		ТекущиеДанные.Контрагент = ПредопределенноеЗначение(""Справочник.Контрагенты.ПустаяСсылка"");
		//^<< szewczuk 02.11.2016
		Если Объект.Конфигурация = ""УТ"" Тогда
		//^>> 
			ТекущиеДанные.СчетКонтрагента = ПредопределенноеЗначение(""Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка"");
		//^<< szewczuk 02.11.2016
		ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда 
			ТекущиеДанные.СчетКонтрагента = ПредопределенноеЗначение(""Справочник.БанковскиеСчета.ПустаяСсылка"");
		КонецЕсли; 
		//^>>
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИмпортКонтрагентПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТаблицаИмпорт.ТекущиеДанные;
	//^<< szewczuk 02.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 
		ТекущиеДанные.СчетКонтрагента = ПредопределенноеЗначение(""Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка"");
	//^<< szewczuk 02.11.2016
	ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда 
		ТекущиеДанные.СчетКонтрагента = ПредопределенноеЗначение(""Справочник.БанковскиеСчета.ПустаяСсылка"");
	КонецЕсли; 
	//^>>
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИмпортВидОперацииПриИзменении(Элемент)
	Элементы.ТаблицаИмпорт.ТекущиеДанные.СтатьяДДС = ПолучитьСтатьюДДС(Элементы.ТаблицаИмпорт.ТекущиеДанные.ВидОперации);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Закладка ""Экспорт платёжных поручений""

&НаКлиенте
// Экспорт платежных поручений 
//
// Параметры: нет
//
//
Функция ЭкспортППКлиент()
	
	// 1. Проверяем, что выбрано имя файла
	// ФормаОбработкиФормата определена
	// дата, организация, расчетный счет, формат обмена, тип файла
	Возврат ПроверитьЗаполнениеПолейДляЭкспорта();
	
КонецФункции // ЭкспортПлатежныхПоручений()

&НаСервере
// Экспорт платежных поручений 
//
// Параметры: нет
//
//
Функция ЭкспортППСервер()
	
	Если НЕ ТекущийФайлФорматаОбменаСуществует Тогда
		Сообщить(""Файл формата "" + Объект.ФорматОбмена + "" не найден"");
		Возврат Неопределено;
	КонецЕсли;	
	
	ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилищаОбработкиФормата);
	
	// 1.1 Вызываем функцию СохранитьЗначения для формата
	ПараметрыВызова = Новый Структура;
	ПараметрыВызова.Вставить(""Режим"", 			""Экспорт"");
	ПараметрыВызова.Вставить(""Организация"", 	Объект.Организация);
	ПараметрыВызова.Вставить(""ТекущееИмяФайла"",	Объект.ИмяФайлаЭкспорт);
	ПараметрыВызова.Вставить(""КодВБанке"", 		Объект.КодВБанке); // если есть 
	ПараметрыВызова.Вставить(""ТекущийТипФайла"", Объект.ТипФайлаЭкспорт);
	ПараметрыВызова.Вставить(""КодировкаФайла"", 	Объект.КодировкаФайлаЭкспорт);

	ВнешняяОбработкаОбъект.СохранитьНастройки(ПараметрыВызова);
	
	// 2. Формируем параметры для вызова функции экспорта формы обработки формата
	
	// запрос к обработке формата на экспорт
	ПараметрыВызова = Новый Структура;
	
	ПараметрыВызова.Вставить(""НашМФО"", СокрЛП(Объект.БанковскийСчет.Банк.Код));
	ПараметрыВызова.Вставить(""НашСчет"", СокрЛП(Объект.БанковскийСчет.НомерСчета));
	
	ПараметрыВызова.Вставить(""НашОКПО"", Объект.Организация.КодПоЕДРПОУ);
	
	Если Объект.НастройкаФормироватьКраткоеНаименованиеОрганизации Тогда
		ПараметрыВызова.Вставить(""НашаФирма"", СокрЛП(Объект.Организация.Наименование));
	Иначе	
		ПараметрыВызова.Вставить(""НашаФирма"", СокрЛП(Объект.Организация.НаименованиеПолное));
	КонецЕсли;
	//^<< szewczuk 04.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
	//^>> 	
		ПараметрыВызова.Вставить(""НашаФирмаСокр"", СокрЛП(Объект.Организация.НаименованиеСокращенное));
	КонецЕсли; 
	//^>> 
	 
	
	ПараметрыВызова.Вставить(""НашБанк"", СокрЛП(Объект.БанковскийСчет.Наименование));
	
	ИмяФайла = КаталогВременныхФайлов() + ""KBExchEx."" + Объект.ТипФайлаЭкспорт; 
	
	ПараметрыВызова.Вставить(""ИмяФайла"", ИмяФайла);
	ПараметрыВызова.Вставить(""ТипФайла"", Объект.ТипФайлаЭкспорт);
	
	ПараметрыВызова.Вставить(""КодировкаФайла"", Объект.КодировкаФайлаЭкспорт);
	
	тзПлатежныеПоручения = Новый ТаблицаЗначений;
	тзПлатежныеПоручения.Колонки.Добавить(""НомерПП"");
	тзПлатежныеПоручения.Колонки.Добавить(""ДатаПП"");
	тзПлатежныеПоручения.Колонки.Добавить(""Контрагент"");
	тзПлатежныеПоручения.Колонки.Добавить(""МФО"");
	тзПлатежныеПоручения.Колонки.Добавить(""Счет"");
	тзПлатежныеПоручения.Колонки.Добавить(""ОКПО"");
	тзПлатежныеПоручения.Колонки.Добавить(""Сумма"");
	тзПлатежныеПоручения.Колонки.Добавить(""Содержание"");
	тзПлатежныеПоручения.Колонки.Добавить(""Банк"");
	
	тзПлатежныеПоручения.Колонки.Добавить(""Валюта"");
	тзПлатежныеПоручения.Колонки.Добавить(""ВалСумма"");
	тзПлатежныеПоручения.Колонки.Добавить(""ПроцентНДС"");
	тзПлатежныеПоручения.Колонки.Добавить(""СуммаНДС"");

	ПерекодировкаЭкспорта = ВнешняяОбработкаОбъект.ПерекодировкаЭкспорта();	
	
	Для Каждого Строка Из Объект.тчЭкспорт Цикл
		
		Если НЕ Строка.Флаг Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтрока = тзПлатежныеПоручения.Добавить();
		НовСтрока.НомерПП 		= Строка.НомерПП;
		НовСтрока.ДатаПП 		= Строка.ДатаПП;
		
		// ""Полное наименование"" контрагента
		Если ТипЗнч(Строка.Контрагент) = Тип(""СправочникСсылка.Контрагенты"") Тогда
			Если Объект.НастройкаФормироватьКраткоеНаименованиеКонтрагента Тогда
				НовСтрока.Контрагент 	= ?(ПерекодировкаЭкспорта, ЗаменитьСимволыНазад(Строка.Контрагент.Наименование), Строка.Контрагент.Наименование);
			Иначе	
				НовСтрока.Контрагент 	= ?(ПерекодировкаЭкспорта, ЗаменитьСимволыНазад(Строка.Контрагент.НаименованиеПолное), Строка.Контрагент.НаименованиеПолное);
			КонецЕсли;	
		Иначе
			Если Объект.НастройкаФормироватьКраткоеНаименованиеОрганизации Тогда
				НовСтрока.Контрагент 	= ?(ПерекодировкаЭкспорта, ЗаменитьСимволыНазад(Строка.Контрагент.Наименование), Строка.Контрагент.Наименование);
			Иначе	
				НовСтрока.Контрагент 	= ?(ПерекодировкаЭкспорта, ЗаменитьСимволыНазад(Строка.Контрагент.НаименованиеПолное), Строка.Контрагент.НаименованиеПолное);
			КонецЕсли;	
		КонецЕсли;	
 
		НовСтрока.МФО 			= Строка.СчетКонтрагента.Банк.Код;
		НовСтрока.Счет 			= Строка.СчетКонтрагента.НомерСчета;
		
		НовСтрока.ОКПО 			= Строка.Контрагент.КодПоЕДРПОУ;
			
			
		НовСтрока.Сумма 		= Строка.Сумма;
		НовСтрока.Содержание 	= ?(ПерекодировкаЭкспорта, ЗаменитьСимволыНазад(Строка.Содержание), Строка.Содержание);
		Банк = Строка.СчетКонтрагента.Банк.Наименование;
		НовСтрока.Банк 			= ?(ПерекодировкаЭкспорта, ЗаменитьСимволыНазад(Банк), Банк);
		//	Код валюты (Валюта) – строка (3)
		НовСтрока.Валюта		= Строка.СчетКонтрагента.ВалютаДенежныхСредств.Код;
		//	Сумма в валюте (ВалСумма) - число
		НовСтрока.ВалСумма		= 0;
		//	Процент НДС (ПроцентНДС) – строка (например «0», «20»)
		НовСтрока.ПроцентНДС	= ?(Строка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20, ""20"",""0"");
		СтавкаНДС = ?(Строка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20, 20, 0);
		//	Сумма НДС (СуммаНДС) – число
		НовСтрока.СуммаНДС		= Строка.Сумма * 100 / (100 + СтавкаНДС);
		
	КонецЦикла;
	
	ПараметрыВызова.Вставить(""тзПлатежныеПоручения"", тзПлатежныеПоручения);
	
	Попытка
		Рез = ВнешняяОбработкаОбъект.ЭкспортПлатежныхПоручений(ПараметрыВызова);
	Исключение
		Сообщить(""Ошибка экспорта: "" + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки; 
	// рез - либо истина, либо ложь
	
	// Если произошла ошибка
	Если Рез <> Неопределено Тогда
		Если ТипЗнч(Рез) = Тип(""Строка"") И ЗначениеЗаполнено(Рез) Тогда
			Сообщить(Рез);
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
	
	АдресХранилищаФайлаЭкспорт = """";
	
	Если Рез Тогда
		
		ХранилищеФайла = Новый ДвоичныеДанные(ИмяФайла);
		АдресХранилищаФайлаЭкспорт = ПоместитьВоВременноеХранилище(ХранилищеФайла);
		
		//Предупреждение(НСтр(""ru='Экспорт платежных документов успешно завершен';uk='Експорт платіжних доручень успішно завершено'"")); 
		Сообщить(НСтр(""ru='Экспорт платежных документов успешно завершен';uk='Експорт платіжних доручень успішно завершено'"")); 
	КонецЕсли; 
	
	Возврат Рез;
	
КонецФункции // ЭкспортПлатежныхПоручений()

// Проверяем, что выбраны организация, счет, дата выписки не пустая
//
// Параметры: нет
//
// Возвращаем:
//		Истина - заполнены поля
//		Ложь - иначе
//
Функция ПроверитьЗаполнениеПолейЭкспорт()
	
	Если Объект.ДатаППС = Неопределено Тогда
		Сообщить(НСтр(""ru='Не указана дата начала периода!';uk='Не вказана дата початку періоду!'""));
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.ДатаПППо = Неопределено Тогда
		Сообщить(НСтр(""ru='Не указана дата конца периода!';uk='Не вказана дата кінця періоду!'""));
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.Организация.Пустая() Тогда
		Сообщить(НСтр(""ru='Не указана организация!';uk='Не вказана організація!'""));
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.БанковскийСчет.Пустая() Тогда
		Сообщить(НСтр(""ru='Не указан расчетный счет!';uk='Не вказаний розрахунковий рахунок!'""));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // ПроверитьЗаполнениеПолейЭкспорт()	

// Читает существующие платежные поручения
//
// Параметры:
// 		Нет
//
Процедура ПрочитатьСуществующиеПП()
	
	// Проверить, что выбраны организация, счет, дата выписки не пустая
	Если НЕ ПроверитьЗаполнениеПолейЭкспорт() Тогда
		Возврат;
	КонецЕсли;	
	
	//Запрос к документам: ""СписаниеБезналичныхДенежныхСредств""
		Запрос = Новый Запрос;
	
		Запрос.УстановитьПараметр(""ДатаС"", НачалоДня(Объект.ДатаППС));	
		Запрос.УстановитьПараметр(""ДатаПо"", КонецДня(Объект.ДатаПППо));
		Запрос.УстановитьПараметр(""Организация"", Объект.Организация);
		Запрос.УстановитьПараметр(""БанковскийСчет"", Объект.БанковскийСчет);
		

	//^<< szewczuk 01.11.2016
	Если Объект.Конфигурация = ""УТ"" Тогда
		
		ТекстЗапроса = 
		""ВЫБРАТЬ
	       |	СписаниеБезналичныхДенежныхСредств.Ссылка,
	       |	СписаниеБезналичныхДенежныхСредств.Дата КАК ДатаПП,
	       |	СписаниеБезналичныхДенежныхСредств.ХозяйственнаяОперация,
	       |	СписаниеБезналичныхДенежныхСредств.ТипПлатежногоДокумента,
	       |	ВЫБОР
	       |		КОГДА СписаниеБезналичныхДенежныхСредств.ХозяйственнаяОперация В (
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
		   |				)
	       |			ТОГДА СписаниеБезналичныхДенежныхСредств.Организация
	       |		ИНАЧЕ СписаниеБезналичныхДенежныхСредств.Контрагент
	       |	КОНЕЦ КАК Контрагент,
	       |	СписаниеБезналичныхДенежныхСредств.СуммаДокумента,
	       |	ВЫБОР
	       |		КОГДА СписаниеБезналичныхДенежныхСредств.ХозяйственнаяОперация В (
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
		   |				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
		   |				)
	       |			ТОГДА СписаниеБезналичныхДенежныхСредств.БанковскийСчетПолучатель
	       |		ИНАЧЕ СписаниеБезналичныхДенежныхСредств.БанковскийСчетКонтрагента
	       |	КОНЕЦ КАК БанковскийСчетКонтрагента,
	       |	ВЫБОР
	       |		КОГДА СписаниеБезналичныхДенежныхСредств.ТипПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение)
	       |			ТОГДА СписаниеБезналичныхДенежныхСредств.НомерПоручения
	       |		ИНАЧЕ СписаниеБезналичныхДенежныхСредств.НомерВходящегоДокумента
	       |	КОНЕЦ КАК НомерПП,
	       |	СписаниеБезналичныхДенежныхСредств.НазначениеПлатежа КАК НазначениеПлатежа,
	       |	СписаниеБезналичныхДенежныхСредств.СтатьяДвиженияДенежныхСредств
	       |ИЗ
	       |	Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваКСписаниюБезналичные.Остатки КАК ДенежныеСредстваКСписаниюБезналичныеОстатки
	       |		ПО (ДенежныеСредстваКСписаниюБезналичныеОстатки.Документ = СписаниеБезналичныхДенежныхСредств.Ссылка)
	       |			И (ДенежныеСредстваКСписаниюБезналичныеОстатки.СуммаОстаток < 0)
	       |ГДЕ
	       |	СписаниеБезналичныхДенежныхСредств.Дата МЕЖДУ &ДатаС И &ДатаПо
	       |	И СписаниеБезналичныхДенежныхСредств.Организация = &Организация
	       |	И СписаниеБезналичныхДенежныхСредств.БанковскийСчет = &БанковскийСчет
	       |	И СписаниеБезналичныхДенежныхСредств.ПометкаУдаления = ЛОЖЬ"";
			
	  ИначеЕсли Объект.Конфигурация = ""БУ"" Тогда 
		ТекстЗапроса =   
		""ВЫБРАТЬ
		|	СписаниеСРасчетногоСчета.Ссылка,
		|	СписаниеСРасчетногоСчета.Дата КАК ДатаПП,
		|	СписаниеСРасчетногоСчета.ВидОперации КАК ХозОперация,
		|	СписаниеСРасчетногоСчета.Контрагент,
		|	СписаниеСРасчетногоСчета.СуммаДокумента,
		|	СписаниеСРасчетногоСчета.СчетКонтрагента КАК БанковскийСчетКонтрагента,
		|	СписаниеСРасчетногоСчета.НомерВходящегоДокумента КАК НомерПП,
		|	СписаниеСРасчетногоСчета.НазначениеПлатежа
		|ИЗ
		|	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
		|ГДЕ
		|	СписаниеСРасчетногоСчета.Дата МЕЖДУ &ДатаС И &ДатаПо
		|	И СписаниеСРасчетногоСчета.Организация = &Организация
		|	И СписаниеСРасчетногоСчета.СчетОрганизации = &БанковскийСчет
		|	И СписаниеСРасчетногоСчета.ПометкаУдаления = ЛОЖЬ""
	КонецЕсли;
	//^>> 
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Объект.тчЭкспорт.Очистить();
	
	ВидДокумента = ""СписаниеБезналичныхДенежныхСредств"";
	
	Пока Выборка.Следующий() Цикл
		
		//Если Выборка.Ссылка.РасшифровкаПлатежа.Количество() = 0 Тогда
		//	Продолжить;
		//КонецЕсли;	
		
		НоваяСтрока = Объект.тчЭкспорт.Добавить();
		
		НоваяСтрока.ДатаПП	 		= Выборка.ДатаПП;
		НоваяСтрока.Контрагент 		= Выборка.Контрагент;
		НоваяСтрока.СчетКонтрагента = Выборка.БанковскийСчетКонтрагента;
			
		НоваяСтрока.НомерПП 		= Выборка.НомерПП;
		
		НоваяСтрока.СтавкаНДС	 	= ПолучитьНастройкуЗаполнения(""СтавкаНДС"", ВидДокумента);
			
		НоваяСтрока.Сумма	      	= Выборка.СуммаДокумента;
		
		НоваяСтрока.Содержание      = СокрЛП(СтрЗаменить(Выборка.НазначениеПлатежа,Символы.ПС,"" ""));
		
		НоваяСтрока.Документ		= Выборка.Ссылка;
		
		НоваяСтрока.Флаг = Истина;
		
	КонецЦикла;
	

КонецПроцедуры // ПрочитатьСуществующиеПП()

&НаСервере
Процедура ТипФайлаЭкспортПриИзмененииСервер()
	
	ВнешняяОбработкаОбъект = ПодключитьВнешнююОбработку(АдресХранилищаОбработкиФормата);
	
	СформироватьФильтрВыбораФайла(ВнешняяОбработкаОбъект, Ложь, Истина);
	СформироватьИмяФайла(ВнешняяОбработкаОбъект, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
// Проверяет заполнение всех полей для экпорта платежных поручений
//
// Проверяем, что выбрано имя файла, файл существует, ФормаОбработкиФормата определена
// дата, организация, расчетный счет, формат обмена, тип файла// Параметры: нет
//
// Параметры: нет
//
// Возвращаем:
//		Истина - заполнены все поля
//		Ложь - иначе
//
Функция ПроверитьЗаполнениеПолейДляЭкспорта()
	
	Если ПустаяСтрока(Объект.ИмяФайлаЭкспорт) Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не указано имя файла для экспорта платежных поручений!';uk='Не вказано ім''я файлу для експорту платіжних доручень!'""));
		ТекстПредупреждения = НСтр(""ru='Не указано имя файла для экспорта платежных поручений!';uk='Не вказано ім''я файлу для експорту платіжних доручень!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,);  
		//^>> 
		
		Возврат Ложь;
	КонецЕсли; 
	
	Если Объект.ДатаППС = '00010101000000' Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не указана дата начала периода!';uk='Не вказана дата початку періоду!'""));
		ТекстПредупреждения = НСтр(""ru='Не указана дата начала периода!';uk='Не вказана дата початку періоду!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,); 
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.ДатаПППо = '00010101000000' Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не указана дата конца периода!';uk='Не вказана дата кінця періоду!'""));
		 ТекстПредупреждения = НСтр(""ru='Не указана дата конца периода!';uk='Не вказана дата кінця періоду!'"");	
		 ПоказатьПредупреждение(,ТекстПредупреждения,,); 
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.Организация.Пустая() Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не указана организация!';uk='Не вказана організація!'""));
		 ТекстПредупреждения = НСтр(""ru='Не указана организация!';uk='Не вказана організація!'"");	
		 ПоказатьПредупреждение(,ТекстПредупреждения,,); 
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если Объект.БанковскийСчет.Пустая() Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не указан расчетный счет!';uk='Не вказаний розрахунковий рахунок!'""));
		ТекстПредупреждения = НСтр(""ru='Не указан расчетный счет!';uk='Не вказаний розрахунковий рахунок!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,); 
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ФорматОбмена) Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не указан формат обмена данными с системой Клиент-Банк!';uk='Не вказаний формат обміну даними із системою Клієнт-Банк!'""));
		ТекстПредупреждения = НСтр(""ru='Не указан формат обмена данными с системой Клиент-Банк!';uk='Не вказаний формат обміну даними із системою Клієнт-Банк!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,); 
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ТипФайлаЭкспорт) Тогда
		//^<< szewczuk 03.11.2016
		//^Предупреждение(НСтр(""ru='Не указан тип файла для экспорта в систему Клиент-Банк!';uk='Не вказаний тип файлу для експорту в систему Клієнт-Банк!'""));
		ТекстПредупреждения = НСтр(""ru='Не указан тип файла для экспорта в систему Клиент-Банк!';uk='Не вказаний тип файлу для експорту в систему Клієнт-Банк!'"");	
		ПоказатьПредупреждение(,ТекстПредупреждения,,); 
		//^>> 
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // ПроверитьЗаполнениеПолейДляЭкспорта()	

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ЗАКЛАДКИ ЭКСПОРТ

&НаКлиенте
Процедура ЭкспортПП(Команда)

	Рез = ЭкспортППКлиент();
	Если Рез = Истина Тогда
		Рез = ЭкспортППСервер();
	КонецЕсли;	
	
	Если Рез = Истина И ЗначениеЗаполнено(АдресХранилищаФайлаЭкспорт) Тогда
		ПолучитьФайл(АдресХранилищаФайлаЭкспорт, Объект.ИмяФайлаЭкспорт, Ложь);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьПлатежныеПоручения(Команда)
	ПрочитатьСуществующиеПП();	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЭкспортПометитьВсе(Команда)
	Для Каждого СтрокаДокумента Из Объект.тчЭкспорт Цикл
		СтрокаДокумента.Флаг = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЭкспортСнятьПометкуСоВсех(Команда)
	Для Каждого СтрокаДокумента Из Объект.тчЭкспорт Цикл
		СтрокаДокумента.Флаг = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДатаППСПриИзменении(Элемент)
	// перечитываем платежки
	ПрочитатьСуществующиеПП();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПППоПриИзменении(Элемент)
	// перечитываем платежки
	ПрочитатьСуществующиеПП();
КонецПроцедуры

&НаКлиенте
Процедура ТипФайлаЭкспортПриИзменении(Элемент)
	ТипФайлаЭкспортПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура КодВБанкеЭкпортПриИзменении(Элемент)
	СформироватьИмяФайла();
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаЭкспортОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайлДляПросмотра(Элемент, НСтр(""ru='Файл выгрузки'""));
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаЭкспортНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьФайлДанных(Элемент, НСтр(""ru='Выберите файл для выгрузки данных из клиента банка'""), ФильтрВыбораФайлаЭкспорт);
КонецПроцедуры

&НаКлиенте
Процедура тчЭкспортПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура тчЭкспортВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Поле.Имя = ""тчЭкспортФлаг"" Тогда
						
		Элемент.ТекущиеДанные.Флаг = НЕ (Элемент.ТекущиеДанные.Флаг);
		
	ИначеЕсли Поле.Имя = ""тчЭкспортСтавкаНДС"" Тогда
		
		// даем отредактировать
				
	ИначеЕсли ЗначениеЗаполнено(Элемент.ТекущиеДанные.Документ) Тогда 
		
		СтандартнаяОбработка = Ложь;
			
		ОткрытьЗначение(Элемент.ТекущиеДанные.Документ);
		
	КонецЕсли;
КонецПроцедуры
",
{4,16,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",49abaa27-9762-4995-bb26-43d417bc1596}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,30,
{1,
{0,036b4718-55a7-4f40-bf90-543fde7b236f}
},
{1,
{0,036d5e84-17c3-4350-9c13-57362d0fdb42}
},
{1,
{0,041be75f-f192-49ff-b122-dc84078de33b}
},
{1,
{0,068872bf-abc8-472c-854d-997497c4e074}
},
{1,
{0,0a2fa96c-a898-4797-ac56-a214995c4d34}
},
{1,
{0,0f20b00d-24f8-4774-9bfc-8953d64e2595}
},
{1,
{0,14a2313e-439f-4039-bf12-089496225c7e}
},
{1,
{0,23cc1e7a-326c-45ca-8049-469685086480}
},
{1,
{0,40485bad-2418-482d-a570-58bb03ad20a5}
},
{1,
{0,468fd598-136c-49de-8bb9-5282dd8e48ee}
},
{1,
{0,4b86d9c4-0815-4c22-9422-ac5294ba5f21}
},
{1,
{0,4dac58c2-db58-4193-80bd-1ab8d7a7d853}
},
{1,
{0,5435099f-78b0-488f-8576-f59e1013494a}
},
{1,
{0,56fd7780-b001-4d5a-842d-5c8e0e4f51dc}
},
{1,
{0,61bef069-5190-4091-affd-b4364ba508bd}
},
{1,
{0,684b8be2-893c-484e-b25f-324ef05dd660}
},
{1,
{0,8c6fad4d-877c-4edc-8a05-b70e197bf36c}
},
{1,
{0,93b615f9-e4ca-46db-928c-7879a733504e}
},
{1,
{0,96b0fa8e-337e-4a67-b6bf-052986bde0ba}
},
{1,
{0,99847992-bd62-4c1b-b402-2ab9eb6884bb}
},
{1,
{0,9cea213b-74d6-4e38-b78d-a97553bb23da}
},
{1,
{0,9f8c778b-af56-4148-b7e8-d56e1c773757}
},
{1,
{0,aba1718e-c467-4853-b493-ddfebdf5ef31}
},
{1,
{0,b4517483-ee81-4a31-a868-c541b096242e}
},
{1,
{0,b89e4a53-ae14-447f-a12a-2a01450b9ad8}
},
{1,
{0,cc10fda5-33c2-44c7-86da-05fc1039c3f0}
},
{1,
{0,d8295460-e936-4116-918f-4d9272182348}
},
{1,
{0,e530b291-45c3-4ee0-b599-b6cc8dfa59e9}
},
{1,
{0,f29fd519-7d7a-429e-bd4a-a3f3ceb0beb0}
},
{1,
{0,fd62986b-1e40-4462-b942-2ec6b2ab3f9a}
}
},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"МетаПуть",
{1,2,
{"ru","Мета путь"},
{"uk","Мета шлях"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ИмяФайлаОбработкиФормата",
{1,2,
{"ru","Имя файла обработки формата"},
{"uk","Ім'я файлу формату обробки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"АдресХранилищаОбработкиФормата",
{1,2,
{"ru","Адрес хранилища обработки формата"},
{"uk","Адреса сховища обробки формату"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ФильтрВыбораФайла",
{1,2,
{"ru","Фильтр выбора файла"},
{"uk","Фільтр вибору файлу"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"СтатусыСтрокИмпорта",
{1,2,
{"ru","Статусы строк импорта"},
{"uk","Статуси рядків імпорту"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"сооФорматИмяФайлаОбработкиФормата",
{1,2,
{"ru","Соо формат имя файла обработки формата"},
{"uk","Соо формат ім'я файлу формату обробки"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ТекущийФайлФорматаОбменаСуществует",
{1,2,
{"ru","Текущий файл формата обмена существует"},
{"uk","Поточний файл формату обміну існує"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"сооМФОФормат",
{1,2,
{"ru","Соо МФОФормат"},
{"uk","Соо МФОФормат"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{11},0,"АдресХранилищаФайла",
{1,2,
{"ru","Адрес хранилища файла"},
{"uk","Адреса сховища файлу"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{12},0,"СокращенияТиповОрганизаций",
{1,2,
{"ru","Сокращения типов организаций"},
{"uk","Скорочення типів організацій"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"АдресХранилищаФайлаЭкспорт",
{1,2,
{"ru","Адрес хранилища файла экспорт"},
{"uk","Адреса сховища файлу експорт"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{13},0,"ФильтрВыбораФайлаЭкспорт",
{1,2,
{"ru","Фильтр выбора файла экспорт"},
{"uk","Фільтр вибору файлу експорт"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{14},0,"РежимОтладки",
{1,2,
{"ru","Режим отладки (файловая база)"},
{"uk","Режим відладки (файлова база)"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{15},0,"ИнфоБанковскогоСчета",
{1,2,
{"ru","Инфо банковского счета"},
{"uk","Інфо банківського рахунку"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{16},0,"Конфигурация",
{1,2,
{"ru","Конфигурация"},
{"uk","Конфігурація"}
},
{"Pattern",
{"S",3,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,4,"Объект.тчИмпорт.Статус","Объект.тчИмпорт.Статус",
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,c7891498-254b-4bd3-93ea-5cedfdfea307}
},
{2,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1}
},"Объект.тчИмпорт.Приход","Объект.тчИмпорт.Приход",
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,afea56c0-00ea-4896-b498-5a18ab049083}
},
{2,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1}
},"Объект.тчИмпорт.Расход","Объект.тчИмпорт.Расход",
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,3d11082f-2318-43b2-81ce-0225d68a6cf1}
},
{2,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1}
},"Объект.тчИмпорт.Документ","Объект.тчИмпорт.Документ",
{3,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1},
{0,188abc3e-28f1-4722-8cea-1f4ec3b78f5a}
},
{2,
{1},
{0,6bbb865b-5c65-4f16-8c38-c6cbcb494da1}
},
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxjb25kaXRp
b25hbEFwcGVhcmFuY2U+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCi0LDQsdC70LjRhtCw0JjQvNC/0L7RgNGC0KHR
gtCw0YLRg9GBPC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4N
CgkJCTxmaWx0ZXI+DQoJCQkJPGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Db21w
YXJpc29uIj4NCgkJCQkJPGxlZnQgeHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0J7Q
sdGK0LXQutGCLtGC0YfQmNC80L/QvtGA0YIu0KHRgtCw0YLRg9GBPC9sZWZ0Pg0K
CQkJCQk8Y29tcGFyaXNvblR5cGU+Tm90SW5MaXN0PC9jb21wYXJpc29uVHlwZT4N
CgkJCQkJPHJpZ2h0IHhzaTp0eXBlPSJ4czpkZWNpbWFsIj4yPC9yaWdodD4NCgkJ
CQkJPHJpZ2h0IHhzaTp0eXBlPSJ4czpkZWNpbWFsIj4zPC9yaWdodD4NCgkJCQk8
L2l0ZW0+DQoJCQk8L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Nj
b3I6aXRlbSB4c2k6dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJ
CTxkY3Njb3I6cGFyYW1ldGVyPtCm0LLQtdGC0KTQvtC90LA8L2Rjc2NvcjpwYXJh
bWV0ZXI+DQoJCQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Q29sb3Ii
PndlYjpHcmF5PC9kY3Njb3I6dmFsdWU+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJ
CQk8ZGNzY29yOml0ZW0geHNpOnR5cGU9IlNldHRpbmdzUGFyYW1ldGVyVmFsdWUi
Pg0KCQkJCQk8ZGNzY29yOnBhcmFtZXRlcj7QotC10LrRgdGCPC9kY3Njb3I6cGFy
YW1ldGVyPg0KCQkJCQk8ZGNzY29yOnZhbHVlIHhzaTp0eXBlPSJ4czpzdHJpbmci
Lz4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0
ZW0+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8aXRlbT4NCgkJCQkJ
PGZpZWxkPtCi0LDQsdC70LjRhtCw0JjQvNC/0L7RgNGC0KHRgtCw0YLRg9GBPC9m
aWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4NCgkJCTxmaWx0ZXI+
DQoJCQkJPGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Db21wYXJpc29uIj4NCgkJ
CQkJPGxlZnQgeHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtGC
0YfQmNC80L/QvtGA0YIu0KHRgtCw0YLRg9GBPC9sZWZ0Pg0KCQkJCQk8Y29tcGFy
aXNvblR5cGU+RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQk8cmlnaHQgeHNp
OnR5cGU9InhzOmRlY2ltYWwiPjI8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4NCgkJCTwv
ZmlsdGVyPg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0
eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJh
bWV0ZXI+0KbQstC10YLQpNC+0L3QsDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJ
PGRjc2Nvcjp2YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+d2ViOk1lZGl1bUdy
ZWVuPC9kY3Njb3I6dmFsdWU+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJCQk8ZGNz
Y29yOml0ZW0geHNpOnR5cGU9IlNldHRpbmdzUGFyYW1ldGVyVmFsdWUiPg0KCQkJ
CQk8ZGNzY29yOnBhcmFtZXRlcj7QotC10LrRgdGCPC9kY3Njb3I6cGFyYW1ldGVy
Pg0KCQkJCQk8ZGNzY29yOnZhbHVlIHhzaTp0eXBlPSJ4czpzdHJpbmciLz4NCgkJ
CQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJ
CTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxk
PtCi0LDQsdC70LjRhtCw0JjQvNC/0L7RgNGC0KHRgtCw0YLRg9GBPC9maWVsZD4N
CgkJCQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4NCgkJCTxmaWx0ZXI+DQoJCQkJ
PGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Db21wYXJpc29uIj4NCgkJCQkJPGxl
ZnQgeHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtGC0YfQmNC8
0L/QvtGA0YIu0KHRgtCw0YLRg9GBPC9sZWZ0Pg0KCQkJCQk8Y29tcGFyaXNvblR5
cGU+RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQk8cmlnaHQgeHNpOnR5cGU9
InhzOmRlY2ltYWwiPjM8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVy
Pg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0eXBlPSJT
ZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+
0KbQstC10YLQpNC+0L3QsDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nv
cjp2YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+d2ViOlJlZDwvZGNzY29yOnZh
bHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0
eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJh
bWV0ZXI+0KLQtdC60YHRgjwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nv
cjp2YWx1ZSB4c2k6dHlwZT0ieHM6c3RyaW5nIi8+DQoJCQkJPC9kY3Njb3I6aXRl
bT4NCgkJCTwvYXBwZWFyYW5jZT4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJCTxz
ZWxlY3Rpb24+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQ
sNCY0LzQv9C+0YDRgtCg0LDRgdGF0L7QtDwvZmllbGQ+DQoJCQkJPC9pdGVtPg0K
CQkJPC9zZWxlY3Rpb24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBl
PSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0eXBlPSJk
Y3Njb3I6RmllbGQiPtCe0LHRitC10LrRgi7RgtGH0JjQvNC/0L7RgNGCLtCf0YDQ
uNGF0L7QtDwvbGVmdD4NCgkJCQkJPGNvbXBhcmlzb25UeXBlPkdyZWF0ZXI8L2Nv
bXBhcmlzb25UeXBlPg0KCQkJCQk8cmlnaHQgeHNpOnR5cGU9InhzOmRlY2ltYWwi
PjA8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVyPg0KCQkJPGFwcGVh
cmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0eXBlPSJTZXR0aW5nc1BhcmFt
ZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+0JTQvtGB0YLRg9C/
0L3QvtGB0YLRjDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nvcjp2YWx1
ZSB4c2k6dHlwZT0ieHM6Ym9vbGVhbiI+ZmFsc2U8L2Rjc2Nvcjp2YWx1ZT4NCgkJ
CQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJ
CTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxk
PtCi0LDQsdC70LjRhtCw0JjQvNC/0L7RgNGC0J/RgNC40YXQvtC0PC9maWVsZD4N
CgkJCQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4NCgkJCTxmaWx0ZXI+DQoJCQkJ
PGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Db21wYXJpc29uIj4NCgkJCQkJPGxl
ZnQgeHNpOnR5cGU9ImRjc2NvcjpGaWVsZCI+0J7QsdGK0LXQutGCLtGC0YfQmNC8
0L/QvtGA0YIu0KDQsNGB0YXQvtC0PC9sZWZ0Pg0KCQkJCQk8Y29tcGFyaXNvblR5
cGU+R3JlYXRlcjwvY29tcGFyaXNvblR5cGU+DQoJCQkJCTxyaWdodCB4c2k6dHlw
ZT0ieHM6ZGVjaW1hbCI+MDwvcmlnaHQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9maWx0
ZXI+DQoJCQk8YXBwZWFyYW5jZT4NCgkJCQk8ZGNzY29yOml0ZW0geHNpOnR5cGU9
IlNldHRpbmdzUGFyYW1ldGVyVmFsdWUiPg0KCQkJCQk8ZGNzY29yOnBhcmFtZXRl
cj7QlNC+0YHRgtGD0L/QvdC+0YHRgtGMPC9kY3Njb3I6cGFyYW1ldGVyPg0KCQkJ
CQk8ZGNzY29yOnZhbHVlIHhzaTp0eXBlPSJ4czpib29sZWFuIj5mYWxzZTwvZGNz
Y29yOnZhbHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2FwcGVhcmFuY2U+
DQoJCTwvaXRlbT4NCgkJPGl0ZW0+DQoJCQk8c2VsZWN0aW9uPg0KCQkJCTxpdGVt
Pg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQmNC80L/QvtGA0YLQntC/0LvQ
sNGH0LXQvTwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJ
CQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFy
aXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHR
itC10LrRgi7RgtGH0JjQvNC/0L7RgNGCLtCU0L7QutGD0LzQtdC90YI8L2xlZnQ+
DQoJCQkJCTxjb21wYXJpc29uVHlwZT5GaWxsZWQ8L2NvbXBhcmlzb25UeXBlPg0K
CQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVyPg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJ
PGRjc2NvcjppdGVtIHhzaTp0eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4N
CgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+0JTQvtGB0YLRg9C/0L3QvtGB0YLRjDwv
ZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nvcjp2YWx1ZSB4c2k6dHlwZT0i
eHM6Ym9vbGVhbiI+ZmFsc2U8L2Rjc2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2Nvcjpp
dGVtPg0KCQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJPC9jb25kaXRpb25h
bEFwcGVhcmFuY2U+DQo8L1NldHRpbmdzPg==}
},
{0,0},
{0,10,
{7,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьНастройки",
{1,2,
{"ru","Настройки обработки"},
{"uk","Настройка обробки"}
},
{1,2,
{"ru","Открыть настройки"},
{"uk","Відкрити настройки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОткрытьНастройки",3,0,0,
{0,0},1,0},
{7,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ИмпортВыписки",
{1,2,
{"ru","Импорт выписки"},
{"uk","Імпорт виписки"}
},
{1,2,
{"ru","Импорт выписки"},
{"uk","Імпорт виписки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ИмпортВыписки",3,0,0,
{0,0},1,0},
{7,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СформироватьВыписки",
{1,2,
{"ru","Сформировать выписки"},
{"uk","Сформувати виписки"}
},
{1,2,
{"ru","Сформировать выписки"},
{"uk","Сформувати виписки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СформироватьВыписки",3,0,0,
{0,0},1,0},
{7,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ТаблицаИмпортПометитьВсе",
{1,2,
{"ru","Таблица импорт пометить все"},
{"uk","Таблиця імпорт позначити всі"}
},
{1,2,
{"ru","Таблица импорт пометить все"},
{"uk","Таблиця імпорт позначити всі"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ТаблицаИмпортПометитьВсе",3,0,0,
{0,0},1,0},
{7,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ТаблицаИмпортСнятьПометкуСоВсех",
{1,2,
{"ru","Таблица импорт снять пометку со всех"},
{"uk","Таблиця імпорт зняти позначку з усіх"}
},
{1,2,
{"ru","Таблица импорт пометить все"},
{"uk","Таблиця імпорт позначити всі"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ТаблицаИмпортСнятьПометкуСоВсех",3,0,0,
{0,0},1,0},
{7,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПрочитатьПлатежныеПоручения",
{1,2,
{"ru","Прочитать платежные поручения"},
{"uk","Прочитати платіжні доручення"}
},
{1,2,
{"ru","Прочитать платежные поручения"},
{"uk","Прочитати платіжні доручення"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПрочитатьПлатежныеПоручения",3,0,0,
{0,0},1,0},
{7,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ТаблицаЭкспортПометитьВсе",
{1,2,
{"ru","Таблица экспорт пометить все"},
{"uk","Таблиця експорт позначити всі"}
},
{1,2,
{"ru","Таблица импорт пометить все"},
{"uk","Таблиця імпорт позначити всі"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ТаблицаЭкспортПометитьВсе",3,0,0,
{0,0},1,0},
{7,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ТаблицаЭкспортСнятьПометкуСоВсех",
{1,2,
{"ru","Таблица экспорт снять пометку со всех"},
{"uk","Таблиця експорт зняти позначку з усіх"}
},
{1,2,
{"ru","Таблица импорт пометить все"},
{"uk","Таблиця імпорт позначити всі"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ТаблицаЭкспортСнятьПометкуСоВсех",3,0,0,
{0,0},1,0},
{7,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЭкспортПП",
{1,2,
{"ru","Экспорт платежных поручений"},
{"uk","Експорт платіжних доручень"}
},
{1,2,
{"ru","Экспорт ПП"},
{"uk","Експорт ПП"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЭкспортПП",3,0,0,
{0,0},1,0},
{7,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьНастройкиФорматовОбмена",
{1,2,
{"ru","Настройки форматов обмена"},
{"uk","Настройки форматів обміну"}
},
{1,2,
{"ru","Открыть настройки форматов обмена"},
{"uk","Відкрити настройки форматів обміну"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОткрытьНастройкиФорматовОбмена",3,0,0,
{0,0},1,0}
},
{0,0},
{0,0},0,0}