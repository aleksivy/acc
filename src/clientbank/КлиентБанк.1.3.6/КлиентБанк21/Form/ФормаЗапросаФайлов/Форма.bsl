// (С) АБИ Украина 2013

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
// Процедура отправляет регистрационную информацию почтой
// 
// Параметры:
// 	 Нет
//
Процедура ОтправитьРегИнфо(ОтправлятьПисьмо = Истина) 
	// проверяем заполненность рег. информации
	
	Если сзФайлы.Количество() = 0 Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр("ru='Список файлов пуст!';uk='Список файлів порожній!'"));
		//^Возврат;
        //^>>
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтправитьРегИнфоЗавершение", ЭтаФорма),НСтр("ru='Список файлов пуст!';uk='Список файлів порожній!'"),,); 
	КонецЕсли;
	
	стрНеЗаполненРегНомер = НСтр("ru='Не заполнен регистрационный номер!';uk='Не заповнений реєстраційний номер!'");
	
	Если ПустаяСтрока(РегНомер2) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(стрНеЗаполненРегНомер);	
		//^Возврат;
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтправитьРегИнфоЗавершение", ЭтаФорма),стрНеЗаполненРегНомер,,); 
		//^>> 
	КонецЕсли;
	
	Если ПустаяСтрока(РегНомер3) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(стрНеЗаполненРегНомер);	
		//^Возврат;
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтправитьРегИнфоЗавершение", ЭтаФорма),стрНеЗаполненРегНомер,,); 
		//^>> 
	КонецЕсли;
	
	Если ПустаяСтрока(РегНомер4) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(стрНеЗаполненРегНомер);	
		//^Возврат;
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтправитьРегИнфоЗавершение", ЭтаФорма),стрНеЗаполненРегНомер,,); 
		//^>> 
	КонецЕсли;
	
	Если ПустаяСтрока(НазваниеОрганизации) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр("ru='Не заполнено название организации!';uk='Не заповнена назва організації!'"));
		//^Возврат;
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтправитьРегИнфоЗавершение", ЭтаФорма),НСтр("ru='Не заполнено название организации!';uk='Не заповнена назва організації!'"),,); 
		//^>> 
	КонецЕсли;
	
	
	// записуем рег. информацию
	
	РегИнфо.РегНомер1 = РегНомер1;
	РегИнфо.РегНомер2 = РегНомер2;
	РегИнфо.РегНомер3 = РегНомер3;
	РегИнфо.РегНомер4 = РегНомер4;
	
	РегИнфо.НазваниеОрганизации = НазваниеОрганизации;
	
	ЗаписатьРегИнфо();
	
	// отправляем по почте файл с запросом
	
	Рез = СформироватьФайлЗапроса(сзФайлы);
	Если Не Рез Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр("ru='Не удалось сформировать файл запроса!';uk='Не вдалося сформувати файл запиту!'"));	
		//^Возврат;
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтправитьРегИнфоЗавершение", ЭтаФорма),НСтр("ru='Не удалось сформировать файл запроса!';uk='Не вдалося сформувати файл запиту!'"),,);
		//^>> 
	КонецЕсли; 
	
	Рез = Ложь;
	Если ОтправлятьПисьмо Тогда
		//Если НастройкиОбработки.РаботаСПочтой = "1С" Тогда
		Рез = ОтправитьПисьмоЗапрос();
		//Иначе
		//	Рез = ОтправитьПисьмоЗапросЛук();
		//КонецЕсли;
	КонецЕсли;	
	
	
	Если Не Рез Тогда
		Возврат;
	КонецЕсли; 
	
	//^<< szewczuk 02.11.2016
	//^Предупреждение(НСтр("ru='Письмо успешно сформировано. Если это необходимо, отправьте почту в почтовой программе. После получения ответного письма скопируйте все вложения этого письма в каталог обработки.';uk='Лист успішно сформовано. Якщо це необхідно, відправте пошту в поштовій програмі. Після одержання листа-відповіді скопіюйте усі вкладення цього листа в каталог обробки.'"));
	ПоказатьПредупреждение(,НСтр("ru='Письмо успешно сформировано. Если это необходимо, отправьте почту в почтовой программе. После получения ответного письма скопируйте все вложения этого письма в каталог обработки.';uk='Лист успішно сформовано. Якщо це необхідно, відправте пошту в поштовій програмі. Після одержання листа-відповіді скопіюйте усі вкладення цього листа в каталог обробки.'"),,);
	//^>> 
	
	
КонецПроцедуры

//^<< szewczuk 02.11.2016
&НаКлиенте
Процедура ОтправитьРегИнфоЗавершение(ДополнительныеПараметры) Экспорт
	Возврат;
КонецПроцедуры	
//^>>

&НаКлиенте
// Читает регистрационную информацию с файла КаталогПродукта+"reginfo.txt", записывает в структуру РегИнфо
//
// Параметры: нет
//
//
Процедура ПрочитатьРегИнфо() 
	
	РегИнфо = Новый Структура;
	ИмяКаталогаКБ = Объект.НастройкаИмяКаталогаКБ;
	
	ФайлРИ = Новый ТекстовыйДокумент();
	ИмяФайлаРИ = ИмяКаталогаКБ + "reginfo.txt";
	
	Если НЕ СуществуетФайл(ИмяФайлаРИ,,Истина) Тогда
		РегИнфо.Вставить("РегНомер1", "KLB8");
		РегИнфо.Вставить("РегНомер2", "");
		РегИнфо.Вставить("РегНомер3", "");
		РегИнфо.Вставить("РегНомер4", "");
		РегИнфо.Вставить("НазваниеОрганизации", СокрЛП(Объект.НастройкаОрганизацияПоУмолчанию));
		Возврат;
	КонецЕсли;
	
	ФайлРИ.Прочитать(ИмяФайлаРИ);
	
	Для н = 1 По ФайлРИ.КоличествоСтрок() Цикл
		Если н > 2 Тогда
			// у нас только 2 строки
			Прервать;
		КонецЕсли; 
		СтрокаИзФайла = ФайлРИ.ПолучитьСтроку(н);
		Если н = 1 Тогда
			// разбираем рег. номер прямо здесь на 4 составляющие
			РегИнфо.Вставить("РегНомер1", Сред(СтрокаИзФайла,  1, 4));
			РегИнфо.Вставить("РегНомер2", Сред(СтрокаИзФайла,  6, 4));
			РегИнфо.Вставить("РегНомер3", Сред(СтрокаИзФайла, 11, 4));
			РегИнфо.Вставить("РегНомер4", Сред(СтрокаИзФайла, 16, 4));
		ИначеЕсли н = 2 Тогда
			РегИнфо.Вставить("НазваниеОрганизации", СтрокаИзФайла);
		Иначе
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры // ПрочитатьРегИнфо()

&НаКлиенте
// Записывает регистрационную информацию в файл КаталогПродукта+"reginfo.txt", со структуры РегИнфо
//
// Параметры: нет 
//
//
Процедура ЗаписатьРегИнфо() Экспорт

	ИмяКаталогаКБ = Объект.НастройкаИмяКаталогаКБ;
	ФайлРИ = Новый ТекстовыйДокумент();
	ИмяФайлаРИ = ИмяКаталогаКБ + "reginfo.txt";
	
	сТире = "-";
	ФайлРИ.ДобавитьСтроку(РегИнфо.РегНомер1 + сТире + РегИнфо.РегНомер2 + сТире + РегИнфо.РегНомер3 + сТире + РегИнфо.РегНомер4);
	ФайлРИ.ДобавитьСтроку(РегИнфо.НазваниеОрганизации);
	
	ФайлРИ.Записать(ИмяФайлаРИ, КодировкаТекста.ANSI);
	
	Сообщить("Записан файл " + ИмяФайлаРИ);

КонецПроцедуры // ЗаписатьРегИнфо()

&НаСервере
Функция ПолучитьИмяКонфигурации()
	Возврат Метаданные.Синоним + ", релиз " + Метаданные.Версия;
КонецФункции

&НаКлиенте
// Формирует файл - запрос на форматы обработок
//
// Параметры: 
//
//  сзФайлы      – СписокЗначений - список файлов
//
// Возвращаемое значение:
//
//   Булево   – Истина при удачной записи файла
//                 
//
Функция СформироватьФайлЗапроса(сзФайлы) Экспорт 
	
	ИмяКаталогаКБ = Объект.НастройкаИмяКаталогаКБ;
	ФайлЗапроса = Новый ТекстовыйДокумент();
	ИмяФайлаЗапроса = ИмяКаталогаКБ + "qKLB8.txt";
	
	СисИнфо = Новый СистемнаяИнформация;
	
	сТире = "-";
	ФайлЗапроса.ДобавитьСтроку(РегИнфо.РегНомер1 + сТире + РегИнфо.РегНомер2 + сТире + РегИнфо.РегНомер3 + сТире + РегИнфо.РегНомер4);
	ФайлЗапроса.ДобавитьСтроку(РегИнфо.НазваниеОрганизации);
	
	ФайлЗапроса.ДобавитьСтроку("Версия 1С = " + СисИнфо.ВерсияПриложения);
	ФайлЗапроса.ДобавитьСтроку("Конфигурация 1С = " + ПолучитьИмяКонфигурации());
	ФайлЗапроса.ДобавитьСтроку("Версия КБ = " + Объект.ВерсияКБ);
	
	Для Каждого эсзФайлы Из сзФайлы Цикл
		ФайлЗапроса.ДобавитьСтроку(эсзФайлы.Значение);
	КонецЦикла; 
	
	Если сзФайлы.Количество() > 2 Тогда
		Сообщить("Запрашиваемое количество обработок превышает разрешенное (разрешено 2 обработки)", СтатусСообщения.Важное);
	КонецЕсли;	
	
	Попытка
		ФайлЗапроса.Записать(ИмяФайлаЗапроса , КодировкаТекста.ANSI);
		Сообщить("Записан файл " + ИмяФайлаЗапроса);
		Возврат Истина;
	Исключение
		// не удалось записать файл
		Возврат Ложь;
	КонецПопытки; 
КонецФункции // СформироватьФайлЗапроса()

&НаКлиенте
// Проверяет существование файла, выдает предупреждение, если файла нет
// Предупреждение может не выдаваться, если НеВыдаватьПредупреждения = Истина; 
// 
//
// Параметры:
//
//  ИмяПроверяемогоФайла  				– Строка  – имя файла, который проверяем
//  ТекстДополнительногоПредупреждения  – Строка –  текст, который будет присоединен к
//											предупреждению
//  НеВыдаватьПредупреждения 			– Булево - при Истина предупреждение не выдается
//  
//
// Возвращаемое значение:
//
//   Булево    – Истина - существует, Ложь - нет
// 
Функция СуществуетФайл(ИмяПроверяемогоФайла, ТекстДополнительногоПредупреждения = "", НеВыдаватьПредупреждения = Ложь) Экспорт
	ПроверяемФайл = Новый Файл(ИмяПроверяемогоФайла);
	Если ПроверяемФайл.Существует() Тогда
		Возврат Истина;
	Иначе
		
		Если Не НеВыдаватьПредупреждения Тогда
		
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Файла с именем %1 не существует!'"), ИмяПроверяемогоФайла);
			
			Если НЕ ПустаяСтрока(ТекстДополнительногоПредупреждения) Тогда
				ТекстПредупреждения = ТекстПредупреждения + " " + ТекстДополнительногоПредупреждения;
			КонецЕсли; 
			
			Предупреждение(ТекстПредупреждения);
			
		КонецЕсли;
		
		Возврат Ложь;
	КонецЕсли; 
КонецФункции // СуществуетФайл()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КопироватьДанныеФормы(Параметры.Ключ, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// читаем рег. инфо
	ПрочитатьРегИнфо();
	
	РегНомер1 = РегИнфо.РегНомер1;
	РегНомер2 = РегИнфо.РегНомер2;
	РегНомер3 = РегИнфо.РегНомер3;
	РегНомер4 = РегИнфо.РегНомер4;
	
	НазваниеОрганизации = РегИнфо.НазваниеОрганизации;
	
	Если сзФайлы.Количество() = 0 Тогда
		Для Каждого СтрокаИспользуемыеФорматыОбмена Из Объект.тчИспользуемыеФорматыОбмена Цикл
			Если НЕ СтрокаИспользуемыеФорматыОбмена.СуществуетФайл Тогда
				сзФайлы.Добавить(СтрокаИспользуемыеФорматыОбмена.ИмяФайла);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьРегИнфо();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФайлы(Команда)
	ОтправитьРегИнфо(Ложь);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы с почтой
 
&НаКлиенте
// Отправяет письмо с файлом-запросом на форматы обработок
//
// Параметры: нет
//
//
// Возвращаемое значение:
//
//   Булево – Истина при успешном отправлении
//
// 
Функция ОтправитьПисьмоЗапрос() Экспорт 
	
	Почта = Новый Почта;
//	Почта.Отключиться();
	Попытка
		Почта.Подключиться("");
	Исключение
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр("ru='Не удалось подключится к почте!';uk='Не вдалося підключиться до пошти!'"));
		ПоказатьПредупреждение(,НСтр("ru='Не удалось подключится к почте!';uk='Не вдалося підключиться до пошти!'"),,);
		//^>> 
		Возврат Ложь;
	КонецПопытки;
	
	Сообщение = Новый ПочтовоеСообщение();
    Сообщение.Получатели.Добавить(АдресОтправки);
	
	Сообщение.Тема = "qKLB8";
	Сообщение.Текст = "";
	
	
	ИмяКаталогаКБ = Объект.НастройкаИмяКаталогаКБ;
	ИмяФайлаЗапроса = ИмяКаталогаКБ + "qKLB8.txt";
	Если НЕ СуществуетФайл(ИмяФайлаЗапроса,,Истина) Тогда
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр("ru='Не обнаружен файл запроса!';uk='Не виявлений файл запиту!'"));
		ПоказатьПредупреждение(,НСтр("ru='Не обнаружен файл запроса!';uk='Не виявлений файл запиту!'"),,);
		//^>> 
		Возврат Ложь;
	КонецЕсли; 
	
	Сообщение.Вложения.Добавить(ИмяФайлаЗапроса);
	
	Попытка
		Почта.Послать(Сообщение);
		Почта.Отключиться();
	Исключение
		//^<< szewczuk 02.11.2016
		//^Предупреждение(НСтр("ru='Не удалось послать сообщение!';uk='Не вдалося послати повідомлення!'"));
		ПоказатьПредупреждение(,НСтр("ru='Не удалось послать сообщение!';uk='Не вдалося послати повідомлення!'"),,);
		//^>> 
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции // ОтправитьПисьмоЗапрос()

АдресОтправки = "release@abbyy.ua";