// (С) АБИ Украина 2013

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	КопироватьДанныеФормы(Параметры.Ключ, Объект);
	
	//^<< szewczuk 15.11.2016
	//^Если Объект.НастройкаПорядокСортировки.Количество() = 0 Тогда
	//^	Объект.НастройкаПорядокСортировки.Добавить("Контрагент", "По контрагентам");
	//^	Объект.НастройкаПорядокСортировки.Добавить("Сумма", "По сумме платежей");
	//^	Объект.НастройкаПорядокСортировки.Добавить("ПриходРасход,Сумма", "По сумме платежей прихода, сумме платежей расхода");
	//^	Объект.НастройкаПорядокСортировки.Добавить("Статус", "По статусу строки выписки");
	//^КонецЕсли;
    Если Объект.НастройкаПорядокСортировки.Количество() = 0 Тогда
		Объект.НастройкаПорядокСортировки.Добавить("Контрагент", 			НСтр("ru='По контрагентам';uk='По контрагентах'"));
		Объект.НастройкаПорядокСортировки.Добавить("Сумма", 				НСтр("ru='По сумме платежей';uk='По сумі платежів'"));
		Объект.НастройкаПорядокСортировки.Добавить("ПриходРасход,Сумма", 	НСтр("ru='По сумме платежей прихода, сумме платежей расхода';uk='По сумі платежів приходу, сумме платежів розходу'"));
		Объект.НастройкаПорядокСортировки.Добавить("Статус", 				НСтр("ru='По статусу строки выписки';uk='По статусу строки выписки'"));
	КонецЕсли;	
	//^>> 
		
	ЗаполнитьСписокВыбораВидовОпераций("Поступление", Элементы.НастройкаВидОперацииВходящие);
	ЗаполнитьСписокВыбораВидовОпераций("Списание", Элементы.НастройкаВидОперацииИсходящие);
	
	//^<< szewczuk 31.10.2016
	//^Установка типа реквизитов разных для разных конфигураци
	Если Объект.Конфигурация  = "УТ" Тогда
		
		//^---БанковскийСчетПоУмолчанию
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчетаОрганизаций");
		Элементы.БанковскийСчетПоУмолчанию.ОграничениеТипа = ОписаниеТипа;
		//^Элементы.БанковскийСчетПоУмолчанию.ВыбиратьТип = Ложь;
		
		//^---НастройкаСтатьяДоходов
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиДоходов");
		Элементы.НастройкаСтатьяДоходов.ОграничениеТипа = ОписаниеТипа;
		//^Элементы.НастройкаСтатьяДоходов.ВыбиратьТип = Ложь;

		//^---НастройкаСтатьяРасходов
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов");
		Элементы.НастройкаСтатьяРасходов.ОграничениеТипа = ОписаниеТипа;
		Элементы.НастройкаСтатьяРасходов.ВыбиратьТип = Ложь;
		
		//^---НастройкаПодразделениеВходящие
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
		Элементы.НастройкаПодразделениеВходящие.ОграничениеТипа = ОписаниеТипа;
		//^Элементы.НастройкаПодразделениеВходящие.ВыбиратьТип = Ложь;

		//^---НастройкаПодразделениеИсходящие
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
		Элементы.НастройкаПодразделениеИсходящие.ОграничениеТипа = ОписаниеТипа;
		//^Элементы.НастройкаПодразделениеИсходящие.ВыбиратьТип = Ложь;
		//^--------------------------------------------------------
		
	ИначеЕсли Объект.Конфигурация  = "БУ"  Тогда
		
		//^---БанковскийСчетПоУмолчанию
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета");
		Элементы.БанковскийСчетПоУмолчанию.ОграничениеТипа	 = ОписаниеТипа;
		//^Элементы.БанковскийСчетПоУмолчанию.ВыбиратьТип = Ложь;
		
		//^---НастройкаСтатьяДоходов
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.СтатьиДоходов");
		Элементы.НастройкаСтатьяДоходов.ОграничениеТипа = ОписаниеТипа;
		//^Элементы.ВыбиратьТип = Ложь;

		//^---НастройкаСтатьяРасходов
		//^Пока не определился с типом
		
		//^---НастройкаПодразделениеВходящие
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		Элементы.НастройкаПодразделениеВходящие.ОграничениеТипа = ОписаниеТипа;
		//^Элементы.НастройкаПодразделениеВходящие.ВыбиратьТип = Ложь;
		
		//^---НастройкаПодразделениеИсходящие
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		Элементы.НастройкаПодразделениеИсходящие.ОграничениеТипа = ОписаниеТипа;
		//^Элементы.НастройкаПодразделениеИсходящие.ВыбиратьТип = Ложь;
		
		//^--------------------------------------------------------

	ИначеЕсли Объект.Конфигурация  = "ЕРП" Тогда
	//^ После УТ и Фиесты. Есть вероятность, что так же как УТ	
	КонецЕсли;
	//^>>
	
	//^<< szewczuk 09.11.2016
	УстановитьВидимостьНаСервере();
	//^>> 
	
КонецПроцедуры

//^<< szewczuk 11.11.2016
&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	МассивРеквизитовУТ = Новый Массив;
	МассивРеквизитовУТ.Добавить(Элементы.НастройкаПодразделениеВходящие);
	МассивРеквизитовУТ.Добавить(Элементы.НастройкаСтатьяРасходов);
	МассивРеквизитовУТ.Добавить(Элементы.НастройкаПодразделениеИсходящие);
	МассивРеквизитовУТ.Добавить(Элементы.НастройкаПодразделениеИсходящие);
	
	МассивРеквизитовБУ =  Новый Массив;
	
	МассивРеквизитовБУ.Добавить(Элементы.НастройкаВхСчетАвансов);
	МассивРеквизитовБУ.Добавить(Элементы.НастройкаВхСчетРасчетов);
	МассивРеквизитовБУ.Добавить(Элементы.НастройкаИсхСчетАвансов);
	МассивРеквизитовБУ.Добавить(Элементы.НастройкаИсхСчетРасчетов);
	МассивРеквизитовБУ.Добавить(Элементы.НастройкаСчетУчетаДС);
	
	Для каждого ТекРеквизит Из МассивРеквизитовУТ Цикл
		ТекРеквизит.Видимость = Объект.Конфигурация = "УТ";
	КонецЦикла;
	
	Для каждого ТекРеквизит Из МассивРеквизитовБУ Цикл
		ТекРеквизит.Видимость = Объект.Конфигурация = "БУ";
	КонецЦикла;
	
КонецПроцедуры
//^>> 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//^<< szewczuk 09.11.2016
	//^УстановитьВидимостьФлажков();
	//^>> 
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	СохранитьНастройки();
	
	Закрыть(Объект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Сохраняет настройки 
Процедура СохранитьНастройки()
	
	Настройки = Новый Соответствие;
	Настройки.Вставить("НастройкаФорматыОбмена", РеквизитФормыВЗначение("Объект").НастройкаФорматыОбмена.Выгрузить());
	ХранилищеСистемныхНастроек.Сохранить("Обработка.КлиентБанк82/НастройкаФорматыОбмена", "КлиентБанк82Общие", Настройки);
	
КонецПроцедуры // СохранитьНастройки()

&НаСервере
Функция ПолучитьСтатьюДДС(ВидОперации)
	
	//^<< szewczuk 31.10.2016
	Если Объект.Конфигурация = "УТ" Тогда
	//^>>
		Возврат Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ВидОперации);
	//^<< szewczuk 31.10.2016
	ИначеЕсли Объект.Конфигурация = "БУ" Тогда 
		//^ Пока оставляю пустым, возможно, для БУ тоже будут предопределенные элементы и процедура выбора в модуле менеджера
	КонецЕсли;
	//^>> 	
	                                           	                                    	
КонецФункции

&НаСервере
Функция ПолучитьМФО()
	Возврат СокрЛП(Объект.НастройкаБанковскийСчетПоУмолчанию.Банк.Код);
КонецФункции

//^<< szewczuk 09.11.2016
//^&НаСервере
//^Процедура УстановитьВидимостьФлажков()
//^	Элементы.НастройкаОткрыватьТолькоДокументыСОшибками.Доступность = Объект.НастройкаОткрыватьСозданныеДокументы;
//^КонецПроцедуры
//^>> 

&НаСервере
Процедура ЗаполнитьСписокВыбораВидовОпераций(ИмяДокумента, ПолеФормы)
	
	СписокВыбора = ПолеФормы.СписокВыбора;
	
	СписокВыбора.Очистить();
	
	//^<< szewczuk 31.10.2016
	Если Объект.Конфигурация = "УТ" Тогда
	//^>> 	
		Если Найти(ИмяДокумента, "Поступление") > 0 Тогда
	
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеДоходы"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.КонвертацияВалюты"));
		
		Иначе
		
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОплатаПоставщику"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеРасходы"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеречислениеТаможне"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.КонвертацияВалюты"));
		
		КонецЕсли;
	//^<< szewczuk 31.10.2016
	ИначеЕсли Объект.Конфигурация = "БУ" Тогда 
		
		Если Найти(ИмяДокумента, "Поступление") > 0 Тогда
	
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ВозвратДенежныхСредствПоставщиком"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.РасчетыПоКредитамИЗаймам"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПрочиеРасчетыСКонтрагентами"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ИнкассацияДенежныхСредств"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПокупкаПродажаВалюты"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПрочееПоступлениеБезналичныхДенежныхСредств"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажПоПлатежнымКартамИБанковскимКредитам"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеДенежныхСредств.ПоступлениеСредствОтФСС"));
		
		Иначе
		
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ВозвратДенежныхСредствПокупателю"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймамСКонтрагентами"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеДенежныхСредствПодотчетнику"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПокупкаПродажаВалюты"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписаниеБезналичныхДенежныхСредств"));
					
		КонецЕсли;

		
	КонецЕсли; 
	//^>>
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура ВыбратьФайлДанных(Элемент, Владелец, Заголовок);
	
	Фильтр = НСтр("ru='Внешняя обработка (*.epf)|*.epf'");
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      = Фильтр;
	ДиалогВыбораФайла.Заголовок                   = Заголовок;
	ДиалогВыбораФайла.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбораФайла.ИндексФильтра               = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла              = Элемент.ТекстРедактирования;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		//Владелец.ТекущийЭлемент.ТекущиеДанные.ИмяФайлаОбработкиФормата = ДиалогВыбораФайла.ПолноеИмяФайла;
		
		// ИмяФайла - имя файла без каталога
		ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
		
		Поз = Найти(ИмяФайла,"\");
		сКатал = "";
		Пока Поз > 0 Цикл
			сКатал = сКатал + Лев(ИмяФайла,Поз);
			ИмяФайла = Сред(ИмяФайла,Поз + 1);
			Поз = Найти(ИмяФайла,"\");
		КонецЦикла;    
		
		Владелец.ТекущийЭлемент.ТекущиеДанные.ИмяФайлаОбработкиФормата = СокрЛП(ИмяФайла);
		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталогДанных(Элемент, Владелец, Заголовок);
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораФайла.Заголовок 					= Заголовок;
	ДиалогВыбораФайла.Каталог              			= Элемент.ТекстРедактирования;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла 	= Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Владелец = ДиалогВыбораФайла.Каталог + "\";
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура НастройкаФорматыОбменаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.МФО = ПолучитьМФО();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаФорматыОбменаИмяФайлаОбработкиФорматаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьФайлДанных(Элемент, ЭтаФорма, НСтр("ru='Выберите файл обработки формата'"));
КонецПроцедуры

//^<< szewczuk 09.11.2016
//^&НаКлиенте
//^Процедура НастройкаОткрыватьСозданныеДокументыПриИзменении(Элемент)
//^	
//^	УстановитьВидимостьФлажков();
//^	
//^	Если Объект.НастройкаОткрыватьСозданныеДокументы = Ложь Тогда
//^		Объект.НастройкаОткрыватьТолькоДокументыСОшибками = Ложь;	
//^	КонецЕсли;
//^	
//^КонецПроцедуры
//^>> 

&НаКлиенте
Процедура НастройкаВидОперацииВходящиеПриИзменении(Элемент)
	Объект.НастройкаСтатьяДДСВходящие = ПолучитьСтатьюДДС(Объект.НастройкаВидОперацииВходящие);
КонецПроцедуры

&НаКлиенте
Процедура ИмяКаталогаКБНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьКаталогДанных(Элемент, Объект.НастройкаИмяКаталогаКБ, НСтр("ru='Выберите каталог продукта'"));
КонецПроцедуры

//^<< szewczuk 04.11.2016
&НаКлиенте
Процедура ВхСчетАвансовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму("ПланСчетов.Хозрасчетный.ФормаВыбора",,,,,, Новый ОписаниеОповещения("ВхСчетАвансовНачалоВыбораЗавершение", ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ВхСчетАвансовНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		Объект.НастройкаВхСчетАвансов = Строка(Результат);
	КонецЕсли;   
	
КонецПроцедуры
//^>>

//^<< szewczuk 04.11.2016
&НаКлиенте
Процедура ВхСчетРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму("ПланСчетов.Хозрасчетный.ФормаВыбора",,,,,, Новый ОписаниеОповещения("ВхСчетРасчетовНачалоВыбораЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ВхСчетРасчетовНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		Объект.НастройкаВхСчетРасчетов = Строка(Результат);
	КонецЕсли;   
	
КонецПроцедуры
//^>>

//^<< szewczuk 04.11.2016
&НаКлиенте
Процедура ИсхСчетАвансовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму("ПланСчетов.Хозрасчетный.ФормаВыбора",,,,,, Новый ОписаниеОповещения("ИсхСчетАвансовНачалоВыбораЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ИсхСчетАвансовНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		Объект.НастройкаИсхСчетАвансов = Строка(Результат);
	КонецЕсли;
	
КонецПроцедуры
//^>>

//^<< szewczuk 04.11.2016
&НаКлиенте
Процедура ИсхСчетРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму("ПланСчетов.Хозрасчетный.ФормаВыбора",,,,,, Новый ОписаниеОповещения("ИсхСчетРасчетовНачалоВыбораЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ИсхСчетРасчетовНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		Объект.НастройкаИсхСчетРасчетов = Строка(Результат);
	КонецЕсли;	
	
КонецПроцедуры
//^>> 

//^<< szewczuk 04.11.2016
&НаКлиенте
Процедура СчетУчетаДСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФорму("ПланСчетов.Хозрасчетный.ФормаВыбора",,,,,, Новый ОписаниеОповещения("СчетУчетаДСНачалоВыбораЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаДСНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		Объект.НастройкаСчетУчетаДС = Строка(Результат);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВидОперацииИсходящиеПриИзменении(Элемент)
	Объект.НастройкаСтатьяДДСИсходящие = ПолучитьСтатьюДДС(Объект.НастройкаВидОперацииИсходящие);
КонецПроцедуры
//^>> 




