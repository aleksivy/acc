// ******************************************
// **** Shyshka V.B. --- commerce.at.ua  ****
// ****	      skype: kreontsa			 ****
// ******************************************
// * вільне використання без перепродажі :) *
// ******************************************

// Експорт запиту відповідно до xsd схеми J1300101.xsd  
// Імпорт отриманої відповіді з отриманого файлу відповідно схеми: J1400101
// Описи всіх схем з офіціного сайту ДПС України: http://sts.gov.ua/data/material/000/005/58768/0.htm

Функция ХМЛ_Дата(Знач ДатаВхідна)
	Результат = Формат(ДатаВхідна,"ДФ=ddMMyyyy");
	Возврат Результат;
КонецФункции	

Функция ХМЛ_Число(Знач ЧислоВхідне,Точність=2)
	Результат = Формат(ЧислоВхідне,"ЧДЦ="+Точність+"; ЧРД=.; ЧРГ=; ЧГ=");
	Возврат Результат;
КонецФункции	

Функция ХМЛ_Стрічка(Знач СтрічкаВхідна)
	Результат = СтрЗаменить(СтрічкаВхідна,"&","&amp;");
	Результат = СтрЗаменить(Результат,">","&gt;");
	Результат = СтрЗаменить(Результат,"<","&lt;");
	Результат = СтрЗаменить(Результат,"""","&quot;");
	Результат = СтрЗаменить(Результат,"'","&apos;");
	Возврат Результат;
КонецФункции

Функция Отримати_параметриДляХМЛфайлу(Знач Організація, Знач НаДату)
	
	Результат = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Код КАК НИКод,
	|	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.КодАдмРайона,
	|	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Наименование КАК НИНазва,
	|	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ,
	|	КодыОрганизацииСрезПоследних.ИНН,
	|	КодыОрганизацииСрезПоследних.НомерСвидетельства
	|ИЗ
	|	РегистрСведений.КодыОрганизации.СрезПоследних(&НаДату, Организация = &Організація) КАК КодыОрганизацииСрезПоследних";
	
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("Організація", Організація);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат.Вставить("TIN",Выборка.КодПоЕДРПОУ);
		Результат.Вставить("NPDV",Выборка.ИНН);
		Результат.Вставить("NSPDV",Выборка.НомерСвидетельства);
		Результат.Вставить("KSTI",Выборка.НИКод);
		Результат.Вставить("STI",Выборка.НИНазва);
		
	Иначе
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо,
	               |	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.КодПоДРФО как КодПоДРФО,
	               |	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо
	               |ИЗ
	               |	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&НаДату, СтруктурнаяЕдиница = &Організація) КАК ОтветственныеЛицаОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("Організація", Організація);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ОтветственноеЛицо      = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель Тогда
			Результат.Вставить("BOS",ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(Выборка.ФизическоеЛицо));
			Результат.Вставить("KBOS",Выборка.КодПоДРФО);
		ИначеЕсли Выборка.ОтветственноеЛицо      = Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер Тогда
			Результат.Вставить("BUH",ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(Выборка.ФизическоеЛицо));
			Результат.Вставить("KBUH",Выборка.КодПоДРФО);
		КонецЕсли;		
		
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции

Функция ФорматуванняКоду(Знач ВхКод, Знач Кількість=9)
	ВхКод = СтрЗаменить(СокрЛП(ВхКод),Символы.НПП,"");
	ВхКод = "00000000000000000000" + ВхКод;
    Возврат Прав(ВхКод,Кількість);
КонецФункции
//*******************************
Функция СтрутураЗІменіФайлу(ІмяФайлу)
	
	СтруктураРезультат = Новый Структура("C_REG,C_RAJ,TIN,C_DOC,C_DOC_SUB,C_DOC_VER,C_DOC_STAN,C_DOC_TYPE,C_DOC_CNT,PERIOD_TYPE,PERIOD_MOUNTH,PERIOD_YEAR,C_STI_ORIG");
	
	СтруктураРезультат.Вставить("C_REG",Сред(ІмяФайлу,1,2));
	СтруктураРезультат.Вставить("C_RAJ",Сред(ІмяФайлу,3,2));
	СтруктураРезультат.Вставить("TIN",Сред(ІмяФайлу,5,10));
	
	СтруктураРезультат.Вставить("C_DOC",Сред(ІмяФайлу,15,3));
	СтруктураРезультат.Вставить("C_DOC_SUB",Сред(ІмяФайлу,18,3));
	СтруктураРезультат.Вставить("C_DOC_VER",Сред(ІмяФайлу,21,2));
	СтруктураРезультат.Вставить("C_DOC_STAN",Сред(ІмяФайлу,23,1));
	СтруктураРезультат.Вставить("C_DOC_TYPE",Сред(ІмяФайлу,24,2));
	СтруктураРезультат.Вставить("C_DOC_CNT",Сред(ІмяФайлу,26,7));
	
	СтруктураРезультат.Вставить("PERIOD_TYPE",Сред(ІмяФайлу,33,1));
	СтруктураРезультат.Вставить("PERIOD_MOUNTH",Сред(ІмяФайлу,34,2));
	СтруктураРезультат.Вставить("PERIOD_YEAR",Сред(ІмяФайлу,36,4));
	
	СтруктураРезультат.Вставить("C_STI_ORIG",Сред(ІмяФайлу,40,4));
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ПараметиДляХМЛ = Отримати_параметриДляХМЛфайлу(Організація, ТекущаяДата());
	
	КонДата = ТекущаяДата();
	
	// Шапка запиту
	хмлВерсія = "J1300101";// Чи F1300101 - якщо для фізичної особи платника ПДВ
	
	ІмяФайлу = ""+ПараметиДляХМЛ.KSTI+ ФорматуванняКоду(ПараметиДляХМЛ.TIN,10) + хмлВерсія + "100" + ФорматуванняКоду(ПочатковийНомерХМЛ,7) + "1" + Формат(ТекущаяДата(),"ДФ=MMyyyy") + ПараметиДляХМЛ.KSTI+".xml";
	
	ПовнийШляхФайл = ШляхДоФайлів + "\" + ІмяФайлу;
	
	ТекстДок = Новый ТекстовыйДокумент;
	
	ТекстДок.ДобавитьСтроку("<?xml version=""1.0"" encoding=""windows-1251""?>");
	ТекстДок.ДобавитьСтроку("<DECLAR xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""" + хмлВерсія + ".xsd"">");
	
	ТекстДок.ДобавитьСтроку("<DECLARHEAD>");
	ТекстДок.ДобавитьСтроку("<TIN>" + ХМЛ_Стрічка(ПараметиДляХМЛ.TIN)+ "</TIN>");
	ТекстДок.ДобавитьСтроку("<C_DOC>J13</C_DOC>");
	ТекстДок.ДобавитьСтроку("<C_DOC_SUB>001</C_DOC_SUB>");
	ТекстДок.ДобавитьСтроку("<C_DOC_VER>" + Прав(хмлВерсія,1) + "</C_DOC_VER>");
	ТекстДок.ДобавитьСтроку("<C_DOC_TYPE>0</C_DOC_TYPE>");
	ТекстДок.ДобавитьСтроку("<C_DOC_CNT>" + ПочатковийНомерХМЛ + "</C_DOC_CNT>");
	ТекстДок.ДобавитьСтроку("<C_REG>" + Сред(ПараметиДляХМЛ.KSTI,1,2) +"</C_REG>");
	ТекстДок.ДобавитьСтроку("<C_RAJ>" + Сред(ПараметиДляХМЛ.KSTI,3,2) +"</C_RAJ>");
	ТекстДок.ДобавитьСтроку("<PERIOD_MONTH>" + Формат(КонДата,"ДФ=M") + "</PERIOD_MONTH>");
	ТекстДок.ДобавитьСтроку("<PERIOD_TYPE>1</PERIOD_TYPE>");
	ТекстДок.ДобавитьСтроку("<PERIOD_YEAR>" + Формат(КонДата,"ДФ=yyyy") + "</PERIOD_YEAR>");
	ТекстДок.ДобавитьСтроку("<C_STI_ORIG>" + ПараметиДляХМЛ.KSTI +"</C_STI_ORIG>");
	ТекстДок.ДобавитьСтроку("<C_DOC_STAN>1</C_DOC_STAN>");
	ТекстДок.ДобавитьСтроку("<LINKED_DOCS xsi:nil=""true""></LINKED_DOCS>");
	ТекстДок.ДобавитьСтроку("<D_FILL>" + ХМЛ_Дата(КонДата) + "</D_FILL>");
	ТекстДок.ДобавитьСтроку("<SOFTWARE xsi:nil=""true""></SOFTWARE>");
	ТекстДок.ДобавитьСтроку("</DECLARHEAD>");
	
	ТекстДок.ДобавитьСтроку("<DECLARBODY>");
	ТекстДок.ДобавитьСтроку("<HNUM>" + ПочатковийНомерХМЛ + "</HNUM>");
	ТекстДок.ДобавитьСтроку("<HNAME>" + ХМЛ_Стрічка(Організація.НаименованиеПолное) + "</HNAME>");
	ТекстДок.ДобавитьСтроку("<HTIN>" + ХМЛ_Стрічка(ПараметиДляХМЛ.TIN)+ "</HTIN>");
	ТекстДок.ДобавитьСтроку("<HNPDV>" + ХМЛ_Стрічка(ПараметиДляХМЛ.NPDV)+ "</HNPDV>");
	ТекстДок.ДобавитьСтроку("<HKSTI>" + ХМЛ_Стрічка(ПараметиДляХМЛ.KSTI)+ "</HKSTI>");
	ТекстДок.ДобавитьСтроку("<HSTI>" + ХМЛ_Стрічка(ПараметиДляХМЛ.STI) + "</HSTI>");
	ТекстДок.ДобавитьСтроку("<HEMAIL>" + ХМЛ_Стрічка(email) + "</HEMAIL>");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Док,
	|	Док.Дата КАК ДатаДок,
	|	Док.Проведен КАК ОзнакаПроведення,
	|	Док.Контрагент.Код КАК КлієнтКод,
	|	Док.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Док.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	Док.СуммаДокумента КАК СумаЗПДВ,
	|	Док.СуммаНДСДокумента КАК СумаПДВ,
	|	Док.ПометкаУдаления,
	|	Док.Контрагент.ИНН КАК ИНН,
	|	Док.Номер,
	|	Док.ВидОперации,
	|	Док.НомерРегистрацииВЕРПН
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента КАК Док
	|ГДЕ
	|	Док.Дата МЕЖДУ &Дата1 И &Дата2
	|	И НЕ Док.НомерРегистрацииВЕРПН = ""          ""
	|";
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("Дата2", КонецДня(КонПериода));
	
	Выборка = Запрос.Выполнить().Выбрать();
	інд = 1;
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПометкаУдаления Тогда
			Сообщить("" + Выборка.Номер + " від " + Выборка.ДатаДок + Символы.Таб + "Пропущено з обробки! Документ помічено на вилучення в 1С (з включеною ознакою ЄРПН).");
			Продолжить;
		КонецЕсли;
		
		Если НЕ Выборка.ОзнакаПроведення Тогда
			Сообщить("" + Выборка.Номер + " від " + Выборка.ДатаДок + Символы.Таб + "Пропущено з обробки! Документ не проведено по 1С (з включеною ознакою ЄРПН).");
			Продолжить;
		КонецЕсли;
		
		НомерДокументаПНОтриманої = СокрЛП(Выборка.НомерВходящегоДокумента);
		лмасРазобранныйНомер = ггуМодификацияФорм.ггуПолучитьМассивИзСтрокиСРазделителем(НомерДокументаПНОтриманої, "/");
		лКолвоЭлементов = лмасРазобранныйНомер.Количество();
		НомерПодаткової 	= лмасРазобранныйНомер[0];
		СпецРежим = ?(лКолвоЭлементов>1, СокрЛП(лмасРазобранныйНомер[1]), 0);
		КодФілії = ?(лКолвоЭлементов>2, СокрЛП(лмасРазобранныйНомер[2]), 0);
		
		// Добавлення рядка по документу в запит
		ТекстДок.ДобавитьСтроку("<T1RXXXXG21 ROWNUM=""" + інд + """>" + ХМЛ_Число(НомерПодаткової,0) + "</T1RXXXXG21>");// Номер ПН отриманої
		Если СпецРежим = 0 Тогда
			ТекстДок.ДобавитьСтроку("<T1RXXXXG22 ROWNUM=""" + інд + """ xsi:nil=""true""></T1RXXXXG22>");
		Иначе
			ТекстДок.ДобавитьСтроку("<T1RXXXXG22 ROWNUM=""" + інд + """>" + ХМЛ_Число(СпецРежим,0) + "</T1RXXXXG22>");// Номер ПН отриманої
		КонецЕсли;
		Если КодФілії = 0 Тогда
			ТекстДок.ДобавитьСтроку("<T1RXXXXG23 ROWNUM=""" + інд + """ xsi:nil=""true""></T1RXXXXG23>");
		Иначе	
			ТекстДок.ДобавитьСтроку("<T1RXXXXG23 ROWNUM=""" + інд + """>" + ХМЛ_Число(КодФілії,0) + "</T1RXXXXG23>");// Код філії
		КонецЕсли;	
		ТекстДок.ДобавитьСтроку("<T1RXXXXG3D ROWNUM=""" + інд + """>" + ХМЛ_Дата(Выборка.ДатаВходящегоДокумента) + "</T1RXXXXG3D>");// Дата ПН постачальника!!!
		Если Выборка.ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная Тогда
			ВидДокумента = "ПН";
		Иначе
			ВидДокумента = "РК";
		// Або інші види, потрібно визначити як потрібно їх інтерпретувати для запиту
		КонецЕсли;	
		ТекстДок.ДобавитьСтроку("<T1RXXXXG4S ROWNUM=""" + інд + """>" + ХМЛ_Стрічка(ВидДокумента) + "</T1RXXXXG4S>");// Вид: ПН або РК
		ТекстДок.ДобавитьСтроку("<T1RXXXXG5 ROWNUM=""" + інд + """>" + ХМЛ_Стрічка(Выборка.ИНН) + "</T1RXXXXG5>");
		
		інд = інд + 1;
		
	КонецЦикла;
	
	ТекстДок.ДобавитьСтроку("<HFILL>" + ХМЛ_Дата(ТекущаяДата()) + "</HFILL>");
	ТекстДок.ДобавитьСтроку("<HKBOS>" + ХМЛ_Стрічка(ПараметиДляХМЛ.KBOS)+ "</HKBOS>");
	ТекстДок.ДобавитьСтроку("<HBOS>" + ХМЛ_Стрічка( ПараметиДляХМЛ.BOS)+ "</HBOS>");
	ТекстДок.ДобавитьСтроку("</DECLARBODY>");
	ТекстДок.ДобавитьСтроку("</DECLAR>");
	
	Если інд = 1 Тогда
		// Значить нічого не вивантажувалось, файл не зберігаєм
		ТекстДок = 0;
		Сообщить("Немає підготовлених доументів для запиту в ДПС.");
	Иначе
		Сообщить("Вивантажено " + СокрЛП(інд-1) + " записів. Файл створений:" + ПовнийШляхФайл);
		ТекстДок.Записать(ПовнийШляхФайл, КодировкаТекста.ANSI);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ШляхДоФайлівНачалоВыбора(Элемент, СтандартнаяОбработка)
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	Если НЕ ПустаяСтрока(ШляхДоФайлів) Тогда
		ДиалогОткрытияФайла.Каталог = СокрЛП(ШляхДоФайлів);
	КонецЕсли;
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ШляхДоФайлів = ДиалогОткрытияФайла.Каталог;
	КонецЕсли;	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Організація = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	
	// Пробуєм знайти адрес е-мейл для відправки
	// Як приклад отримуєм його з виду "Електронна пошта головного бухгалтера"
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
			               |	КонтактнаяИнформация.Представление Как Email
			               |ИЗ
			               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			               |ГДЕ
			               |	КонтактнаяИнформация.Объект = &Організація
			               |	И КонтактнаяИнформация.Тип = &ТипКонтакт
			               |	И КонтактнаяИнформация.Вид = &ВидКонтакт";
			
	Запрос.УстановитьПараметр("Організація", Організація);
	Запрос.УстановитьПараметр("ТипКонтакт", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("ВидКонтакт", Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Електронна пошта головного бухгалтера"));
			
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		email = СокрЛП(Выборка.Email);
	КонецЕсли;	
	
	ПочатковийНомерХМЛ = 1;
	
	НачПериода = НачалоМесяца(ТекущаяДата());
	КонПериода = ТекущаяДата();
	
	НачПериодаИмп 	= НачПериода;
	КонПериодаИмп	= КонПериода;
	
КонецПроцедуры

Процедура ФайлИмпортаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = ФайлИмпорта;
	ДиалогОткрытияФайла.Фильтр = "XML (*.xml)|*.xml";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ФайлИмпорта = ДиалогОткрытияФайла.ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

// На вхід:
// ЧтениеXML = Новый ЧтениеXML; ЧтениеXML.ОткрытьФайл(ФайлИмпорта); і тоді сюда передати
// ТЗХМЛ - таблиця зі структурою колонок = структурі ТЧ у файлі ХМЛ // З модифікацією таблиці вихідної
// ТегТаблиці: щоб обробляти тільки одну таблицю з ХМЛ
// Відповідь: тру/фалс успішно, чи ні зачитались дані.
Функция ИмпортХМЛвТЗ(ЧтениеXML, ТЗХМЛ, ТегТаблиці)
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			ТекУзел = ЧтениеXML.Имя;
			Если Найти(ТекУзел, ТегТаблиці) > 0 Тогда
				
				ТекНомерСтроки = 0;
				Если ЧтениеXML.ПрочитатьАтрибут()  Тогда
					ТекНомерСтроки =  Число(ЧтениеXML.Значение);
				КонецЕсли;
				
				Пока ТекНомерСтроки > ТЗХМЛ.Количество() Цикл
					ТЗХМЛ.Добавить();
				КонецЦикла;
				
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			
			ТекЗначение = ЧтениеXML.Значение;
			
			Если (Прав(ТекУзел,1) = "D") и НЕ ПустаяСтрока(ТекЗначение) Тогда
				
				ТекДень	= Сред(ТекЗначение,1,2);
				ТекМес	= Сред(ТекЗначение,3,2);			
				ТекГод	= Сред(ТекЗначение,5,4);			
				
				ТекЗначение = Дата(""+ТекГод+ТекМес+ТекДень);
				
			КонецЕсли;
			
			Если Найти(ТекУзел, "XXXX") > 0 Тогда
				ТЗХМЛ[ТекНомерСтроки-1][ТекУзел] = ТекЗначение;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если ТЗХМЛ.Количество() <= 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура КоманднаяПанель2КнопкаИмпорт(Кнопка)
	
	Если СтрДлина(ФайлИмпорта) < 47 Тогда
		Сообщить("Файл для імпорту не відповідає шаблону");
		Возврат;
	КонецЕсли;	
	
	ОтриманіПараметри = СтрутураЗІменіФайлу(Прав(ФайлИмпорта,47));
	НашіПараметри = Отримати_параметриДляХМЛфайлу(Організація,ТекущаяДата());
	
	//Контроль тільки по даних з імені файлу
	Если Число(НашіПараметри.TIN) <> Число(ОтриманіПараметри.TIN) Тогда
		Предупреждение("Файл отриманий є для іншої організації.");
		Возврат;
	КонецЕсли;	
	
	хмлВерсія = "J1400101";// Чи F1400101 - якщо потрібно для фізичної особи підприємця платника ПДВ
	хмлВерсіяОтримана = ""+ОтриманіПараметри.C_DOC + ОтриманіПараметри.C_DOC_SUB + ОтриманіПараметри.C_DOC_VER;
	
	Сообщить(хмлВерсіяОтримана);
	
	Если хмлВерсія <> ВРег(хмлВерсіяОтримана) Тогда
		Предупреждение("Файл отриманий не є файлом відповіді по поданому запиту.");
		Возврат;
	КонецЕсли;	
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ФайлИмпорта);
	ЧтениеXML.ИгнорироватьПробелы = Истина;
	
	ТЗХМЛ = Новый ТаблицаЗначений;
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG2D", Новый ОписаниеТипов("Дата"));
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG31", Новый ОписаниеТипов("Число"));
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG32", Новый ОписаниеТипов("Число"));
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG33", Новый ОписаниеТипов("Строка"));
	//!!! T1RXXXXG33 : По структурі (j1400101.xsd) з сайту ДПС вказано число, але номер філії "001" і "1" для запиту має різницю, тому читаєм як стрічка !!!
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG4D", Новый ОписаниеТипов("Дата"));
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG5S", Новый ОписаниеТипов("Строка"));
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG6", Новый ОписаниеТипов("Строка"));
	ТЗХМЛ.Колонки.Добавить("T1RXXXXG7", Новый ОписаниеТипов("Строка"));
	
	Если НЕ ИмпортХМЛвТЗ(ЧтениеXML, ТЗХМЛ, "T1RXXXX") Тогда
		Сообщить("Помилка імпорту ХМЛ");
		ЧтениеXML.Закрыть();
		Возврат;
	КонецЕсли;
	
	ЧтениеXML.Закрыть();
	
	Для Каждого инд из ТЗХМЛ Цикл 
		
		Если НЕ ЗначениеЗаполнено(инд.T1RXXXXG2D) Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		
		НомерДокументаОтриманоїПН = СокрЛП(Формат(инд.T1RXXXXG31,"ЧРГ=; ЧГ="));
		Если ЗначениеЗаполнено(инд.T1RXXXXG33) Тогда
			НомерДокументаОтриманоїПН = НомерДокументаОтриманоїПН + "/" + СокрЛП(Формат(инд.T1RXXXXG33,"ЧРГ=; ЧГ="));
		КонецЕсли;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	РегистрацияВходящегоНалоговогоДокумента.Ссылка КАК Док,
		               |	РегистрацияВходящегоНалоговогоДокумента.Дата КАК ДатаДок,
		               |	РегистрацияВходящегоНалоговогоДокумента.Проведен КАК ОзнакаПроведення,
		               |	РегистрацияВходящегоНалоговогоДокумента.Контрагент.Код КАК КлієнтКод,
		               |	РегистрацияВходящегоНалоговогоДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		               |	РегистрацияВходящегоНалоговогоДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		               |	РегистрацияВходящегоНалоговогоДокумента.СуммаДокумента КАК СумаЗПДВ,
		               |	РегистрацияВходящегоНалоговогоДокумента.ПометкаУдаления,
		               |	РегистрацияВходящегоНалоговогоДокумента.Контрагент.ИНН КАК ИНН,
		               |	РегистрацияВходящегоНалоговогоДокумента.Номер,
		               |	РегистрацияВходящегоНалоговогоДокумента.ДатаВключенияВЕдиныйРеестрНалоговыхНакладных
		               |ИЗ
		               |	Документ.РегистрацияВходящегоНалоговогоДокумента КАК РегистрацияВходящегоНалоговогоДокумента
		               |ГДЕ 
					   |    РегистрацияВходящегоНалоговогоДокумента.НомерВходящегоДокумента = &НомерПН
		               | 	И РегистрацияВходящегоНалоговогоДокумента.ТребуетПроверкиВключенияВЕдиныйРеестрНалоговыхНакладных = ИСТИНА
		               |	И РегистрацияВходящегоНалоговогоДокумента.Дата МЕЖДУ &ДатаЗ И &ДатаПо
					   |	И РегистрацияВходящегоНалоговогоДокумента.Контрагент.ИНН = &ИНН
					   |	И РегистрацияВходящегоНалоговогоДокумента.ВидДокумента = &ВидДокумента";
		
		Запрос.УстановитьПараметр("ДатаЗ", НачалоДня(НачПериодаИмп));
		Запрос.УстановитьПараметр("ДатаПо", КонецДня(КонПериодаИмп));
		Запрос.УстановитьПараметр("НомерПН", НомерДокументаОтриманоїПН);
		Запрос.УстановитьПараметр("ИНН", СокрЛП(инд.T1RXXXXG6));
		Если СокрЛП(инд.T1RXXXXG5S) = "ПН" Тогда
			Запрос.УстановитьПараметр("ВидДокумента", Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная);
		Иначе
			Запрос.УстановитьПараметр("ВидДокумента", Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат);
			//Запрос.УстановитьПараметр("ВидДокумента", Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка);
		КонецЕсли;	
		
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 1 Тогда
			Если ЗначениеЗаполнено(инд.T1RXXXXG33) Тогда
				Сообщить("Пропущено з обробки! невідомо яку ПН обрати з декількох, номер отриманий з файлу:" + НомерДокументаОтриманоїПН, СтатусСообщения.ОченьВажное);
			КонецЕсли;	
			Продолжить;
		КонецЕсли;		
		
		Если Выборка.Следующий() Тогда
			
			Если НачалоДня(Выборка.ДатаВключенияВЕдиныйРеестрНалоговыхНакладных) = НачалоДня(инд.T1RXXXXG2D) Тогда
				// Вже опрацьований був запис, пропускаєм
				Продолжить;
			КонецЕсли;
			
			НомерДокументаОтриманийз1С = Выборка.НомерВходящегоДокумента;
			
			ДокументНовий = Выборка.Док.ПолучитьОбъект();
			ДокументНовий.ДатаВключенияВЕдиныйРеестрНалоговыхНакладных = инд.T1RXXXXG2D;
			
			Попытка
				ДокументНовий.ОбменДанными.Загрузка = Истина;
				ДокументНовий.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("Пропущено з обробки! Помилка при запису ознаки в 1С, для документа:" + НомерДокументаОтриманийз1С);
				Продолжить;
			КонецПопытки;
			
			Сообщить("Документ змінено, код документа:" + НомерДокументаОтриманийз1С, СтатусСообщения.Информация);
			Продолжить;
			
		Иначе
			Сообщить("Пропущено з обробки! не знайдено відповідну отриману ПН, номер з файлу:" + НомерДокументаОтриманийз1С, СтатусСообщения.ОченьВажное);
			Продолжить;
		КонецЕсли;		
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВыбПериодНажатие1(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериодаИмп, ?(КонПериодаИмп='0001-01-01', КонПериодаИмп, КонецДня(КонПериодаИмп)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериодаИмп = НастройкаПериода.ПолучитьДатуНачала();
		КонПериодаИмп = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

// Меню-реклама і більше нічого:
Процедура ОсновныеДействияФормыURL_commerce(Кнопка)
	ЗапуститьПриложение(Кнопка.Текст);
КонецПроцедуры

Процедура ОсновныеДействияФормыURL_relax(Кнопка)
	ЗапуститьПриложение(Кнопка.Текст);
КонецПроцедуры

Процедура ОсновныеДействияФормыURL_mista(Кнопка)
	ЗапуститьПриложение(Кнопка.Текст);
КонецПроцедуры

Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	// Вставить содержимое обработчика.
КонецПроцедуры
