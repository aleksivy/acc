
Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если Не ЗначениеЗаполнено(ДокументДляНачисления) Тогда
		Сообщить("Не выбран документ для начисления по МСФО!");
		Возврат;
	ИначеЕсли Не ДокументДляНачисления.Проведен Тогда
		Сообщить("Выбранный документ не проведен!");
		Возврат;
	ИначеЕсли (ДатаОперации) <= КонецДня(ДатаЗакрытогоПериода) Тогда
		Сообщить("Запрещено изменять (создавать) транзакции МСФО по : " + КонецДня(ДатаЗакрытогоПериода) + "!");
		ОперацияМСФО = Документы.БИТ_МСФО_Операция.ПустаяСсылка();
		ЭлементыФормы.Переформировать.Видимость = Ложь;
		Возврат;
	ИначеЕсли ЗначениеЗаполнено(ОперацияМСФО) и Не Переформировать Тогда
		Сообщить("По указанному документу уже сформировано начисление по МСФО! Включите флажок 'Переформировать' для переформирования начисления!");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ОперацияМСФО) Тогда
		// Надо создать новую операцию МСФО
		лОперацияОбъект = Документы.БИТ_МСФО_Операция.СоздатьДокумент();
		лОперацияОбъект.Adjustments = Истина;
		лОперацияОбъект.БИТ_МСФО_ПланСчетов = Справочники.БИТ_МСФО_ПланыСчетов.Международный;
		лОперацияОбъект.Дата = (КонецДня(ДатаОперации)-2);
		лОперацияОбъект.ДокументОснование = ДокументДляНачисления;
		лОперацияОбъект.Организация = глЗначениеПеременной("ОсновнаяОрганизация");
		лОперацияОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь");
		лОперацияОбъект.Комментарий = "Accruals : " + ДокументДляНачисления;
		лОперацияОбъект.Содержание = "Accruals : " + ДокументДляНачисления;
		Попытка
			лОперацияОбъект.Записать( РежимЗаписиДокумента.Запись );
		Исключение
		    Сообщить("Ошибка создания операции МСФО для начисления по документу - " + ДокументДляНачисления + ". " + ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		ОперацияМСФО = лОперацияОбъект.Ссылка;
		лОперацияОбъект = Неопределено;
		ЭлементыФормы.Переформировать.Видимость = Истина;
	КонецЕсли;
	лОперацияОбъект = ОперацияМСФО.ПолучитьОбъект();
	лНаборДвижений = РегистрыБухгалтерии.МСФО.СоздатьНаборЗаписей();
	лНаборДвижений.Отбор.Регистратор.Установить( ДокументДляНачисления );
	лНаборДвижений.Прочитать();
	лтзДвижения = лНаборДвижений.Выгрузить();
	// Меняем знак при необходимости
	Если СторноНачисления Тогда
		Для каждого лСтрока Из лтзДвижения Цикл
			лСтрока.Сумма = -лСтрока.Сумма;
			лСтрока.ВалютнаяСуммаДт = -лСтрока.ВалютнаяСуммаДт;
			лСтрока.ВалютнаяСуммаКт = -лСтрока.ВалютнаяСуммаКт;
			лСтрока.КоличествоДт = -лСтрока.КоличествоДт;
			лСтрока.КоличествоКт = -лСтрока.КоличествоКт;
		КонецЦикла;
	КонецЕсли;
	// Добавляем движения за предыдущий период с нужным знаком
	лтзРез = лтзДвижения.Скопировать();
	лтзРез.ЗаполнитьЗначения(лОперацияОбъект.Дата, "Период");
	лтзРез.ЗаполнитьЗначения(лОперацияОбъект.Ссылка, "Регистратор");
	// Добавляем движения за текущий период "перевернутым" знаком
	Для каждого лСтрока Из лтзДвижения Цикл
		лНоваяСтрока = лтзРез.Добавить();
		ЗаполнитьЗначенияСвойств(лНоваяСтрока, лСтрока);
		лНоваяСтрока.Период = КонецМесяца(лОперацияОбъект.Дата) + 2;
		лНоваяСтрока.Регистратор = лОперацияОбъект.Ссылка;
		лНоваяСтрока.Сумма = -лСтрока.Сумма;
		лНоваяСтрока.ВалютнаяСуммаДт = -лСтрока.ВалютнаяСуммаДт;
		лНоваяСтрока.ВалютнаяСуммаКт = -лСтрока.ВалютнаяСуммаКт;
		лНоваяСтрока.КоличествоДт = -лСтрока.КоличествоДт;
		лНоваяСтрока.КоличествоКт = -лСтрока.КоличествоКт;
	КонецЦикла;
	лОперацияОбъект.Движения.МСФО.Очистить();
	лОперацияОбъект.Движения.МСФО.Загрузить( лтзРез );
	лОперацияОбъект.Движения.МСФО.Записать();
КонецПроцедуры

Процедура ДокументПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДокументДляНачисления) Тогда
		лЗапрос = Новый Запрос( "ВЫБРАТЬ Док.Ссылка ИЗ Документ.БИТ_МСФО_Операция КАК Док ГДЕ Док.ДокументОснование = &ДокументОснование" );
		лЗапрос.УстановитьПараметр("ДокументОснование", ДокументДляНачисления);
		лВыборка = лЗапрос.Выполнить().Выбрать();
		ОперацияМСФО = ?(лВыборка.Следующий(), лВыборка.Ссылка, Документы.БИТ_МСФО_Операция.ПустаяСсылка());
		ДатаОперации = (НачалоМесяца(ДокументДляНачисления.Дата)-2);
	Иначе
		ОперацияМСФО = Документы.БИТ_МСФО_Операция.ПустаяСсылка();
	КонецЕсли;
	ЭлементыФормы.Переформировать.Видимость = ЗначениеЗаполнено(ОперацияМСФО);
КонецПроцедуры

Процедура ПриОткрытии()
	// Надо определить дату закрытого периода МСФО
	лтзДаты = ПолучитьГраницыЗапретаРедактированияМСФО( глЗначениеПеременной("ОсновнаяОрганизация"), Справочники.БИТ_МСФО_ПланыСчетов.Международный);
	ДатаЗакрытогоПериода = лтзДаты.ГраницаЗапретаИзмененийПредыдущийПериод;
	ЭлементыФормы.Переформировать.Видимость = ЗначениеЗаполнено(ОперацияМСФО);
КонецПроцедуры
