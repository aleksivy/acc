Функция Печать() Экспорт
	
	// Для отладки
	лТест = БИТ_МСФО_Серна.СчетМожноИспользоватьВПроводках("1091");
	лЭтотОбъект = СсылкаНаОбъект;

	ЗапросУслуги = Новый Запрос;
	ЗапросУслуги.УстановитьПараметр("ТекущийДокумент", лЭтотОбъект.Ссылка);
	ЗапросУслуги.Текст = "
	|ВЫБРАТЬ
	|	НомерСтроки  КАК НомерСтрокиТЧ,
	|	Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(Содержание КАК СТРОКА(1000)) КАК Товар,
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	Количество,
	|	Номенклатура.БазоваяЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	Цена,
	|	Сумма,
	|	0 как СуммаСкидки,
	|	Сумма как СуммаБезСкидки,
	|	СтавкаНДС,
	|	СуммаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
	|
	|ГДЕ
	|	Док.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиТЧ
	|";
	ТаблицаУслуги = ЗапросУслуги.Выполнить().Выгрузить();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_Акт";
	Макет       = ПолучитьМакет("Акт");
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	СведенияОПоставщике = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(лЭтотОбъект.Контрагент, лЭтотОбъект.Дата,,,КодЯзыкаПечать);
	СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(лЭтотОбъект.Организация, лЭтотОбъект.Дата,,,КодЯзыкаПечать);
	
	лБанковскийСчетОрганизации = лЭтотОбъект.Организация.ОсновнойБанковскийСчет;
	Если ЗначениеЗаполнено(лБанковскийСчетОрганизации) Тогда
		НомерСчета = лБанковскийСчетОрганизации.НомерСчета;
		Банк       = лБанковскийСчетОрганизации.Банк;
		МФО		   = лБанковскийСчетОрганизации.Банк.Код;
		
		СведенияОПокупателе.Вставить("НомерСчета",       НомерСчета);
		СведенияОПокупателе.Вставить("Банк",             Банк);
		СведенияОПокупателе.Вставить("МФО",              МФО);
	КонецЕсли;

	
	РуководителиОрганизации = Новый Структура;
	РуководителиОрганизации.Вставить("РуководительДолжность", 		"Начальник відділу координації перевезень");
	РуководителиОрганизации.Вставить("ПредставлениеПокупателя", 	СокрЛП(лЭтотОбъект.Организация.НаименованиеПолное));
	РуководителиОрганизации.Вставить("РуководительПредставление",	"Вітязь С.М.");
	РуководителиОрганизации.Вставить("ПредставительПокупателя",		"Вітязь С.М.");
		
	лПредставительПоставщика = лЭтотОбъект.Контрагент.ОсновноеКонтактноеЛицо;
	лПредставительПокупателя = РуководителиОрганизации.ПредставительПокупателя;
	
	РуководителиКонтрагента = ОбщегоНазначения.ОтветственныеЛицаКонтрагента(лЭтотОбъект.Контрагент, лЭтотОбъект.Дата);
	
	// шапка акта "УТВЕРЖДАЮ"
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ДолжностьРуководителяПоставщика = ?(ПустаяСтрока(РуководителиКонтрагента.РуководительДолжность) И лЭтотОбъект.Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо, "Директор", РуководителиКонтрагента.РуководительДолжность);
	ОбластьМакета.Параметры.ПредставлениеПоставщика 		= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать);
	ОбластьМакета.Параметры.РуководительПоставщика 			= лПредставительПоставщика;
	
	ОбластьМакета.Параметры.ДолжностьРуководителяПокупателя = РуководителиОрганизации.РуководительДолжность;
	ОбластьМакета.Параметры.ПредставлениеПокупателя 		= РуководителиОрганизации.ПредставлениеПокупателя;
	ОбластьМакета.Параметры.РуководительПокупателя 			= РуководителиОрганизации.РуководительПредставление;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	Если КодЯзыкаПечать = Неопределено Тогда 
		КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	КонецЕсли;
	ОбластьМакета.Параметры.ТекстЗаголовка = "" + НСтр("ru='АКТ оказания услуг';uk='АКТ надання послуг'",КодЯзыкаПечать) + Символы.ПС + " № " + ОбщегоНазначения.ПолучитьНомерНаПечать(лЭтотОбъект) + " / ФОП "
	                          + НСтр("ru=' от ';uk=' від '",КодЯзыкаПечать) + Формат(лЭтотОбъект.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)) + НСтр("ru=' г.';uk=' р.'",КодЯзыкаПечать);

	ТабДокумент.Вывести(ОбластьМакета);

	ДанныеПредставителя = ОбщегоНазначения.ДанныеФизЛица(лЭтотОбъект.Организация, лПредставительПокупателя, лЭтотОбъект.Дата);
	ДолжностьПредставителя = СокрЛП(ДанныеПредставителя.Должность);
	
	ДолжностьФИОПредставителя = ?(ЗначениеЗаполнено(ДолжностьПредставителя),ДолжностьПредставителя + " ","") + 
								?(ДанныеПредставителя.Фамилия = Неопределено,"",ДанныеПредставителя.Фамилия + " ") + 
								?(ДанныеПредставителя.Имя = Неопределено,"",ДанныеПредставителя.Имя + " ") +
								?(ДанныеПредставителя.Отчество = Неопределено,"",ДанныеПредставителя.Отчество);
								
	// Начинаем формировать собственно текст акта
	ОбластьМакета = Макет.ПолучитьОбласть("ТекстАктаНачало");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
								
	ОбластьМакета.Параметры.ПредставительПоставщика = ДолжностьФИОПредставителя;
	ОбластьМакета.Параметры.ПредставительПокупателя = лПредставительПокупателя;

	ОбластьМакета.Параметры.ПредставлениеПоставщика 		= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
	ОбластьМакета.Параметры.ПредставлениеПокупателя 		= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,");
	ТабДокумент.Вывести(ОбластьМакета);

	// выводим сведения о договоре и сделке
	МассивСтруктурСтрок = Новый Массив();
	МассивСтруктурСтрок.Добавить(Новый Структура("НазваниеПараметра,ЗначениеПараметра", "Послуги згідно договору : ", лЭтотОбъект.ДоговорКонтрагента));
	ОбластьМакета = Макет.ПолучитьОбласть("ДопИнформация");
	Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
		ОбластьМакета.Параметры.Заполнить(СтруктураСтроки);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		

 	// Заканчиваем формировать текст акта
	ОбластьМакета = Макет.ПолучитьОбласть("ТекстАктаКонец");
	ТабДокумент.Вывести(ОбластьМакета);

	ЕстьСкидки = (ТаблицаУслуги.Итог("СуммаСкидки") <> 0);
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКоды = Истина;
		Колонка = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды = Истина;
		Колонка = "Код";
	Иначе
		ВыводитьКоды = Ложь;
	КонецЕсли;
	
	// Вывести табличную часть
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьСкидка = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
    
	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	// Вывести табличную часть
	Суффикс = "";
	Если лЭтотОбъект.УчитыватьНДС Тогда
		Если лЭтотОбъект.СуммаВключаетНДС Тогда
			Суффикс  = Суффикс  + НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать);
		Иначе	
			Суффикс  = Суффикс  + НСтр("ru=' без ';uk=' без '",КодЯзыкаПечать);
		КонецЕсли;
		Суффикс = Суффикс  + НСтр("ru='НДС';uk='ПДВ'",КодЯзыкаПечать);
	КонецЕсли;
	
	ОбластьДанных.Параметры.Цена  = НСтр("ru='Цена';uk='Ціна'",КодЯзыкаПечать) + Суффикс;
	ТабДокумент.Присоединить(ОбластьДанных);
	Если ЕстьСкидки Тогда
		ТабДокумент.Присоединить(ОбластьСкидка);
	КонецЕсли;
	ОбластьСуммы.Параметры.Сумма = НСтр("ru='Сумма';uk='Сума'",КодЯзыкаПечать)+ Суффикс;
	ТабДокумент.Присоединить(ОбластьСуммы);

	ОбластьКолонкаТовар = Макет.Область("Товар");
		
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
							Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	Если НЕ ЕстьСкидки Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
											Макет.Область("СуммаБезСкидки").ШиринаКолонки +
											Макет.Область("СуммаСкидки").ШиринаКолонки;
	КонецЕсли;
    	

	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСкидки = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");
	
	НомерСтроки = 0;

	Для Каждого СтрокаТабличнойЧасти Из ТаблицаУслуги Цикл	

		НомерСтроки = НомерСтроки + 1;
		
		ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
		ТабДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			Если Колонка = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = СтрокаТабличнойЧасти.Артикул;
			Иначе
				ОбластьКодов.Параметры.Артикул = СтрокаТабличнойЧасти.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ОбластьДанных.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ОбластьДанных.Параметры.Товар = СокрЛП(СтрокаТабличнойЧасти.Товар);
		ТабДокумент.Присоединить(ОбластьДанных);
		
		Если ЕстьСкидки Тогда
			ОбластьСкидки.Параметры.Заполнить(СтрокаТабличнойЧасти);
			ТабДокумент.Присоединить(ОбластьСкидки);
		КонецЕсли;

		ОбластьСуммы.Параметры.Заполнить(СтрокаТабличнойЧасти);
		ТабДокумент.Присоединить(ОбластьСуммы);

	КонецЦикла;

	Если ТаблицаУслуги <> Неопределено Тогда

		СуммаВсего  = ТаблицаУслуги.Итог("Сумма");
		ВсегоНДС 	= ТаблицаУслуги.Итог("СуммаНДС");
		СуммаБезСкидки = ТаблицаУслуги.Итог("СуммаБезСкидки");
		СуммаСкидки    = ТаблицаУслуги.Итог("СуммаСкидки");

	Иначе

		СуммаВсего  = 0;
		ВсегоНДС 	= 0;
		СуммаБезСкидки = 0;
		СуммаСкидки    = 0;

	КонецЕсли;

	ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьСкидки = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
		
	ТабДокумент.Присоединить(ОбластьДанных);
	
	Если ЕстьСкидки Тогда
		ОбластьСкидки.Параметры.ВсегоСуммаБезСкидки = ОбщегоНазначения.ФорматСумм(СуммаБезСкидки);		
		ОбластьСкидки.Параметры.ВсегоСуммаСкидки    = ОбщегоНазначения.ФорматСумм(СуммаСкидки);
		ТабДокумент.Присоединить(ОбластьСкидки);
	КонецЕсли;
	
	ОбластьСуммы.Параметры.Всего = ОбщегоНазначения.ФорматСумм(СуммаВсего);

    ТабДокумент.Присоединить(ОбластьСуммы);
	
	// Вывести ИтогоНДС
	Если лЭтотОбъект.УчитыватьНДС Тогда
		// НДС
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначения.ФорматСумм(ВсегоНДС,,"""");
		ОбластьМакета.Параметры.НДС      = ?(лЭтотОбъект.СуммаВключаетНДС, НСтр("ru='В том числе НДС:';uk='У тому числі ПДВ:'",КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk='Сума ПДВ:'",КодЯзыкаПечать));
		ТабДокумент.Вывести(ОбластьМакета);
		
		// всего с НДС (если сумма не включает НДС)
		Если НЕ лЭтотОбъект.СуммаВключаетНДС Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
			ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначения.ФорматСумм(СуммаВсего + ВсегоНДС);
			ОбластьМакета.Параметры.НДС      = НСтр("ru='Всего с НДС:';uk='Всього із ПДВ:'",КодЯзыкаПечать);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
	КонецЕсли;

	// Выводим Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");	
	СуммаКПрописиСНДС 	= СуммаВсего + ?(лЭтотОбъект.СуммаВключаетНДС, 	    0, ВсегоНДС);
	СуммаКПрописиБезНДС = СуммаВсего - ?(лЭтотОбъект.СуммаВключаетНДС, ВсегоНДС, 		  0);
	Если лЭтотОбъект.УчитыватьНДС Тогда
		ОбластьМакета.Параметры.СуммаПрописью  = НСтр("ru='Общая стоимость работ (услуг) составила всего : ';uk='Загальна вартість робіт (послуг) склала всього : '",КодЯзыкаПечать) + ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописиБезНДС, лЭтотОбъект.ВалютаДокумента,КодЯзыкаПечать) + " без ПДВ.";
 	Иначе
		ОбластьМакета.Параметры.СуммаПрописью  = НСтр("ru='Общая стоимость работ (услуг) составила ';uk='Загальна вартість робіт (послуг) склала '",КодЯзыкаПечать)	+ 
		ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописиБезНДС, лЭтотОбъект.ВалютаДокумента,КодЯзыкаПечать) + " без ПДВ.";
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьМакета);
	
	лМестоСоставленияДокумента = "м.Дергачі";
	Если ЗначениеЗаполнено(лМестоСоставленияДокумента) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("МестоСоставления");
		ОбластьМакета.Параметры.МестоСоставления = СокрЛП(лМестоСоставленияДокумента);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 

	// выводим подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	
	ОбластьМакета.Параметры.ПредставительПоставщика = лПредставительПоставщика;
	ОбластьМакета.Параметры.ПредставительПокупателя = лПредставительПокупателя;
	
// Серна - Начало
	СведенияОПоставщике.Вставить("Дата", лЭтотОбъект.Дата);
// Серна - Конец
	ОбластьМакета.Параметры.РеквизитыПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,/,КодПоЕДРПОУ,КодПоДРФО,Телефоны,/,ИНН,НомерСвидетельства,/,НомерСчета,Банк,МФО,/,ЮридическийАдрес,/,ИнформацияОСтатусеПлательщикаНалогов,",,КодЯзыкаПечать);
	ОбластьМакета.Параметры.РеквизитыПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,/,КодПоЕДРПОУ,КодПоДРФО,Телефоны,/,ИНН,НомерСвидетельства,/,НомерСчета,Банк,МФО,/,ЮридическийАдрес,/,ИнформацияОСтатусеПлательщикаНалогов,",,КодЯзыкаПечать);
	
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;
	
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.КорректировкаДолга");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	//возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Печатная форма Акт взаимозачета"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Печатная Акт взаимозачета");
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Печатная форма Акт взаимозачета";
	НоваяКоманда.Идентификатор = "ПечатьАктВзаимозачета"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовКлиентскогоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции