Функция Печать() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доверенность.Дата КАК ДатаДокумента,
	|	Доверенность.Организация,
	|	Доверенность.ФизЛицо,
	|	Доверенность.ФизЛицо.Представление КАК КомуВыдана,
	|	Доверенность.Контрагент КАК Поставщик,
	|	Доверенность.НаПолучениеОт КАК ПоставщикПредставление,
	|	Доверенность.ДатаДействия,
// Серна - Начало
	|	Доверенность.ПоДокументу КАК ПоДокументу,
// Серна - Конец
	|	Доверенность.СтруктурнаяЕдиница.Банк КАК БанкОрганизации,
	|	Доверенность.СтруктурнаяЕдиница.НомерСчета КАК НомерРасчетногоСчетаОрганизации,
	|	Доверенность.СтруктурнаяЕдиница.Банк.Код КАК МФОБанкаОрганизации
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = 
	"ВЫБРАТЬ
// Серна - Начало
	|	Доверенность.НомерСтроки КАК Номер,
	|	Доверенность.НаименованиеТовара.Наименование КАК Ценности,
	|	Доверенность.ЕдиницаПоКлассификатору КАК ЕдиницаПоКлассификатору,
	|	Доверенность.ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмерения,
	|	Доверенность.Количество
	|ИЗ
	|	Документ.Доверенность.Товары КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка = &ТекущийДокумент
// Серна - Конец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер
	|";
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_Бланк";

	КодЯзыкаПечать = "uk"; // всегда на украинском
	
	НазваниеМакета = "Доверенность";
	Макет = ПолучитьМакет("Доверенность");
	
	ДанныеСотрудника     = ОбщегоНазначения.ДанныеФизЛица(Шапка.Организация, Шапка.ФизЛицо, Шапка.ДатаДокумента);
// Серна - Начало
	Если ДанныеСотрудника.Фамилия = Null Тогда
		ФамилияИмяОтчествоДоверенного = СокрЛП(Шапка.ФизЛицо);
	Иначе
		ФамилияИмяОтчествоДоверенного = ?(ДанныеСотрудника.Фамилия = Неопределено,"",ДанныеСотрудника.Фамилия + " ") + 
										?(ДанныеСотрудника.Имя = Неопределено,"",ДанныеСотрудника.Имя + " ") +
										?(ДанныеСотрудника.Отчество = Неопределено,"",ДанныеСотрудника.Отчество);
	КонецЕсли;
// Серна - Конец
	ДолжностьДоверенного = СокрЛП(ДанныеСотрудника.Должность);
// Серна - Начало
	Если Не ЗначениеЗаполнено(ДолжностьДоверенного) и ЗначениеЗаполнено(СсылкаНаОбъект.ФизЛицо) Тогда
		// Пробуем определить должность по регистру Серна_ДолжностиДляДоверенностей
		лОтбор = Новый Структура; лОтбор.Вставить("ФизическоеЛицо", СсылкаНаОбъект.ФизЛицо);
		лтзРег = РегистрыСведений.Серна_ДолжностиДляДоверенностей.СрезПоследних(СсылкаНаОбъект.Дата, лОтбор);
		Если лтзРег.Количество()>0 Тогда
			ДолжностьДоверенного = лтзРег[0].Должность;
		КонецЕсли;
	КонецЕсли;
// Серна - Конец

	ПаспортФизЛица        = ОбщегоНазначения.ПаспортныеДанные(Шапка.ФизЛицо, Шапка.ДатаДокумента);
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

	ОбластьМакета = Макет.ПолучитьОбласть("ЛицеваяСторона");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	Если СсылкаНаОбъект.ВидОперации = Перечисления.ВидыОперацийДоверенность.Доверенность Тогда
		
		Если НазваниеМакета = "Доверенность" ИЛИ НазваниеМакета = "ДоверенностьСтраница" Тогда
// Серна - Начало
			ОбластьМакета.Параметры.Номер = СсылкаНаОбъект.НомерДоверенности;
		ИначеЕсли НазваниеМакета = "ДоверенностьБланк" Тогда
			ОбластьМакета.Параметры.Номер = "/" + СсылкаНаОбъект.НомерДоверенности;
// Серна - Конец
		КонецЕсли;
        		
	КонецЕсли;
	КомуВыдана = ?(ЗначениеЗаполнено(ДолжностьДоверенного),ДолжностьДоверенного + " ","");
	ОбластьМакета.Параметры.КомуВыдана = КомуВыдана + ФамилияИмяОтчествоДоверенного;
	ОбластьМакета.Параметры.НазваниеОрганизации		 		 = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,", Ложь);
	ОбластьМакета.Параметры.ЕДРПОУОрганизации	     		 = УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
// Серна - Начало
	СведенияОбОрганизации.Вставить("Дата", СсылкаНаОбъект.Дата);
// Серна - Конец
	ОбластьМакета.Параметры.ЮридическийАдрес         		 = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес,", Ложь);
	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерРасчетногоСчетаОрганизации) Тогда
		ОбластьМакета.Параметры.НомерРасчетногоСчетаОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,", Ложь);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.МФОБанкаОрганизации) Тогда
		ОбластьМакета.Параметры.МФОБанкаОрганизации	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "МФО,", Ложь);
	КонецЕСли;
	Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.БанкОрганизации) Тогда
		ОбластьМакета.Параметры.БанкОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "Банк,", Ложь);
	КонецЕсли;
	ОбластьМакета.Параметры.ПодтверждающийДокументВид     	 = ПаспортФизЛица.Вид;
	ОбластьМакета.Параметры.ПодтверждающийДокументСерия      = ПаспортФизЛица.Серия;
	ОбластьМакета.Параметры.ПодтверждающийДокументНомер      = ПаспортФизЛица.Номер;
	ОбластьМакета.Параметры.ПодтверждающийДокументКемВыдан   = ПаспортФизЛица.Выдан;
	ОбластьМакета.Параметры.ПодтверждающийДокументДатаВыдачи = ПаспортФизЛица.ДатаВыдачи;
	ТабДокумент.Вывести(ОбластьМакета);

	Если (НазваниеМакета = "ДоверенностьСтраница") ТОгда
		ОбластьМакета = Макет.ПолучитьОбласть("Отступ");
		ТабДокумент.Вывести(ОбластьМакета);
	Иначе
// Серна - Начало
		//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
// Серна - Конец
	КонецЕсли;
	ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяСторонаШапка");
	ТабДокумент.Вывести(ОбластьМакета);

	Если (НазваниеМакета = "ДоверенностьБланк") Тогда
		Если (ВыборкаСтрокТовары.Количество() > 6) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			Сообщить(НСтр("ru='Количество строк в табличной части больше шести.Типовая форма М-2 ""Доверенность"" рассчитана на шесть строк!';uk='Кількість рядків у табличній частині більше шести.Типова форма М-2 ""Довіреність"" розрахована на шість рядків!'"), СтатусСообщения.Важное);
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаВысокая");
		КонецЕсли;
	Иначе 
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСПереносом");
	КонецЕсли;		
	
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
// Серна - Начало
		лКоличество = ВыборкаСтрокТовары.Количество;
		Если ВыборкаСтрокТовары.ЕдиницаПоКлассификатору.Наименование = "т" Тогда
			лКоличествоПропись = ФормированиеПечатныхФорм.КоличествоПрописью(Цел(лКоличество), КодЯзыкаПечать) + " тн" + ?(лКоличество = Цел(лКоличество), "", " " + Строка((лКоличество - Цел(лКоличество)) * 1000 ) + " кг");
		Иначе
			лКоличествоПропись = ФормированиеПечатныхФорм.КоличествоПрописью(ВыборкаСтрокТовары.Количество, КодЯзыкаПечать);
		КонецЕсли;
		ОбластьМакета.Параметры.КоличествоПрописью = лКоличествоПропись;
// Серна - Конец
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	Если (НазваниеМакета = "Доверенность") или (НазваниеМакета = "ДоверенностьСтраница") Тогда
	
		ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяСторонаПодвал");
		
		Руководители = ОбщегоНазначения.ОтветственныеЛица(Шапка.Организация, Шапка.ДатаДокумента);
// Серна - Начало
		ПодписьРуководителя = СсылкаНаОбъект.ПодписьРуководителя;
		Если Не ЗначениеЗаполнено(ПодписьРуководителя) Тогда
			ПодписьРуководителя = Руководители.РуководительФИО;
		КонецЕсли;
		лстрФизЛицо = ОбщегоНазначения.ДанныеФизЛица(СсылкаНаОбъект.Организация, СсылкаНаОбъект.ПодписьРуководителя, СсылкаНаОбъект.Дата);
		лФИОРуководителя = ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(лстрФизЛицо.Фамилия, лстрФизЛицо.Имя, лстрФизЛицо.Отчество, Истина); // Кратко
		Если Не ЗначениеЗаполнено(лФИОРуководителя) Тогда лФИОРуководителя = ПодписьРуководителя.Наименование; КонецЕсли;
		
		ПодписьГлавногоБухгалтера = СсылкаНаОбъект.ПодписьГлавногоБухгалтера;
		Если Не ЗначениеЗаполнено(ПодписьГлавногоБухгалтера) Тогда
			ПодписьГлавногоБухгалтера = Руководители.ГлавныйБухгалтерФИО;
		КонецЕсли;
		лстрФизЛицо = ОбщегоНазначения.ДанныеФизЛица(СсылкаНаОбъект.Организация, ПодписьГлавногоБухгалтера, СсылкаНаОбъект.Дата);
		лФИОГлавногоБухгалтера = ОбщегоНазначения.ПолучитьФамилиюИмяОтчество(лстрФизЛицо.Фамилия, лстрФизЛицо.Имя, лстрФизЛицо.Отчество, Истина); // Кратко
		Если Не ЗначениеЗаполнено(лФИОГлавногоБухгалтера) Тогда лФИОГлавногоБухгалтера = ПодписьГлавногоБухгалтера.Наименование; КонецЕсли;
		
		ОбластьМакета.Параметры.ФИОРуководителя = лФИОРуководителя;
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = лФИОГлавногоБухгалтера;
		// Определим должности "подписантов"
		лЗапрос = Новый Запрос;
		лЗапрос.УстановитьПараметр("Дата", СсылкаНаОбъект.Дата);
		лЗапрос.УстановитьПараметр("Организация", СсылкаНаОбъект.Организация);
		лЗапрос.Текст =
		"ВЫБРАТЬ Рег.ДолжностьДляДоверенностей КАК Должность
		|ИЗ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&Дата, СтруктурнаяЕдиница = &Организация И ФизическоеЛицо = &ФизическоеЛицо) КАК Рег";
		лЗапрос.УстановитьПараметр("ФизическоеЛицо", ПодписьРуководителя);
		лтзРез = лЗапрос.Выполнить().Выгрузить();
		Если лтзРез.Количество()>0 Тогда
			ОбластьМакета.Параметры.ДолжностьРуководителяПредприятия = СокрЛП(лтзРез[0].Должность);
		Иначе
			ОбластьМакета.Параметры.ДолжностьРуководителяПредприятия = "Керівник підприємства";
		КонецЕсли;
		лЗапрос.УстановитьПараметр("ФизическоеЛицо", ПодписьГлавногоБухгалтера);
		лтзРез = лЗапрос.Выполнить().Выгрузить();
		Если лтзРез.Количество()>0 Тогда
			ОбластьМакета.Параметры.ДолжностьГлавногоБухгалтера = СокрЛП(лтзРез[0].Должность);
		Иначе
			ОбластьМакета.Параметры.ДолжностьГлавногоБухгалтера = "Головний бухгалтер";
		КонецЕсли;
// Серна - Конец
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьЗначениеСвойства(Организация, ИмяСвойства)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЗначенияСвойствОбъектов.Объект,
	               |	ЗначенияСвойствОбъектов.Свойство,
	               |	ЗначенияСвойствОбъектов.Значение
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Объект = &Организация
	               |	И ЗначенияСвойствОбъектов.Свойство.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Наименование", ИмяСвойства);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат[0].Значение;
				   
КонецФункции

