Функция Печать() Экспорт
	
	// Для отладки
	лТест = БИТ_МСФО_Серна.СчетМожноИспользоватьВПроводках("1091");
	
	Объект = СсылкаНаОбъект;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаДок",      СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("Организация",  СсылкаНаОбъект.Организация);
	Запрос.УстановитьПараметр("СписокНМА",    СсылкаНаОбъект.НМА.ВыгрузитьКолонку("НематериальныйАктив"));                    
	Запрос.УстановитьПараметр("Ссылка",       СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("Бухгалтер"   , Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписаниеНМА.Ссылка.Организация КАК Организация,
	|	СписаниеНМА.Ссылка.Организация.НаименованиеПолное КАК НаименованиеПолноеОрганизации,
	|	КодыОрганизации.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	Руководитель.ФизическоеЛицо КАК ФИОРук,
	|	Бухгалтер.ФизическоеЛицо КАК ФИОБух,
	|	СписаниеНМА.Ссылка.Дата КАК ДатаДок,
	|	СписаниеНМА.Ссылка.Номер КАК НомерДок,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СписаниеНМА.НематериальныйАктив.НаименованиеПолное КАК СТРОКА(100))) = """"
	|			ТОГДА СписаниеНМА.НематериальныйАктив.Наименование
	|		ИНАЧЕ СписаниеНМА.НематериальныйАктив.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеПолное,
	|	СписаниеНМА.НематериальныйАктив.Код КАК ИнвентарныйНомер,
	|	СписаниеНМА.НематериальныйАктив.ПрочиеСведения КАК ПрочиеСведения,
	|	СписаниеНМА.Ссылка.СчетСписанияБУ КАК СчетСписанияБУ,
	|	СписаниеНМА.СтоимостьБУ КАК ПервоначальнаяСтоимость,
	|	СписаниеНМА.СтоимостьБУ - СписаниеНМА.АмортизацияБУ - СписаниеНМА.АмортизацияЗаМесяцБУ КАК ОстаточнаяСтоимость,
	|	ПервоначальныеСведенияНМА_БУ.СрокПолезногоИспользования КАК СрокИспользования,
	|	ПервоначальныеСведенияНМА_БУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	СчетаУчетаНМА_БУ.СчетУчета КАК СчетУчетаБУ,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.МОЛ,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение,
	|	РаботникиОрганизацийСрезПоследних.Должность
	|ИЗ
	|	Документ.СписаниеНМА.НМА КАК СписаниеНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|				&ДатаДок,
	|				Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведенияНМА_БУ
	|		ПО СписаниеНМА.Ссылка.Организация = ПервоначальныеСведенияНМА_БУ.Организация
	|			И СписаниеНМА.НематериальныйАктив = ПервоначальныеСведенияНМА_БУ.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&ДатаДок,
	|				Организация = &Организация
	|					И НематериальныйАктив В (&СписокНМА)) КАК СчетаУчетаНМА_БУ
	|		ПО СписаниеНМА.Ссылка.Организация = СчетаУчетаНМА_БУ.Организация
	|			И СписаниеНМА.НематериальныйАктив = СчетаУчетаНМА_БУ.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыОрганизации.СрезПоследних(&ДатаДок, Организация = &Организация) КАК КодыОрганизации
	|		ПО СписаниеНМА.Ссылка.Организация = КодыОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаДок,
	|				СтруктурнаяЕдиница = &Организация
	|					И ОтветственноеЛицо = &Бухгалтер) КАК Бухгалтер
	|		ПО СписаниеНМА.Ссылка.Организация = Бухгалтер.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаДок,
	|				СтруктурнаяЕдиница = &Организация
	|					И ОтветственноеЛицо = &Руководитель) КАК Руководитель
	|		ПО СписаниеНМА.Ссылка.Организация = Руководитель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеНМАБухгалтерскийУчет.СрезПоследних(&ДатаДок, ) КАК МестонахождениеНМАБухгалтерскийУчетСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК РаботникиОрганизацийСрезПоследних
	|			ПО МестонахождениеНМАБухгалтерскийУчетСрезПоследних.МОЛ = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|				И МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение = РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|		ПО СписаниеНМА.НематериальныйАктив = МестонахождениеНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|ГДЕ
	|	СписаниеНМА.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеНМА_НА3";
	Макет         = ПолучитьМакет("НА3");
	НеПервый      = Ложь;
	ВыборкаПоКомиссии = РаботаСДиалогами.ПолучитьСведенияОКомиссии(Объект);

	Пока Выборка.Следующий() Цикл
	
		ОбластьМакета = Макет.ПолучитьОбласть("НА3");
		Параметры     = ОбластьМакета.Параметры;
		Параметры.Заполнить(Выборка);
		Параметры.Заполнить(ВыборкаПоКомиссии);
		
		Параметры.НомерДок 	  = ОбщегоНазначения.ПолучитьНомерНаПечать(Объект);
		
		Параметры.КодПоЕДРПОУ = Выборка.КодПоЕДРПОУ;
		Параметры.ФИОРук      = ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(Выборка.ФИОРук);
		Параметры.ФИОБух      = ПроцедурыУправленияПерсоналом.ФамилияИнициалыФизЛица(Выборка.ФИОБух);
		
		Если НеПервый Тогда
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		Иначе
			
			НеПервый = Истина;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
	
	КонецЦикла;	
	
	ТабДокумент.ОбластьПечати = ТабДокумент.Область( , 2, , ТабДокумент.ШиринаТаблицы);

	Возврат ТабДокумент;

КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.СписаниеНМА");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	//возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Печатная форма НА3"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Печатная НА3");
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Печатная форма НА3";
	НоваяКоманда.Идентификатор = "ПечатьНА3"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовКлиентскогоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции
