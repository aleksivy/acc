Перем м6812Заполнено;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	лДокОбъект = БухСправка1.ПолучитьОбъект();
	лДокОбъект.Проводки.Очистить();
	лДокОбъект.ПроводкиМСФО.Очистить();
	лДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Признак,
	|	Рег.Счет КАК СчетДт,
	|	Рег.Субконто1 КАК СубконтоДт1,
	|	Рег.Субконто2 КАК СубконтоДт2,
	|	Рег.Субконто3 КАК СубконтоДт3,
	|	Рег.НалоговоеНазначение КАК НалоговоеНазначениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	-Рег.СуммаОборотДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(ДАТАВРЕМЯ(2015, 8, 1), ДАТАВРЕМЯ(2015, 8, 31, 23, 59, 59), День, Счет.Код = ""92"", , НЕ НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка), , ) КАК Рег
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	Рег.Счет,
	|	Рег.Субконто1,
	|	Рег.Субконто2,
	|	Рег.Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный),
	|	Рег.СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(ДАТАВРЕМЯ(2015, 8, 1), ДАТАВРЕМЯ(2015, 8, 31, 23, 59, 59), День, Счет.Код = ""92"", , НЕ НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка), , ) КАК Рег
	|
	|УПОРЯДОЧИТЬ ПО
	|	Признак,
	|	СчетДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	Сумма
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	лтзРез = лЗапрос.Выполнить().Выгрузить();
	лДокОбъект.Проводки.Загрузить(лтзРез);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Признак,
	|	Рег.Счет КАК СчетДт,
	|	Рег.Субконто1 КАК СубконтоДт1,
	|	Рег.Субконто2 КАК СубконтоДт2,
	|	Рег.Субконто3 КАК СубконтоДт3,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.Гривна) КАК ВалютаДт,
	|	Рег.НалоговоеНазначение КАК НалоговоеНазначениеДт,
	|	Рег.Intercompany КАК IntercompanyДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.МСФО.Вспомогательный) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.Гривна) КАК ВалютаКт,
	|	-Рег.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаДт,
	|	-Рег.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаКт,
	|	-Рег.СуммаОборотДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Обороты(ДАТАВРЕМЯ(2015, 8, 1), ДАТАВРЕМЯ(2015, 8, 31, 23, 59, 59), День, Счет.Код = ""92"", , НЕ НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка), , ) КАК Рег
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	Рег.Счет,
	|	Рег.Субконто1,
	|	Рег.Субконто2,
	|	Рег.Субконто3,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.Гривна),
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка),
	|	Рег.Intercompany,
	|	ЗНАЧЕНИЕ(ПланСчетов.МСФО.Вспомогательный),
	|	ЗНАЧЕНИЕ(Справочник.Валюты.Гривна),
	|	Рег.ВалютнаяСуммаОборотДт,
	|	Рег.ВалютнаяСуммаОборотДт,
	|	Рег.СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.МСФО.Обороты(ДАТАВРЕМЯ(2015, 8, 1), ДАТАВРЕМЯ(2015, 8, 31, 23, 59, 59), День, Счет.Код = ""92"", , НЕ НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка), , ) КАК Рег
	|
	|УПОРЯДОЧИТЬ ПО
	|	Признак,
	|	СчетДт,
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	Сумма
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	лтзРез = лЗапрос.Выполнить().Выгрузить();
	лДокОбъект.ПроводкиМСФО.Загрузить(лтзРез);
	
	лДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

Процедура СуммыНУ(Кнопка)
	лДокОбъект = БухСправка2.ПолучитьОбъект();
	лДокОбъект.Проводки.Очистить();
	лДокОбъект.ПроводкиМСФО.Очистить();
	лДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	лЗапрос = Новый Запрос;
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	Рег.Счет КАК СчетКт,
	|	Рег.Субконто1 КАК СубконтоКт1,
	|	Рег.Субконто2 КАК СубконтоКт2,
	|	Рег.Субконто3 КАК СубконтоКт3,
	|	Рег.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|	Рег.СуммаНУОстаток КАК СуммаНУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			ДАТАВРЕМЯ(2015, 8, 1),
	|			Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|				И НЕ Счет.УчетСуммНУ,
	|			,
	|			) КАК Рег
	|ГДЕ
	|	НЕ Рег.СуммаНУОстаток = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетДт,
	|	СчетКт,
	|	СубконтоКт1,
	|	СубконтоКт2,
	|	СубконтоКт3,
	|	НалоговоеНазначениеКт
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	лтзРез = лЗапрос.Выполнить().Выгрузить();
	лДокОбъект.Проводки.Загрузить(лтзРез);
	
	лДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

Процедура Заполнить6812(Кнопка)
	Если Не ЗначениеЗаполнено(БухСправка6812) Тогда Сообщить("Не указана бух.справка для распределения счета 6812!"); Возврат; КонецЕсли;
	Если Не ЗначениеЗаполнено(Договор) Тогда Сообщить("Не указан договор для распределения счета 6812!"); Возврат; КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаОстатков) Тогда Сообщить("Не указана дата остатков для распределения счета 6812!"); Возврат; КонецЕсли;
	Если Не НачалоДня(БухСправка6812.Дата) = НачалоДня(ДатаОстатков) Тогда Сообщить("Дата остатков не совпадает с датой бух.справки!"); Возврат; КонецЕсли;
	
	лДокОбъект = БухСправка6812.ПолучитьОбъект();
	лДокОбъект.Проводки.Очистить();
	лДокОбъект.Записать( ?(БухСправка6812.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись) );
	
	// Определяем таблицу с остатками по счету 6812
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("ДатаОстатков", БухСправка6812.Дата);
	лЗапрос.УстановитьПараметр("Договор", Договор);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Субконто2,
	|	Рег.Субконто3,
	|	Рег.Валюта,
	|	Рег.СуммаОстатокКт,
	|	Рег.ВалютнаяСуммаОстатокКт
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОстатков, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВИностраннойВалюте), , Субконто2 = &Договор) КАК Рег
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.СубконтоКт3 КАК Субконто3,
	|	МАКСИМУМ(Рег.Регистратор) КАК Регистратор
	|ПОМЕСТИТЬ Движения
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаОстатков, МЕСЯЦ, -6), ДЕНЬ), КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ), Регистратор, СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТекущиеСчетаВИностраннойВалюте), , СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВИностраннойВалюте), , СубконтоКт2 = &Договор) КАК Рег
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.СубконтоКт3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Субконто3 КАК Субконто3,
	|	Остатки.Валюта,
	|	Остатки.СуммаОстатокКт КАК СуммаГрн,
	|	Остатки.ВалютнаяСуммаОстатокКт КАК СуммаДол,
	|	ВЫБОР
	|		КОГДА Движения.Регистратор ЕСТЬ NULL 
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Признак,
	|	Движения.Регистратор КАК Регистратор
	|ИЗ
	|	Остатки КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Движения КАК Движения
	|		ПО Остатки.Субконто3 = Движения.Субконто3
	|
	|УПОРЯДОЧИТЬ ПО
	|		Остатки.Субконто3.Дата
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	лтзОстатки = лЗапрос.Выполнить().Выгрузить();
	Остатки.Загрузить( лтзОстатки );
	
	
	// Определяем таблицу с продажами по счету 362
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("ДатаОстатков", ДатаОстатков);
	лЗапрос.УстановитьПараметр("Валюта", Договор.ВалютаВзаиморасчетов);
	лЗапрос.УстановитьПараметр("Контрагент", Договор.Владелец);
	лЗапрос.УстановитьПараметр("ГленкорРамочныйДоговор", Договор.ГленкорРамочныйДоговор);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Рег.СубконтоДт2 КАК Договор,
	|	НАЧАЛОПЕРИОДА(Рег.Регистратор.Дата, ДЕНЬ) КАК ДатаПродажи,
	|	Рег.Регистратор КАК РасходнаяНакладная,
	|	ИСТИНА КАК Распределять,
	|	СУММА(Рег.СуммаОборот) КАК СуммаГрн,
	|	СУММА(Рег.ВалютнаяСуммаОборотДт) КАК СуммаДол
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			НАЧАЛОПЕРИОДА(&ДатаОстатков, ДЕНЬ),
	|			КОНЕЦПЕРИОДА(&ДатаОстатков, МЕСЯЦ),
	|			Регистратор,
	|			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСИностраннымиПокупателями),
	|			,
	|			СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходОтРеализацииРаботИУслуг),
	|			,
	|			СубконтоДт1 = &Контрагент
	|				И СубконтоДт2.ГленкорРамочныйДоговор = &ГленкорРамочныйДоговор
	|				И ВалютаДт = &Валюта) КАК Рег
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Рег.Регистратор.Дата, ДЕНЬ),
	|	Рег.Регистратор,
	|	Рег.СубконтоДт2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПродажи,
	|	Рег.Регистратор,
	|	Рег.СубконтоДт2
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	лтзПродажи = лЗапрос.Выполнить().Выгрузить();
	Продажи.Загрузить( лтзПродажи );
	
	м6812Заполнено = Истина;
	
	// Если сумма остатков больше суммы продаж для распределения, то больше ничего делать не нужно
	Если Остатки.Итог("СуммаДол") >= Продажи.Итог("СуммаДол") Тогда Возврат; КонецЕсли;
	// Снимем лишние галочки "Распределять", пока сумма продаж не будет меньше суммы сотатков
	лСуммаОстатковВсего = Остатки.Итог("СуммаДол");
	лСуммаПродажВсего = Продажи.Итог("СуммаДол");
	лКолвоСтрок = Продажи.Количество();
	лПоследняяРаспределеннаяДата = КонецДня( Продажи[ лКолвоСтрок-1 ].ДатаПродажи ) + 1;
	Для лНом = 1 По лКолвоСтрок Цикл
		лНомерСтроки = лКолвоСтрок - лНом;
		лСтрока = Продажи[ лНомерСтроки ];
		лСтрока.Распределять = Ложь;
		лСтрока.СуммаГрн = 0;
		лСтрока.СуммаДол = 0;
		лСуммаПродажВсего = Продажи.Итог("СуммаДол");
		Если лСуммаОстатковВсего >= лСуммаПродажВсего Тогда лПоследняяРаспределеннаяДата = НачалоДня( лСтрока.ДатаПродажи ); Прервать; КонецЕсли;
	КонецЦикла;
	// Снимем галочки "Распределять" за последний распределенный день. Не снимаем галочки только за первый день в таблице продаж
	лПерваяРаспределеннаяДата = НачалоДня( Продажи[ 0 ].ДатаПродажи );
	Для лНом = 1 По лКолвоСтрок Цикл
		лНомерСтроки = лКолвоСтрок - лНом;
		лСтрока = Продажи[ лНомерСтроки ];
		Если НачалоДня( лСтрока.ДатаПродажи ) > лПоследняяРаспределеннаяДата Тогда 
			Продолжить;
		ИначеЕсли НачалоДня( лСтрока.ДатаПродажи ) = лПерваяРаспределеннаяДата Тогда
			Прервать;
		ИначеЕсли НачалоДня( лСтрока.ДатаПродажи ) = лПоследняяРаспределеннаяДата Тогда
			//лСтрока.Распределять = Ложь;
			//лСтрока.СуммаГрн = 0;
			//лСтрока.СуммаДол = 0;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Распределить6812(Кнопка)
	Если Не ЗначениеЗаполнено(БухСправка6812) Тогда Сообщить("Не указана бух.справка для распределения счета 6812!"); Возврат; КонецЕсли;
	Если Не ЗначениеЗаполнено(Договор) Тогда Сообщить("Не указан договор для распределения счета 6812!"); Возврат; КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаОстатков) Тогда Сообщить("Не указана дата остатков для распределения счета 6812!"); Возврат; КонецЕсли;
	Если Не НачалоДня(БухСправка6812.Дата) = НачалоДня(ДатаОстатков) Тогда Сообщить("Дата остатков не совпадает с датой бух.справки!"); Возврат; КонецЕсли;
	Если Не м6812Заполнено Тогда Сообщить("Не заполнены табличные части остатков и продаж!"); Возврат; КонецЕсли;
	
	лДокОбъект = БухСправка6812.ПолучитьОбъект();
	лДокОбъект.Проводки.Очистить();
	Попытка
		лДокОбъект.Записать( ?(БухСправка6812.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись) );
	Исключение
		Возврат;
	КонецПопытки;
	
	лДоговорНадоРаспределить = Неопределено;
	лРасходнаяНакладная = Неопределено;
	лСуммаДолНадоРаспределить = 0;
	лСтрокаПродаж = Продажи[0];
	лНомерНачала = 0;
	Для каждого лСтрокаОстатков Из Остатки Цикл
		ОбработкаПрерыванияПользователя();
		лСуммаГрнНеРаспределена = лСтрокаОстатков.СуммаГрн;
		лСуммаДолНеРаспределена = лСтрокаОстатков.СуммаДол;
		лКурсДляРаспределения = лСуммаГрнНеРаспределена / лСуммаДолНеРаспределена;
		Пока (лСуммаДолНадоРаспределить > 0) Цикл
			лСуммаДолРаспределено = Мин(лСуммаДолНеРаспределена, лСуммаДолНадоРаспределить);
			Если (лСуммаДолРаспределено > 0) Тогда
				лНоваяСтрока = лДокОбъект.Проводки.Добавить();
				лНоваяСтрока.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВИностраннойВалюте;
				лНоваяСтрока.ВалютаДт = Договор.ВалютаВзаиморасчетов;
				лНоваяСтрока.СубконтоДт1 = Договор.Владелец;
				лНоваяСтрока.СубконтоДт2 = Договор;
				лНоваяСтрока.СубконтоДт3 = лСтрокаОстатков.Субконто3;
				лНоваяСтрока.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВИностраннойВалюте;
				лНоваяСтрока.ВалютаКт = Договор.ВалютаВзаиморасчетов;
				лНоваяСтрока.СубконтоКт1 = Договор.Владелец;
				лНоваяСтрока.СубконтоКт2 = лДоговорНадоРаспределить;
				лНоваяСтрока.СубконтоКт3 = лРасходнаяНакладная;
				лРасходнаяОбъект = лРасходнаяНакладная.ПолучитьОбъект();
				лРасходнаяОбъект.Сделка = лРасходнаяНакладная.Ссылка;
				лРасходнаяОбъект.Записать( РежимЗаписиДокумента.Запись );
				
				лСуммаГрнРаспределено = Окр(лСуммаДолРаспределено * лКурсДляРаспределения, 2);
				лНоваяСтрока.Сумма = лСуммаГрнРаспределено;
				лНоваяСтрока.ВалютнаяСуммаДт = лСуммаДолРаспределено;
				лНоваяСтрока.ВалютнаяСуммаКт = лСуммаДолРаспределено;
				
				лСуммаГрнНеРаспределена = лСуммаГрнНеРаспределена - лСуммаГрнРаспределено;
				лСтрокаПродаж.СуммаДол = лСтрокаПродаж.СуммаДол - лСуммаДолРаспределено;
				лСуммаДолНеРаспределена = лСуммаДолНеРаспределена - лСуммаДолРаспределено;
				лСуммаДолНадоРаспределить = лСуммаДолНадоРаспределить - лСуммаДолРаспределено;
			КонецЕсли;
			Если (лСтрокаПродаж.СуммаДол > 0) и (лСуммаДолНеРаспределена = 0) Тогда Прервать; КонецЕсли;
		КонецЦикла;
		Если (лСтрокаПродаж.СуммаДол > 0) и (лСуммаДолНеРаспределена = 0) Тогда Продолжить; КонецЕсли;
		Для ном=лНомерНачала По (Продажи.Количество()-1) Цикл
			лСтрокаПродаж = Продажи[ном];
			Если Не лСтрокаПродаж.Распределять Тогда Продолжить; КонецЕсли;
			лДоговорНадоРаспределить = лСтрокаПродаж.Договор;
			лРасходнаяНакладная = лСтрокаПродаж.РасходнаяНакладная;
			лСуммаДолРаспределено = Мин(лСуммаДолНеРаспределена, лСтрокаПродаж.СуммаДол);
			Если (лСуммаДолРаспределено > 0) Тогда
				лНоваяСтрока = лДокОбъект.Проводки.Добавить();
				лНоваяСтрока.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВИностраннойВалюте;
				лНоваяСтрока.ВалютаДт = Договор.ВалютаВзаиморасчетов;
				лНоваяСтрока.СубконтоДт1 = Договор.Владелец;
				лНоваяСтрока.СубконтоДт2 = Договор;
				лНоваяСтрока.СубконтоДт3 = лСтрокаОстатков.Субконто3;
				лНоваяСтрока.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВИностраннойВалюте;
				лНоваяСтрока.ВалютаКт = Договор.ВалютаВзаиморасчетов;
				лНоваяСтрока.СубконтоКт1 = Договор.Владелец;
				лНоваяСтрока.СубконтоКт2 = лДоговорНадоРаспределить;
				лНоваяСтрока.СубконтоКт3 = лРасходнаяНакладная;
				лРасходнаяОбъект = лРасходнаяНакладная.ПолучитьОбъект();
				лРасходнаяОбъект.Сделка = лРасходнаяНакладная.Ссылка;
				лРасходнаяОбъект.Записать( РежимЗаписиДокумента.Запись );
				
				лСуммаГрнРаспределено = Окр(лСуммаДолРаспределено * лКурсДляРаспределения, 2);
				лНоваяСтрока.Сумма = лСуммаГрнРаспределено;
				лНоваяСтрока.ВалютнаяСуммаДт = лСуммаДолРаспределено;
				лНоваяСтрока.ВалютнаяСуммаКт = лСуммаДолРаспределено;
				
				лСуммаГрнНеРаспределена = лСуммаГрнНеРаспределена - лСуммаГрнРаспределено;
				лСуммаДолНеРаспределена = лСуммаДолНеРаспределена - лСуммаДолРаспределено;
				лСтрокаПродаж.СуммаДол = лСтрокаПродаж.СуммаДол - лСуммаДолРаспределено;
			КонецЕсли;
			Если (лСтрокаПродаж.СуммаДол > 0) и (лСуммаДолНеРаспределена = 0) Тогда 
				лНомерНачала = ном+1; 
				лСуммаДолНадоРаспределить = лСтрокаПродаж.СуммаДол; 
				Прервать; 
			КонецЕсли;
			
		КонецЦикла;
		Если (Продажи.Итог("СуммаДол") = 0) Тогда Прервать; КонецЕсли;
	КонецЦикла;
	Попытка
		лДокОбъект.Записать( ?(БухСправка6812.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись) );
	Исключение
		м6812Заполнено = Ложь;
		Остатки.Очистить();
		Продажи.Очистить();
	    Сообщить("Ошибка при записи бух.справки! Выполните операцию повторно! " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	Если ПерепровестиРасходныеНакладные Тогда
		Для каждого лСтрокаПродаж Из Продажи Цикл
			Если Не лСтрокаПродаж.Распределять Тогда Продолжить; КонецЕсли;
			ОбработкаПрерыванияПользователя();
			Состояние("Перепроводится документ - " + лСтрокаПродаж.РасходнаяНакладная);
			лРасходнаяОбъект = лСтрокаПродаж.РасходнаяНакладная.ПолучитьОбъект();
			лРасходнаяОбъект.Записать( РежимЗаписиДокумента.Проведение );
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПродажиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	лСтрокаТекущая = Элемент.ТекущаяСтрока;
	Если Не лСтрокаТекущая.Распределять Тогда
		лСтрокаТекущая.СуммаГрн = 0;
		лСтрокаТекущая.СуммаДол = 0;
	КонецЕсли;
	Если (лСтрокаТекущая.СуммаДол = 0) и лСтрокаТекущая.Распределять Тогда лСтрокаТекущая.Распределять = Ложь; КонецЕсли;
	
	лПерваяРаспределеннаяДата = НачалоДня( Продажи[ 0 ].ДатаПродажи );
	лПоследняяРаспределеннаяДата = НачалоДня( лСтрокаТекущая.ДатаПродажи );
	лКолвоСтрок = Продажи.Количество();
	// Снимем галочки "Распределять" за последний распределенный день. Не снимаем галочки только за первый день в таблице продаж
	Для лНом = 1 По лКолвоСтрок Цикл
		лНомерСтроки = лКолвоСтрок - лНом;
		лСтрока = Продажи[ лНомерСтроки ];
		Если НачалоДня( лСтрока.ДатаПродажи ) > лПоследняяРаспределеннаяДата Тогда
			Если Не (лСтрока.СуммаДол = 0) или лСтрока.Распределять Тогда
				лСтрока.Распределять = Ложь;
				лСтрока.СуммаГрн = 0;
				лСтрока.СуммаДол = 0;
			КонецЕсли;
			Продолжить;
		ИначеЕсли НачалоДня( лСтрока.ДатаПродажи ) = лПерваяРаспределеннаяДата Тогда
			Прервать;
		ИначеЕсли НачалоДня( лСтрока.ДатаПродажи ) = лПоследняяРаспределеннаяДата Тогда
			лСтрока.Распределять = Ложь;
			лСтрока.СуммаГрн = 0;
			лСтрока.СуммаДол = 0;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПриОткрытии()
	м6812Заполнено = Ложь;
	
	Если Не ЗначениеЗаполнено(ДатаОстатков) Тогда ДатаОстатков = НачалоМесяца( НачалоМесяца(ТекущаяДата())-1 ); КонецЕсли;
	Если Не ЗначениеЗаполнено(Контрагент) Тогда 
		Контрагент = Справочники.Контрагенты.НайтиПоНаименованию("GLENCORE GRAIN BV");
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("КодПоЕДРПОУ", "000005259");
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Договор) Тогда 
		Договор = Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию("Master supply conttract2017/18 від 01.06.2017", Истина,,Контрагент);
	КонецЕсли;
КонецПроцедуры

Процедура БухСправка6812ПриИзменении(Элемент)
	м6812Заполнено = Ложь;
	Остатки.Очистить();
	Продажи.Очистить();
	ДатаОстатков = БухСправка6812.Дата;
КонецПроцедуры

Процедура ДоговорПриИзменении(Элемент)
	м6812Заполнено = Ложь;
	Остатки.Очистить();
	Продажи.Очистить();
КонецПроцедуры

Процедура ДатаОстатковПриИзменении(Элемент)
	м6812Заполнено = Ложь;
	Остатки.Очистить();
	Продажи.Очистить();
КонецПроцедуры
