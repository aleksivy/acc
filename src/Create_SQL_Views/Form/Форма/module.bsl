Перем ТипыМетаданных;

Процедура КоманднаяПанельНастройкаПодключения(Кнопка)
	
	НастроитьСтрокуПодключения();
	
КонецПроцедуры

Процедура ДеревоМетаданныхПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	ТекСтрока = Элемент.ТекущаяСтрока;
	Метка = ТекСтрока.Метка%2;
	
	ТекСтрока.Метка = Метка;
	Для Каждого Стр Из ТекСтрока.Строки Цикл
		Стр.Метка=Метка;		
	КонецЦикла;
	
	Если ТекСтрока.Уровень()>0 Тогда
		Родитель = ТекСтрока.Родитель;
		Отбор = Новый Структура("Метка",1-Метка);
		Выборка = Родитель.Строки.НайтиСтроки(Отбор,Истина);
		Родитель.Метка = ?(Выборка.Количество()=0,Метка,2);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКуст(МетаИмя,МетаТип)
	
	Куст = ДеревоМетаданных.Строки.Добавить();
	Куст.Синоним = МетаИмя;
	Для Каждого МетаВид Из МетаТип Цикл
		Ветка = Куст.Строки.Добавить();
		Ветка.Синоним = МетаВид.Синоним;
		Ветка.ПолноеИмя = МетаВид.ПолноеИмя();
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДерево()
	
	ДеревоМетаданных.Строки.Очистить();
	
	//СтруктураБД = ПолучитьСтруктуруХраненияБазыДанных(,Истина);
	//СтруктураБД.Свернуть("Метаданные");
	//СтруктураБД.Сортировать("Метаданные");
	//
	//Текст = Новый ТекстовыйДокумент;
	//
	//
	//Для Каждого СтрокаБД Из СтруктураБД Цикл
	//	
	//	Текст.УстановитьТекст(СтрЗаменить(СтрокаБД.Метаданные,".",Символы.ПС));
	//	Если Текст.КоличествоСтрок()<2 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Куст = ДеревоМетаданных;
	//	ПолноеИмя = "";
	//	
	//	Для ш=1 По 2 Цикл
	//		
	//		ПолноеИмя = ПолноеИмя + "." + Текст.ПолучитьСтроку(ш);
	//		МетаОбъект = Метаданные.НайтиПоПолномуИмени(Сред(ПолноеИмя,2));
	//		Синоним = МетаОбъект.Синоним;
	//		
	//		ТекСтрока = Куст.Строки.Найти(Синоним,"Синоним");
	//		Если ТекСтрока=Неопределено Тогда
	//			ТекСтрока = Куст.Строки.Добавить();
	//			ТекСтрока.Синоним = Синоним;
	//			ТекСтрока.ПолноеИмя = ПолноеИмя;
	//		КонецЕсли;
	//		Куст = ТекСтрока;
	//		
	//	КонецЦикла;
	//	
	//КонецЦикла;
		
	Для Каждого Стр Из ТипыМетаданных Цикл
		ЗаполнитьКуст(Стр.Синоним,Стр.Тип);
	КонецЦикла;
	//ДеревоМетаданных.Строки.Сортировать("Синоним",1);

КонецПроцедуры

Процедура СоздатьМассивОбъектовМетаданных()
	
	МассивОбъектовМетаданных.Очистить();
	
	Отбор = Новый Структура("Метка",1);
	Выборка = ДеревоМетаданных.Строки.НайтиСтроки(Отбор,Истина);
	
	Для Каждого Объект Из Выборка Цикл
		
		Если Объект.Уровень()=0 Тогда
			Продолжить;
		КонецЕсли;
		
		МетаОбъект = Метаданные.НайтиПоПолномуИмени(Объект.ПолноеИмя);
		
		Если МетаОбъект=Неопределено Тогда
		ИначеЕсли МассивОбъектовМетаданных.Найти(МетаОбъект)=Неопределено Тогда
			МассивОбъектовМетаданных.Добавить(МетаОбъект);
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если Не ПодключитьSQL() Тогда
		Сообщить("Не подключена база SQL", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	Сообщить("Подключена база SQL");
	
	СоздатьМассивОбъектовМетаданных();
	СформироватьВьюхи();
	
	Если ОтключитьSQL() Тогда
		Сообщить("Отключена база SQL");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ИнформационнаяБаза = Неопределено Тогда
		Сообщить("Информационная база недоступна", СтатусСообщения.Внимание);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЗаполнитьДерево();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СохранитьЗначение("СтрокаПодключенияSQL",СтрокаПодключенияSQL);
КонецПроцедуры

Процедура КоманднаяПанельУстановитьФлажки(Кнопка)
	Для Каждого ТекСтр Из ДеревоМетаданных.Строки Цикл
		УстановитьФлажки(ТекСтр);		
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанельСнятьФлажки(Кнопка)
	Для Каждого ТекСтр Из ДеревоМетаданных.Строки Цикл
		УстановитьФлажки(ТекСтр,0);		
	КонецЦикла;
КонецПроцедуры

Процедура УстановитьФлажки(ТекСтр,Флаг=1)
	
	Для Каждого ПодСтр Из ТекСтр.Строки Цикл
		УстановитьФлажки(ПодСтр,Флаг);
	КонецЦикла;	
	ТекСтр.Метка = Флаг;
	
КонецПроцедуры


ТипыМетаданных = Новый ТаблицаЗначений;
ТипыМетаданных.Колонки.Добавить("Тип");
ТипыМетаданных.Колонки.Добавить("Синоним");

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.ПланыОбмена;
НоваяСтрока.Синоним = "Планы обмена";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.Константы;
НоваяСтрока.Синоним = "Константы";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.Справочники;
НоваяСтрока.Синоним = "Справочники";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.Документы;
НоваяСтрока.Синоним = "Документы";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.Последовательности;
НоваяСтрока.Синоним = "Последовательности";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.ЖурналыДокументов;
НоваяСтрока.Синоним = "Журналы документов";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.Перечисления;
НоваяСтрока.Синоним = "Перечисления";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.ПланыВидовХарактеристик;
НоваяСтрока.Синоним = "Планы видов характеристик";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.ПланыСчетов;
НоваяСтрока.Синоним = "Планы счетов";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.ПланыВидовРасчета;
НоваяСтрока.Синоним = "Планы видов расчета";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.РегистрыСведений;
НоваяСтрока.Синоним = "Регистры сведений";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.РегистрыНакопления;
НоваяСтрока.Синоним = "Регистры накопления";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.РегистрыБухгалтерии;
НоваяСтрока.Синоним = "Регистры бухгалтерии";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.РегистрыРасчета;
НоваяСтрока.Синоним = "Регистры расчета";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.БизнесПроцессы;
НоваяСтрока.Синоним = "Бизнес-процессы";

НоваяСтрока=ТипыМетаданных.Добавить();
НоваяСтрока.Тип = Метаданные.Задачи;
НоваяСтрока.Синоним = "Задачи";
