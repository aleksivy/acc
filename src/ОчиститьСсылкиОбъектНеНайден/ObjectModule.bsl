// Инициализировать
//
Процедура Инициализировать() Экспорт
	// Регистр сведений СоответствиеОбъектовДляОбмена
	лЗапрос = Новый Запрос("ВЫБРАТЬ Рег.УзелОбмена ИЗ РегистрСведений.СоответствиеОбъектовДляОбмена КАК Рег СГРУППИРОВАТЬ ПО Рег.УзелОбмена");
	лВыборка = лЗапрос.Выполнить().Выбрать();
#Если Клиент Тогда
	Если лВыборка.Количество()>0 Тогда
		Сообщить("Очищаем Регистр сведений СоответствиеОбъектовДляОбмена");
	КонецЕсли;
#КонецЕсли	
	Пока лВыборка.Следующий() Цикл
		лНаборЗаписей = РегистрыСведений.СоответствиеОбъектовДляОбмена.СоздатьНаборЗаписей();
		лНаборЗаписей.Отбор.УзелОбмена.Установить( лВыборка.УзелОбмена );
		лНаборЗаписей.Прочитать();
		лНаборЗаписей.Очистить();
		лНаборЗаписей.Записать();
	КонецЦикла;
	
	// Регистр сведений ггуСтатусыВходящихНН
	лЗапрос = Новый Запрос("ВЫБРАТЬ Рег.НалоговаяНакладная ИЗ РегистрСведений.ггуСтатусыВходящихНН КАК Рег ГДЕ Рег.НалоговаяНакладная.Номер ЕСТЬ NULL СГРУППИРОВАТЬ ПО Рег.НалоговаяНакладная");
	лВыборка = лЗапрос.Выполнить().Выбрать();
#Если Клиент Тогда
	Если лВыборка.Количество()>0 Тогда
		Сообщить("Очищаем Регистр сведений ггуСтатусыВходящихНН");
	КонецЕсли;
#КонецЕсли	
	Пока лВыборка.Следующий() Цикл
		лНаборЗаписей = РегистрыСведений.ггуСтатусыВходящихНН.СоздатьНаборЗаписей();
		лНаборЗаписей.Отбор.НалоговаяНакладная.Установить( лВыборка.НалоговаяНакладная );
		лНаборЗаписей.Прочитать();
		лНаборЗаписей.Очистить();
		лНаборЗаписей.Записать();
	КонецЦикла;
	
	// Регистр сведений БИТ_МСФО_ПараметрыДокументов
	лЗапрос = Новый Запрос("ВЫБРАТЬ Рег.Документ ИЗ РегистрСведений.БИТ_МСФО_ПараметрыДокументов КАК Рег ГДЕ Рег.Документ.Номер ЕСТЬ NULL СГРУППИРОВАТЬ ПО Рег.Документ");
	лВыборка = лЗапрос.Выполнить().Выбрать();
#Если Клиент Тогда
	Если лВыборка.Количество()>0 Тогда
		Сообщить("Очищаем Регистр сведений БИТ_МСФО_ПараметрыДокументов");
	КонецЕсли;
#КонецЕсли	
	Пока лВыборка.Следующий() Цикл
		лНаборЗаписей = РегистрыСведений.БИТ_МСФО_ПараметрыДокументов.СоздатьНаборЗаписей();
		лНаборЗаписей.Отбор.Документ.Установить( лВыборка.Документ );
		лНаборЗаписей.Прочитать();
		лНаборЗаписей.Очистить();
		лНаборЗаписей.Записать();
	КонецЦикла;
	
	// Регистр сведений ггуКурсыПоПриходам
	лЗапрос = Новый Запрос("ВЫБРАТЬ Рег.Приход ИЗ РегистрСведений.ггуКурсыПоПриходам КАК Рег ГДЕ Рег.Приход.Номер ЕСТЬ NULL СГРУППИРОВАТЬ ПО Рег.Приход");
	лВыборка = лЗапрос.Выполнить().Выбрать();
#Если Клиент Тогда
	Если лВыборка.Количество()>0 Тогда
		Сообщить("Очищаем Регистр сведений ггуКурсыПоПриходам");
	КонецЕсли;
#КонецЕсли	
	Пока лВыборка.Следующий() Цикл
		лНаборЗаписей = РегистрыСведений.ггуКурсыПоПриходам.СоздатьНаборЗаписей();
		лНаборЗаписей.Отбор.Приход.Установить( лВыборка.Приход );
		лНаборЗаписей.Прочитать();
		лНаборЗаписей.Очистить();
		лНаборЗаписей.Записать();
	КонецЦикла;
	
	// Ссылки на Справочник ДоговорыКонтрагентов в регистре сведений ЗначенияСвойствОбъектов
	лИмяРегистра = "ЗначенияСвойствОбъектов";
	лЗапрос = Новый Запрос("ВЫБРАТЬ Рег.Объект ИЗ РегистрСведений." + лИмяРегистра + " КАК Рег ГДЕ ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Справочник.ДоговорыКонтрагентов) И Рег.Объект.Код ЕСТЬ NULL СГРУППИРОВАТЬ ПО Рег.Объект");
	лВыборка = лЗапрос.Выполнить().Выбрать();
#Если Клиент Тогда
	Если лВыборка.Количество()>0 Тогда
		Сообщить("Очищаем Регистр сведений ЗначенияСвойствОбъектов");
	КонецЕсли;
#КонецЕсли	
	Пока лВыборка.Следующий() Цикл
		лЗапись = РегистрыСведений[ лИмяРегистра ].СоздатьНаборЗаписей();
		лЗапись.Отбор.Объект.установить(лВыборка.Объект);
		лЗапись.Прочитать();
		лЗапись.Очистить();
		лЗапись.Записать();
	КонецЦикла;
	// Ссылки в регистре сведений ВерсииОбъектов
	лЗапрос = Новый Запрос;
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Справочник.ДоговорыКонтрагентов)
	|	И Рег.Объект.Код ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.ПеремещениеТоваров)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.ПлатежноеПоручениеВходящее)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.ПлатежноеПоручениеИсходящее)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.ПоступлениеТоваровУслуг)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.РеализацияТоваровУслуг)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.БИТ_МСФО_Операция)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.БухгалтерскаяСправка)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.РегистрацияВходящегоНалоговогоДокумента)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.ПеремещениеУслуг)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Рег.Объект
	|ИЗ
	|	РегистрСведений.гауВерсииОбъектов КАК Рег
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.ггуКорректировкаИсточниковФинансирования)
	|	И Рег.Объект.Номер ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Рег.Объект
	|";
	лВыборка = лЗапрос.Выполнить().Выбрать();
#Если Клиент Тогда
	Если лВыборка.Количество()>0 Тогда
		Сообщить("Очищаем Регистр сведений ВерсииОбъектов");
	КонецЕсли;
#КонецЕсли	
	Пока лВыборка.Следующий() Цикл
		лЗапись = РегистрыСведений.ВерсииОбъектов.СоздатьНаборЗаписей();
		лЗапись.Отбор.Объект.установить(лВыборка.Объект);
		лЗапись.Прочитать();
		лЗапись.Очистить();
		лЗапись.Записать();
	КонецЦикла;
	
	// Ссылки на Справочник ДоговорыКонтрагентов в Документах СчетНаОплатуПоставщика
	лЗапрос = Новый Запрос;
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	ДокТЧ.Ссылка,
	|	ДокТЧ.НомерСтроки,
	|	1 КАК Признак,
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.Ссылка.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.Ссылка.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоговорКонтрагентаШапка,
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Товары КАК ДокТЧ
	|ГДЕ
	|	(НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ИЛИ НЕ ДокТЧ.Ссылка.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.Ссылка.ДоговорКонтрагента.Код ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокТЧ.Ссылка,
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ДокТЧ.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.Ссылка.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.Ссылка.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокТЧ.Ссылка,
	|	ДокТЧ.НомерСтроки,
	|	2,
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Услуги КАК ДокТЧ
	|ГДЕ
	|	(НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ИЛИ НЕ ДокТЧ.Ссылка.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.Ссылка.ДоговорКонтрагента.Код ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ДокТЧ.Ссылка,
	|	ДокТЧ.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ДокТЧ.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				И ДокТЧ.ДоговорКонтрагента.Код ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	лВыборка = лЗапрос.Выполнить().Выбрать();
#Если Клиент Тогда
	Если лВыборка.Количество()>0 Тогда
		Сообщить("Очищаем документы СчетНаОплатуПоставщика");
	КонецЕсли;
#КонецЕсли	
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.ДоговорКонтрагентаШапка Тогда
			лОбъект = лВыборка.Ссылка.ПолучитьОбъект();
			лОбъект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			лОбъект.ОбменДанными.Загрузка = Истина;
			лОбъект.Записать( РежимЗаписиДокумента.Запись )
		КонецЕсли;
		Если лВыборка.ДоговорКонтрагента Тогда
			лОбъект = лВыборка.Ссылка.ПолучитьОбъект();
			лСтрока = ?(лВыборка.Признак = 1, лОбъект.Товары[ лВыборка.НомерСтроки-1 ], лОбъект.Услуги[ лВыборка.НомерСтроки-1 ]);
			лСтрока.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			лОбъект.ОбменДанными.Загрузка = Истина;
			лОбъект.Записать( РежимЗаписиДокумента.Запись )
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
