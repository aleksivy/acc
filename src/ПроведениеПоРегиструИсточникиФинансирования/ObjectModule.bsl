
// Инициализировать
//
Процедура Инициализировать() Экспорт
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда НачалоПериода = НачалоМесяца( ДобавитьМесяц(ТекущаяДата(), -1) ); КонецЕсли;
	Если Не ЗначениеЗаполнено(КонецПериода) Тогда КонецПериода = ТекущаяДата(); КонецЕсли;
	
	лЗапросПоДням = Новый Запрос;
	лЗапросПоДням.УстановитьПараметр("НачалоПериода", НачалоПериода);
	лЗапросПоДням.УстановитьПараметр("КонецПериода", КонецПериода);
	лЗапросПоДням.УстановитьПараметр("НеТолькоОтрицательные", НеТолькоОтрицательные);
	лЗапросПоДням.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Рег.Период, ДЕНЬ) КАК ПериодДень,
	|	ВЫБОР
	|		КОГДА Рег.СуммаКонечныйОстаток < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтрицательныйОстаток,
	|	Рег.Регистратор КАК Регистратор,
	|	Рег.Валюта,
	|	Рег.ПродажаВалюты,
	|	Рег.ДатаФинансирования,
	|	Рег.РезервПоДоговору,
	|	Рег.СуммаКонечныйОстаток
	|ПОМЕСТИТЬ ВсеОстатки
	|ИЗ
	|	РегистрНакопления.ггуИсточникиФинансирования.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ), КОНЕЦПЕРИОДА(&КонецПериода, ДЕНЬ), Регистратор, , ) КАК Рег
	|ГДЕ
	|	НЕ Рег.Регистратор = НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеОстатки.ПериодДень КАК ПериодДень
	|ИЗ
	|	ВсеОстатки КАК ВсеОстатки,
	|	(ВЫБРАТЬ
	|		МИНИМУМ(ВсеОстатки.ПериодДень) КАК ПериодДень
	|	ИЗ
	|		ВсеОстатки КАК ВсеОстатки
	|	ГДЕ
	|		ВсеОстатки.ОтрицательныйОстаток) КАК МинимальнаяДата
	|ГДЕ
	|	(&НеТолькоОтрицательные
	|			ИЛИ ВсеОстатки.ПериодДень >= МинимальнаяДата.ПериодДень)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеОстатки.ПериодДень
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВсеОстатки.ПериодДень
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	лтзДни = лЗапросПоДням.Выполнить().Выгрузить();
	
	лЗапросДокументПокрытиеНедостаткаСредств = Новый Запрос;
	лЗапросДокументПокрытиеНедостаткаСредств.Текст =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.ПометкаУдаления КАК ПометкаУдаления,
	|	Док.Проведен КАК Проведен
	|ИЗ
	|	Документ.ггуКорректировкаИсточниковФинансирования КАК Док
	|ГДЕ
	|	Док.Дата >= НАЧАЛОПЕРИОДА(&ТекущийДень, ДЕНЬ)
	|	И Док.Дата <= КОНЕЦПЕРИОДА(&ТекущийДень, ДЕНЬ)
	|	И Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ггуВидыОперацийКорректировкаИсточниковФинансирования.ПокрытиеНедостаткаСредств)
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Ссылка,
	|	Док.ПометкаУдаления,
	|	Док.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПометкаУдаления,
	|	Проведен,
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	лЗапросОтрицательныеОстаткиЗаДень = Новый Запрос;
	лЗапросОтрицательныеОстаткиЗаДень.Текст =
	"ВЫБРАТЬ
	|	Рег.Период КАК Период,
	|	Рег.Регистратор КАК Регистратор,
	|	Рег.Регистратор.СуммаДокумента КАК СуммаДокумента,
	|	Рег.Валюта,
	|	Рег.ПродажаВалюты,
	|	Рег.ДатаФинансирования,
	|	Рег.РезервПоДоговору,
	|	Рег.СуммаКонечныйОстаток
	|ПОМЕСТИТЬ Врем
	|ИЗ
	|	РегистрНакопления.ггуИсточникиФинансирования.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&ТекущийДень, ДЕНЬ), КОНЕЦПЕРИОДА(&ТекущийДень, ДЕНЬ), Регистратор, , ) КАК Рег
	|ГДЕ
	|	Рег.СуммаКонечныйОстаток < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Врем.Валюта,
	|	МИНИМУМ(Врем.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
	|ИЗ
	|	Врем КАК Врем
	|
	|СГРУППИРОВАТЬ ПО
	|	Врем.Валюта
	|";

	// Определим список документов для перепроведения
	лЗапросПоДокам = Новый Запрос;
	лЗапросПоДокам.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Рег.Регистратор) = ТИП(Документ.ггуКорректировкаИсточниковФинансирования)
	|				И Рег.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ггуВидыОперацийКорректировкаИсточниковФинансирования.ПокрытиеНедостаткаСредств)
	|			ТОГДА 4
	|		КОГДА НЕ Рег.СуммаПриход = Рег.СуммаРасход
	|				И (Рег.СуммаПриход > 0
	|					ИЛИ Рег.СуммаРасход < 0)
	|			ТОГДА 1
	|		КОГДА Рег.СуммаПриход = Рег.СуммаРасход
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК Признак,
	|	Рег.Период КАК Период,
	|	Рег.Регистратор КАК Регистратор,
	|	СУММА(Рег.СуммаПриход) КАК СуммаПриход,
	|	СУММА(Рег.СуммаРасход) КАК СуммаРасход
	|ИЗ
	|	РегистрНакопления.ггуИсточникиФинансирования.Обороты(НАЧАЛОПЕРИОДА(&ТекущийДень, ДЕНЬ), КОНЕЦПЕРИОДА(&ТекущийДень, ДЕНЬ), Регистратор, ) КАК Рег
	|ГДЕ
	|	(НЕ Рег.СуммаПриход = 0
	|			ИЛИ НЕ Рег.СуммаРасход = 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Рег.Регистратор) = ТИП(Документ.ггуКорректировкаИсточниковФинансирования)
	|				И Рег.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ггуВидыОперацийКорректировкаИсточниковФинансирования.ПокрытиеНедостаткаСредств)
	|			ТОГДА 4
	|		КОГДА НЕ Рег.СуммаПриход = Рег.СуммаРасход
	|				И (Рег.СуммаПриход > 0
	|					ИЛИ Рег.СуммаРасход < 0)
	|			ТОГДА 1
	|		КОГДА Рег.СуммаПриход = Рег.СуммаРасход
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ,
	|	Рег.Период,
	|	Рег.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Признак,
	|	Период,
	|	Регистратор
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Для каждого лДень Из лтзДни Цикл
		лТекущийДень = лДень.ПериодДень;
		
		// Найдем и отменим проведение корректировочного документа 'Покрытие недостатка средств'
		лЗапросДокументПокрытиеНедостаткаСредств.УстановитьПараметр("ТекущийДень", лТекущийДень);
		лтзДокументыПокрытиеНедостаткаСредств = лЗапросДокументПокрытиеНедостаткаСредств.Выполнить().Выгрузить();
		Для каждого лСтрока Из лтзДокументыПокрытиеНедостаткаСредств Цикл
			Если лСтрока.Проведен Тогда
				лДокОбъект = лСтрока.Ссылка.ПолучитьОбъект();
				лДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
		КонецЦикла;
		
		// Перепроведем документы за этот день
		лЗапросПоДокам.УстановитьПараметр("ТекущийДень", лТекущийДень);
		лтзРез = лЗапросПоДокам.Выполнить().Выгрузить();
		Для каждого лСтрока Из лтзРез Цикл
			#Если Клиент Тогда
				ОбработкаПрерыванияПользователя();
				Состояние("1. Формируем движения по - " + лСтрока.Регистратор);
			#КонецЕсли	
			лОбъект = лСтрока.Регистратор.ПолучитьОбъект();
			Если ТипЗнч(лСтрока.Регистратор) = Тип("ДокументСсылка.ПлатежноеПоручениеВходящее") Тогда
				Документы.ПлатежноеПоручениеВходящее.Сформировать_ггуИсточникиФинансирования( лОбъект );
			ИначеЕсли ТипЗнч(лСтрока.Регистратор) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
				Документы.РасходныйКассовыйОрдер.Сформировать_ггуИсточникиФинансирования( лОбъект );
			ИначеЕсли ТипЗнч(лСтрока.Регистратор) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда
				Документы.ПлатежноеПоручениеИсходящее.Сформировать_ггуИсточникиФинансирования( лОбъект );
			ИначеЕсли ТипЗнч(лСтрока.Регистратор) = Тип("ДокументСсылка.ггуКорректировкаИсточниковФинансирования") Тогда
				лОбъект.Записать( РежимЗаписиДокумента.Проведение );
			ИначеЕсли ТипЗнч(лСтрока.Регистратор) = Тип("ДокументСсылка.КорректировкаЗаписейРегистров") Тогда
			КонецЕсли;
		КонецЦикла;
		// Определим есть ли отрицательные остатки за текущий день после перепроведения
		лЗапросОтрицательныеОстаткиЗаДень.УстановитьПараметр("ТекущийДень", лТекущийДень);
		лВыборка = лЗапросОтрицательныеОстаткиЗаДень.Выполнить().Выбрать();
		Если (лВыборка.Количество() > 1) Тогда
			ОбщегоНазначения.СообщитьИнформацию("Отрицательные остатки по регистру 'ГГУ - Источники финансирования' на дату - " + Формат(лТекущийДень, "ДФ=dd.MM.yyyy"));
			Возврат;
		ИначеЕсли (лВыборка.Количество() > 0) Тогда
			Если лВыборка.Следующий() Тогда
				// Пробуем формировать служебный документ 'Покрытие недостатка средств'
				Если лтзДокументыПокрытиеНедостаткаСредств.Количество() = 0 Тогда
					// Создаем новый служебный документ
					лДокОбъект = Документы.ггуКорректировкаИсточниковФинансирования.СоздатьДокумент();
					лДокОбъект.Дата = НачалоДня(лТекущийДень) + 2;
					лДокОбъект.Организация = глЗначениеПеременной("ОсновнаяОрганизация");
					лДокОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь");
					лДокОбъект.ВидОперации = Перечисления.ггуВидыОперацийКорректировкаИсточниковФинансирования.ПокрытиеНедостаткаСредств;
				Иначе
					лСтрока = лтзДокументыПокрытиеНедостаткаСредств[0];
					лДокОбъект = лСтрока.Ссылка.ПолучитьОбъект();
					Если лСтрока.ПометкаУдаления Тогда лДокОбъект.УстановитьПометкуУдаления( Ложь ); КонецЕсли;
				КонецЕсли;
				лДокОбъект.ПерекрытьНедостатокСредств();
				лДокОбъект.Записать( РежимЗаписиДокумента.Проведение );
				
				//// Перепроведем расходные документы после создания служебного
				//Для каждого лСтрока Из лтзРез Цикл
				//	#Если Клиент Тогда
				//		ОбработкаПрерыванияПользователя();
				//		Состояние("2. Формируем движения по - " + лСтрока.Регистратор);
				//	#КонецЕсли	
				//	лОбъект = лСтрока.Регистратор.ПолучитьОбъект();
				//	Если ТипЗнч(лСтрока.Регистратор) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда
				//		Документы.ПлатежноеПоручениеИсходящее.Сформировать_ггуИсточникиФинансирования( лОбъект );
				//	ИначеЕсли ТипЗнч(лСтрока.Регистратор) = Тип("ДокументСсылка.ггуКорректировкаИсточниковФинансирования") Тогда
				//		лОбъект.Записать( РежимЗаписиДокумента.Проведение );
				//	КонецЕсли;
				//КонецЦикла;
				
				// Проверим еще раз есть ли отрицательные остатки за текущий день после формирования служебного документа
				лЗапросОтрицательныеОстаткиЗаДень.УстановитьПараметр("ТекущийДень", лТекущийДень);
				лВыборка = лЗапросОтрицательныеОстаткиЗаДень.Выполнить().Выбрать();
				Если лВыборка.Следующий() Тогда
					// Все еще остались отрицательные остатки. Сообщим об ошибке
					ОбщегоНазначения.СообщитьИнформацию("Отрицательные остатки по регистру 'ГГУ - Источники финансирования' на дату - " + Формат(лТекущийДень, "ДФ=dd.MM.yyyy"));
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // Инициализировать
